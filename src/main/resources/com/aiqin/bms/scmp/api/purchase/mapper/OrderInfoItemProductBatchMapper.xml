<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aiqin.bms.scmp.api.purchase.mapper.OrderInfoItemProductBatchMapper">
  <resultMap id="BaseResultMap" type="com.aiqin.bms.scmp.api.purchase.domain.pojo.order.OrderInfoItemProductBatch">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_code" jdbcType="VARCHAR" property="orderCode" />
    <result column="line_code" jdbcType="BIGINT" property="lineCode" />
    <result column="original_line_num" jdbcType="BIGINT" property="originalLineNum" />
    <result column="sku_code" jdbcType="VARCHAR" property="skuCode" />
    <result column="sku_name" jdbcType="VARCHAR" property="skuName" />
    <result column="total_count" jdbcType="BIGINT" property="totalCount" />
    <result column="actual_total_count" jdbcType="BIGINT" property="actualTotalCount" />
    <result column="product_time" jdbcType="TIMESTAMP" property="productTime" />
    <result column="batch_remark" jdbcType="VARCHAR" property="batchRemark" />
    <result column="batch_code" jdbcType="VARCHAR" property="batchCode" />
    <result column="lock_type" jdbcType="INTEGER" property="lockType" />
    <result column="supplier_name" jdbcType="VARCHAR" property="supplierName" />
    <result column="supplier_code" jdbcType="VARCHAR" property="supplierCode" />
  </resultMap>
  <sql id="Base_Column_List">
    id, order_code, line_code, original_line_num, sku_code, sku_name, total_count, actual_total_count,
    product_time, batch_remark, batch_code, lock_type, supplier_code,supplier_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_info_item_product_batch
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order_info_item_product_batch
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.aiqin.bms.scmp.api.purchase.domain.pojo.order.OrderInfoItemProductBatch">
    insert into order_info_item_product_batch (id, order_code, line_code,
      original_line_num, sku_code, sku_name, 
      total_count, actual_total_count, return_good_count,
      product_date, batch_remark, batch_id,
      batch_code, lock_type)
    values (#{id,jdbcType=BIGINT}, #{orderCode,jdbcType=VARCHAR}, #{lineCode,jdbcType=BIGINT},
      #{originalLineNum,jdbcType=BIGINT}, #{skuCode,jdbcType=VARCHAR}, #{skuName,jdbcType=VARCHAR}, 
      #{totalCount,jdbcType=BIGINT}, #{actualTotalCount,jdbcType=BIGINT},#{returnGoodCount,jdbcType=BIGINT},
      #{productDate,jdbcType=TIMESTAMP},  #{batchRemark,jdbcType=VARCHAR}, #{batchId,jdbcType=VARCHAR},
      #{batchCode,jdbcType=VARCHAR}, #{lockType,jdbcType=INTEGER})
  </insert>
  <insert id="insertList" parameterType="com.aiqin.bms.scmp.api.purchase.domain.pojo.order.OrderInfoItemProductBatch">
    insert into order_info_item_product_batch ( order_code, sku_code, sku_name,
      total_count, actual_total_count, product_date,
      batch_remark, batch_code, lock_type,
      supplier_code,supplier_name)
    values
     <foreach collection="list" item="item"  separator=",">
       (
       #{item.orderCode,jdbcType=VARCHAR},
       #{item.skuCode,jdbcType=VARCHAR},
       #{item.skuName,jdbcType=VARCHAR},
       #{item.totalCount,jdbcType=BIGINT},
       #{item.actualTotalCount,jdbcType=BIGINT},
       #{item.productDate,jdbcType=TIMESTAMP},
       #{item.batchRemark,jdbcType=VARCHAR},
       #{item.batchCode,jdbcType=VARCHAR},
       #{item.lockType,jdbcType=INTEGER},
       #{item.supplierCode,jdbcType=VARCHAR},
       #{item.supplierName,jdbcType=VARCHAR}
       )
     </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.aiqin.bms.scmp.api.purchase.domain.pojo.order.OrderInfoItemProductBatch">
    insert into order_info_item_product_batch
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderCode != null">
        order_code,
      </if>
      <if test="lineCode != null">
        line_code,
      </if>
      <if test="originalLineNum != null">
        original_line_num,
      </if>
      <if test="skuCode != null">
        sku_code,
      </if>
      <if test="skuName != null">
        sku_name,
      </if>
      <if test="totalCount != null">
        total_count,
      </if>
      <if test="actualTotalCount != null">
        actual_total_count,
      </if>
      <if test="productDate != null">
        product_date,
      </if>
      <if test="batchRemark != null">
        batch_remark,
      </if>
      <if test="batchCode != null">
        batch_code,
      </if>
      <if test="lockType != null">
        lock_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderCode != null">
        #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="lineCode != null">
        #{lineCode,jdbcType=BIGINT},
      </if>
      <if test="originalLineNum != null">
        #{originalLineNum,jdbcType=BIGINT},
      </if>
      <if test="skuCode != null">
        #{skuCode,jdbcType=VARCHAR},
      </if>
      <if test="skuName != null">
        #{skuName,jdbcType=VARCHAR},
      </if>
      <if test="totalCount != null">
        #{totalCount,jdbcType=BIGINT},
      </if>
      <if test="actualTotalCount != null">
        #{actualTotalCount,jdbcType=BIGINT},
      </if>
      <if test="productDate != null">
        #{productDate,jdbcType=TIMESTAMP},
      </if>
      <if test="batchRemark != null">
        #{batchRemark,jdbcType=VARCHAR},
      </if>
      <if test="batchCode != null">
        #{batchCode,jdbcType=VARCHAR},
      </if>
      <if test="lockType != null">
        #{lockType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
        insert into order_info_item_product_batch (id, order_code, line_code,
      original_line_num, sku_code, sku_name,
      total_count, actual_total_count, product_date,
      batch_remark, batch_code, lock_type
      )
    values
    <foreach collection="list" open="" close="" separator="," item="item">
    (#{item.id,jdbcType=BIGINT}, #{item.orderCode,jdbcType=VARCHAR}, #{item.lineCode,jdbcType=BIGINT},
      #{item.originalLineNum,jdbcType=BIGINT}, #{item.skuCode,jdbcType=VARCHAR}, #{item.skuName,jdbcType=VARCHAR},
      #{item.totalCount,jdbcType=BIGINT}, #{item.actualTotalCount,jdbcType=BIGINT}, #{item.productDate,jdbcType=TIMESTAMP},
      #{item.batchRemark,jdbcType=VARCHAR}, #{item.batchCode,jdbcType=VARCHAR}, #{item.lockType,jdbcType=INTEGER})
    </foreach>
  </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.aiqin.bms.scmp.api.purchase.domain.pojo.order.OrderInfoItemProductBatch">
    update order_info_item_product_batch
    <set>
      <if test="orderCode != null">
        order_code = #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="lineCode != null">
        line_code = #{lineCode,jdbcType=BIGINT},
      </if>
      <if test="originalLineNum != null">
        original_line_num = #{originalLineNum,jdbcType=BIGINT},
      </if>
      <if test="skuCode != null">
        sku_code = #{skuCode,jdbcType=VARCHAR},
      </if>
      <if test="skuName != null">
        sku_name = #{skuName,jdbcType=VARCHAR},
      </if>
      <if test="totalCount != null">
        total_count = #{totalCount,jdbcType=BIGINT},
      </if>
      <if test="actualTotalCount != null">
        actual_total_count = #{actualTotalCount,jdbcType=BIGINT},
      </if>
      <if test="productDate != null">
        product_date = #{productDate,jdbcType=TIMESTAMP},
      </if>
      <if test="batchRemark != null">
        batch_remark = #{batchRemark,jdbcType=VARCHAR},
      </if>
      <if test="batchCode != null">
        batch_code = #{batchCode,jdbcType=VARCHAR},
      </if>
      <if test="lockType != null">
        lock_type = #{lockType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aiqin.bms.scmp.api.purchase.domain.pojo.order.OrderInfoItemProductBatch">
    update order_info_item_product_batch
    set order_code = #{orderCode,jdbcType=VARCHAR},
      line_code = #{lineCode,jdbcType=BIGINT},
      original_line_num = #{originalLineNum,jdbcType=BIGINT},
      sku_code = #{skuCode,jdbcType=VARCHAR},
      sku_name = #{skuName,jdbcType=VARCHAR},
      total_count = #{totalCount,jdbcType=BIGINT},
      actual_total_count = #{actualTotalCount,jdbcType=BIGINT},
      product_date = #{productDate,jdbcType=TIMESTAMP},
      batch_remark = #{batchRemark,jdbcType=VARCHAR},
      batch_code = #{batchCode,jdbcType=VARCHAR},
      lock_type = #{lockType,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="listDetailForSap" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from order_info_item_product_batch
    where
    order_code in(
    <foreach collection="orderCodeList" separator="," item="item">
      #{item}
    </foreach>
    )
  </select>
  <select id="selectList" resultType="com.aiqin.bms.scmp.api.purchase.domain.response.order.QueryOrderInfoItemBatchRespVO">
    select
    order_code as orderCode, line_code as lineCode, sku_code as skuCode, sku_name as skuName, total_count as totalCount,
    actual_total_count as actualTotalCount, product_date as productDate, batch_remark as batchRemark,
    batch_code as batchCode, lock_type as lockType
    from order_info_item_product_batch
    where order_code = #{orderCode,jdbcType=VARCHAR}
  </select>
</mapper>