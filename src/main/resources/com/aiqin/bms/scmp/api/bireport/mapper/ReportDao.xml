<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aiqin.bms.scmp.api.bireport.dao.ReportDao">

    <resultMap id="supplierArrivalRateResultMap" type="com.aiqin.bms.scmp.api.bireport.domain.response.SupplierArrivalRateRespVo">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="begin_run_time" jdbcType="VARCHAR" property="beginRunTime"/>
        <result column="finish_run_time" jdbcType="VARCHAR" property="finishRunTime"/>
        <result column="supplier_code" jdbcType="VARCHAR" property="supplierCode"/>
        <result column="supplier_name" jdbcType="VARCHAR" property="supplierName"/>
        <result column="category_code" jdbcType="VARCHAR" property="categoryCode"/>
        <result column="category_name" jdbcType="VARCHAR" property="categoryName"/>
        <result column="transport_center_code" jdbcType="VARCHAR" property="transportCenterCode"/>
        <result column="pre_inbound_num" jdbcType="VARCHAR" property="preInboundNum"/>
        <result column="pre_tax_amount" jdbcType="VARCHAR" property="preTaxAmount"/>
        <result column="pra_inbound_num" jdbcType="VARCHAR" property="praInboundNum"/>
        <result column="pra_tax_amount" jdbcType="VARCHAR" property="praTaxAmount"/>
        <result column="pra_tax_amount_rate" jdbcType="VARCHAR" property="praTaxAmountRate"/>
        <result column="responsible_person_name" jdbcType="VARCHAR" property="responsiblePersonName"/>
    </resultMap>

    <sql id="select_supplier_arrival_rate">
        <where>
            1=1
            <if test="supplierCode!=null and supplierCode!=''">
                and bsar.supplier_code = #{supplierCode}
            </if>
            <if test="supplierName!=null and supplierName!=''">
                and bsar.supplier_name like concat('%', #{supplierName}, '%')
            </if>
            <if test="transportCenterCode!=null and transportCenterCode!=''">
                and bsar.transport_center_code = #{transportCenterCode}
            </if>
            <if test="categoryCode!=null and categoryCode!=''">
                and bsar.category_code = #{categoryCode}
            </if>
            <if test="categoryName!=null and categoryName!=''">
                and bsar.category_name like concat('%', #{categoryName}, '%')
            </if>
            <if test="beginInboundTime!=null and beginInboundTime!=''">
                and bsar.inbound_time between #{beginInboundTime}
            </if>
            <if test="finishInboundTime!=null and finishInboundTime!=''">
                and #{finishInboundTime}
            </if>
        </where>
    </sql>
    <sql id="select_goods_buy_sales">
        <where>
            1=1
            <if test="beginInboundTime!=null and beginInboundTime!=''">
                and bgbs.inbound_time between #{beginInboundTime}
            </if>
            <if test="finishInboundTime!=null and finishInboundTime!=''">
                and #{finishInboundTime}
            </if>
            <if test="supplierCode!=null and supplierCode!=''">
                and bgbs.supplier_code=#{supplierCode}
            </if>
            <if test="supplierName!=null and supplierName!=''">
                and bgbs.supplier_name like concat('%', #{supplierName}, '%')
            </if>
            <if test="skuCode!=null and skuCode!=''">
                and bgbs.sku_code=#{skuCode}
            </if>
            <if test="skuName!=null and skuName!=''">
                and bgbs.sku_name like concat('%', #{skuName}, '%')
            </if>
            <if test="transportCenterCode!=null and transportCenterCode!=''">
                and bgbs.transport_center_code=#{transportCenterCode}
            </if>
            <if test="transportCenterName!=null and transportCenterName!=''">
                and bgbs.transport_center_name like concat('%', #{transportCenterName}, '%')
            </if>
            <if test="categoryName!=null and categoryName!=''">
                and bgbs.category_name like concat('%', #{categoryName}, '%')
            </if>
            <if test="categoryCode!=null and categoryCode!=''">
                and bgbs.category_code=#{categoryCode}
            </if>
            <if test="productSortCode!=null and productSortCode!=''">
                and bgbs.product_sort_code=#{productSortCode}
            </if>
            <if test="productSortName!=null and productSortName!=''">
                and bgbs.product_sort_name like concat('%', #{productSortName}, '%')
            </if>
            <if test="inboundDays!=null and inboundDays!=''">
                and bgbs.inbound_days=#{inboundDays}
            </if>
            <if test="beginTurnoverDays!=null">
                and bgbs.turnover_days <![CDATA[>=]]> #{beginTurnoverDays}
            </if>
            <if test="finishTurnoverDays!=null">
                and bgbs.turnover_days <![CDATA[<=]]> #{finishTurnoverDays}
            </if>
            <if test="warehouseCode!=null and warehouseCode!=''">
                and bgbs.warehouse_code=#{warehouseCode}
            </if>
            <if test="warehouseName!=null and warehouseName!=''">
                and bgbs.warehouse_name like concat('%', #{warehouseName}, '%')
            </if>
            <if test="categoryCodeOne!=null and categoryCodeOne!=''">
                and bgbs.category_code_one like concat('%', #{categoryCodeOne}, '%')
            </if>
            <if test="categoryCodeTwo!=null and categoryCodeTwo!=''">
                and bgbs.category_code_two like concat('%', #{categoryCodeTwo}, '%')
            </if>
            <if test="categoryCodeThree!=null and categoryCodeThree!=''">
                and bgbs.category_code_three like concat('%', #{categoryCodeThree}, '%')
            </if>
        </where>
    </sql>
    <sql id="select_gifts_buy_sales">
        <where>
            1=1
            <if test="skuCode!=null and skuCode!=''">
                and bgbs.sku_code=#{skuCode}
            </if>
            <if test="skuName!=null and skuName!=''">
                and bgbs.sku_name like concat('%', #{skuName}, '%')
            </if>
            <if test="transportCenterCode!=null and transportCenterCode!=''">
                and bgbs.transport_center_code=#{transportCenterCode}
            </if>
            <if test="transportCenterName!=null and transportCenterName!=''">
                and bgbs.transport_center_name like concat('%', #{transportCenterName}, '%')
            </if>
            <if test="categoryName!=null and categoryName!=''">
                and bgbs.category_name like concat('%', #{categoryName}, '%')
            </if>
            <if test="categoryCode!=null and categoryCode!=''">
                and bgbs.category_code=#{categoryCode}
            </if>
            <if test="inboundDays!=null and inboundDays!=''">
                and bgbs.inbound_days=#{inboundDays}
            </if>
            <if test="productSortCode!=null and productSortCode!=''">
                and bgbs.product_sort_code=#{productSortCode}
            </if>
            <if test="productSortName!=null and productSortName!=''">
                and bgbs.product_sort_name like concat('%', #{productSortName}, '%')
            </if>
            <if test="beginInboundTime!=null and beginInboundTime!=''">
                and bgbs.inbound_time between #{beginInboundTime}
            </if>
            <if test="finishInboundTime!=null and finishInboundTime!=''">
                and #{finishInboundTime}
            </if>
            <if test="warehouseCode!=null and warehouseCode!=''">
                and bgbs.warehouse_code=#{warehouseCode}
            </if>
            <if test="warehouseName!=null and warehouseName!=''">
                and bgbs.warehouse_name like concat('%', #{warehouseName}, '%')
            </if>
            <if test="beginTurnoverDays!=null">
                and bgbs.turnover_days <![CDATA[>=]]> #{beginTurnoverDays}
            </if>
            <if test="finishTurnoverDays!=null">
                and bgbs.turnover_days <![CDATA[<=]]> #{finishTurnoverDays}
            </if>
            <if test="categoryCodeOne!=null and categoryCodeOne!=''">
                and bgbs.category_code_one like concat('%', #{categoryCodeOne}, '%')
            </if>
            <if test="categoryCodeTwo!=null and categoryCodeTwo!=''">
                and bgbs.category_code_two like concat('%', #{categoryCodeTwo}, '%')
            </if>
            <if test="categoryCodeThree!=null and categoryCodeThree!=''">
                and bgbs.category_code_three like concat('%', #{categoryCodeThree}, '%')
            </if>
        </where>
    </sql>
    <sql id="select_supplier_return">
        <where>
            1=1
            <if test="supplierCode!=null and supplierCode!=''">
                and bsr.supplier_code=#{supplierCode}
            </if>
            <if test="supplierName!=null and supplierName!=''">
                and bsr.supplier_name like concat('%', #{supplierName}, '%')
            </if>
            <if test="transportCenterCode!=null and transportCenterCode!=''">
                and bsr.transport_center_code=#{transportCenterCode}
            </if>
            <if test="transportCenterName!=null and transportCenterName!=''">
                and bsr.transport_center_name like concat('%', #{transportCenterName}, '%')
            </if>
            <if test="warehouseCode!=null and warehouseCode!=''">
                and bsr.warehouse_code=#{warehouseCode}
            </if>
            <if test="warehouseName!=null and warehouseName!=''">
                and bsr.warehouse_name like concat('%', #{warehouseName}, '%')
            </if>
            <if test="beginOutStockTime!=null and beginOutStockTime!=''">
                and bsr.out_stock_time between #{beginOutStockTime}
            </if>
            <if test="finishOutStockTime!=null and finishOutStockTime!=''">
                and #{finishOutStockTime}
            </if>
        </where>
    </sql>
    <sql id="select_new_product_batch_moving_rate">
        <where>
            1=1
            <if test="skuCode!=null and skuCode!=''">
                and bnpbmr.sku_code=#{skuCode}
            </if>
            <if test="skuName!=null and skuName!=''">
                and bnpbmr.sku_name like concat('%', #{skuName}, '%')
            </if>
            <if test="orderCode!=null and orderCode!=''">
                and bnpbmr.order_code=#{orderCode}
            </if>
            <if test="orderOriginal!=null and orderOriginal!=''">
                and bnpbmr.order_original like concat('%', #{orderOriginal}, '%')
            </if>
            <if test="supplierCode!=null and supplierCode!=''">
                and bnpbmr.supplier_code=#{supplierCode}
            </if>
            <if test="supplierName!=null and supplierName!=''">
                and bnpbmr.supplier_name like concat('%', #{supplierName}, '%')
            </if>
            <if test="categoryCode!=null and categoryCode!=''">
                and bnpbmr.category_code=#{categoryCode}
            </if>
            <if test="categoryName!=null and categoryName!=''">
                and bnpbmr.category_name like concat('%', #{categoryName}, '%')
            </if>
            <if test="beginInboundTime!=null and beginInboundTime!=''">
                and bnpbmr.inbound_time between #{beginInboundTime}
            </if>
            <if test="finishInboundTime!=null and finishInboundTime!=''">
                and #{finishInboundTime}
            </if>
            <if test="batchCode!=null and batchCode!=''">
                and bnpbmr.stock_batch_code=#{batchCode}
            </if>
            <if test="beginChannelMaoriRate!=null">
                and bnpbmr.channel_maori_rate <![CDATA[>=]]> #{beginChannelMaoriRate}
            </if>
            <if test="finishChannelMaoriRate!=null">
                and bnpbmr.channel_maori_rate <![CDATA[<=]]> #{finishChannelMaoriRate}
            </if>
            <if test="productSortCode!=null and productSortCode!=''">
                and bnpbmr.product_sort_code=#{productSortCode}
            </if>
            <if test="productSortName!=null and productSortName!=''">
                and bnpbmr.product_sort_name like concat('%', #{productSortName}, '%')
            </if>
        </where>
    </sql>
    <sql id="select_store_repurchase_rate">
        <where>
            1=1
            <if test="provinceName!=null and provinceName!=''">
                and bsrr.province_name like concat('%', #{provinceName}, '%')
            </if>
            <if test="cityName!=null and cityName!=''">
                and bsrr.city_name like concat('%', #{cityName}, '%')
            </if>
            <if test="districtName!=null and districtName!=''">
                and bsrr.district_name like concat('%', #{districtName}, '%')
            </if>
            <if test="productCategoryCode!=null and productCategoryCode!=''">
                and bsrr.product_category_code=#{productCategoryCode}
            </if>
            <if test="productCategoryName!=null and productCategoryName!=''">
                and bsrr.product_category_name like concat('%', #{productCategoryName}, '%')
            </if>
            <if test="orderOriginalCode!=null and orderOriginalCode!=''">
                and bsrr.order_original_code=#{orderOriginalCode}
            </if>
            <if test="orderOriginalName!=null and orderOriginalName!=''">
                and bsrr.order_original_name like concat('%', #{orderOriginalName}, '%')
            </if>
            <if test="beginRunTime!=null and beginRunTime!=''">
                and bsrr.run_time between #{beginRunTime}
            </if>
            <if test="finishRunTime!=null and finishRunTime!=''">
                and #{finishRunTime}
            </if>
        </where>
    </sql>
    <sql id="select_negative_margin">
        <where>
            1=1
            <if test="skuCode!=null and skuCode!=''">
                and bnm.sku_code=#{skuCode}
            </if>
            <if test="skuName!=null and skuName!=''">
                and bnm.sku_name like concat('%', #{skuName}, '%')
            </if>
            <if test="productCategoryCode!=null and productCategoryCode!=''">
                and bnm.product_category_code=#{productCategoryCode}
            </if>
            <if test="productCategoryName!=null and productCategoryName!=''">
                and bnm.product_category_name like concat('%', #{productCategoryName}, '%')
            </if>
            <if test="productBrandCode!=null and productBrandCode!=''">
                and bnm.product_brand_code=#{productBrandCode}
            </if>
            <if test="productBrandName!=null and productBrandName!=''">
                and bnm.product_brand_name like concat('%', #{productBrandName}, '%')
            </if>
            <if test="orderOriginalCode!=null and orderOriginalCode!=''">
                and bnm.order_original_code=#{orderOriginalCode}
            </if>
            <if test="orderOriginalName!=null and orderOriginalName!=''">
                and bnm.order_original_name like concat('%', #{orderOriginalName}, '%')
            </if>
            <if test="beginRunTime!=null and beginRunTime!=''">
                and bnm.run_time between #{beginRunTime}
            </if>
            <if test="finishRunTime!=null and finishRunTime!=''">
                and #{finishRunTime}
            </if>
            <if test="productSortCode!=null and productSortCode!=''">
                and bnm.product_sort_code=#{productSortCode}
            </if>
            <if test="productSortName!=null and productSortName!=''">
                and bnm.product_sort_name like concat('%', #{productSortName}, '%')
            </if>
        </where>
    </sql>
    <sql id="select_suggest_replenishment">
        <where>
            1=1
            <if test="skuCode!=null and skuCode!=''">
                and bsr.sku_code=#{skuCode}
            </if>
            <if test="skuName!=null and skuName!=''">
                and bsr.sku_name like concat('%', #{skuName}, '%')
            </if>
            <if test="productCategoryCode!=null and productCategoryCode!=''">
                and bsr.product_category_code=#{productCategoryCode}
            </if>
            <if test="productCategoryName!=null and productCategoryName!=''">
                and bsr.product_category_name like concat('%', #{productCategoryName}, '%')
            </if>
            <if test="productBrandCode!=null and productBrandCode!=''">
                and bsr.product_brand_code=#{productBrandCode}
            </if>
            <if test="productBrandName!=null and productBrandName!=''">
                and bsr.product_brand_name like concat('%', #{productBrandName}, '%')
            </if>
            <if test="transportCenterCode!=null and transportCenterCode!=''">
                and bsr.transport_center_code=#{transportCenterCode}
            </if>
            <if test="transportCenterName!=null and transportCenterName!=''">
                and bsr.transport_center_name like concat('%', #{transportCenterName}, '%')
            </if>
            <if test="beginRunTime!=null and beginRunTime!=''">
                and bsr.run_time between #{beginRunTime}
            </if>
            <if test="finishRunTime!=null and finishRunTime!=''">
                and #{finishRunTime}
            </if>
        </where>
    </sql>
    <sql id="select_low_inventory">
        <where>
            1=1
            <if test="procurementSectionCode!=null and procurementSectionCode!=''">
                and bli.procurement_section_code=#{procurementSectionCode}
            </if>
            <if test="procurementSectionName!=null and procurementSectionName!=''">
                and bli.procurement_section_name like concat('%', #{procurementSectionName}, '%')
            </if>
            <if test="productSortCode!=null and productSortCode!=''">
                and bli.product_sort_code=#{productSortCode}
            </if>
            <if test="productSortName!=null and productSortName!=''">
                and bli.product_sort_name like concat('%', #{productSortName}, '%')
            </if>
            <if test="beginRunTime!=null and beginRunTime!=''">
                and bli.run_time between #{beginRunTime}
            </if>
            <if test="finishRunTime!=null and finishRunTime!=''">
                and #{finishRunTime}
            </if>
        </where>
    </sql>
    <sql id="select_high_inventory">
        <where>
            1=1
            <if test="procurementSectionCode!=null and procurementSectionCode!=''">
                and bhi.procurement_section_code=#{procurementSectionCode}
            </if>
            <if test="procurementSectionName!=null and procurementSectionName!=''">
                and bhi.procurement_section_name like concat('%', #{procurementSectionName}, '%')
            </if>
            <if test="productSortCode!=null and productSortCode!=''">
                and bhi.product_sort_code=#{productSortCode}
            </if>
            <if test="productSortName!=null and productSortName!=''">
                and bhi.product_sort_name like concat('%', #{productSortName}, '%')
            </if>
            <if test="beginRunTime!=null and beginRunTime!=''">
                and bhi.run_time between #{beginRunTime}
            </if>
            <if test="finishRunTime!=null and finishRunTime!=''">
                and #{finishRunTime}
            </if>
        </where>
    </sql>
    <sql id="select_brand_sale">
        <where>
            1=1
            <if test="month!=null and month!=''">
                and bbs.month= like concat('%', #{month}, '%')
            </if>
            <if test="channelCode!=null and channelCode!=''">
                and bbs.channel_code= like concat('%', #{channelCode}, '%')
            </if>
            <if test="channelName!=null and channelName!=''">
                and bbs.channel_name like concat('%', #{channelName}, '%')
            </if>
            <if test="departmentCode!=null and departmentCode!=''">
                and bbs.department_code like concat('%', #{departmentCode}, '%')
            </if>
            <if test="departmentName!=null and departmentName!=''">
                and bbs.department_name like concat('%', #{departmentName}, '%')
            </if>
        </where>
    </sql>
    <sql id="select_category_sale">
        <where>
            1=1
            <if test="month!=null and month!=''">
                and bcs.month=#{month}
            </if>
            <if test="channelCode!=null and channelCode!=''">
                and bcs.channel_code=#{channelCode}
            </if>
            <if test="channelName!=null and channelName!=''">
                and bcs.channel_name like concat('%', #{channelName}, '%')
            </if>
            <if test="departmentCode!=null and departmentCode!=''">
                and bcs.department_code=#{departmentCode}
            </if>
            <if test="departmentName!=null and departmentName!=''">
                and bcs.department_name like concat('%', #{departmentName}, '%')
            </if>
        </where>
    </sql>
    <sql id="select_big_effect">
        <where>
            1=1
            <if test="productionDate!=null and productionDate!=''">
                and bbe.production_date like concat('%', #{productionDate}, '%')
            </if>
            <if test="skuCode!=null and skuCode!=''">
                and bbe.sku_code=#{skuCode}
            </if>
            <if test="skuName!=null and skuName!=''">
                and bbe.sku_name like concat('%', #{skuName}, '%')
            </if>
            <if test="productBrandCode!=null and productBrandCode!=''">
                and bbe.product_brand_code=#{productBrandCode}
            </if>
            <if test="productBrandName!=null and productBrandName!=''">
                and bbe.product_brand_name like concat('%', #{productBrandName}, '%')
            </if>
            <if test="productCategoryCode!=null and productCategoryCode!=''">
                and bbe.product_category_code=#{productCategoryCode}
            </if>
            <if test="productCategoryName!=null and productCategoryName!=''">
                and bbe.product_category_name like concat('%', #{productCategoryName}, '%')
            </if>
            <if test="supplyUnitCode!=null and supplyUnitCode!=''">
                and bbe.supply_unit_code=#{supplyUnitCode}
            </if>
            <if test="supplyUnitName!=null and supplyUnitName!=''">
                and bbe.supply_unit_name like concat('%', #{supplyUnitName}, '%')
            </if>
            <if test="procurementSectionCode!=null and procurementSectionCode!=''">
                and bbe.procurement_section_code=#{procurementSectionCode}
            </if>
            <if test="procurementSectionName!=null and procurementSectionName!=''">
                and bbe.procurement_section_name like concat('%', #{procurementSectionName}, '%')
            </if>
            <if test="transportCenterCode!=null and transportCenterCode!=''">
                and bbe.transport_center_code=#{transportCenterCode}
            </if>
            <if test="transportCenterName!=null and transportCenterName!=''">
                and bbe.transport_center_name like concat('%', #{transportCenterName}, '%')
            </if>
            <if test="warehouseCode!=null and warehouseCode!=''">
                and bbe.warehouse_code=#{warehouseCode}
            </if>
            <if test="warehouseName!=null and warehouseName!=''">
                and bbe.warehouse_name like concat('%', #{warehouseName}, '%')
            </if>
            <if test="bigEffectPeriodWarnDay!=null and bigEffectPeriodWarnDay!=''">
                and bbe.big_effect_period_warn_day=#{bigEffectPeriodWarnDay}
            </if>
        </where>
    </sql>
    <sql id="select_monthly_sales">
        <where>
            1=1
            <if test="productSortCode!=null and productSortCode!=''">
                and bms.product_sort_code=#{productSortCode}
            </if>
            <if test="productSortName!=null and productSortName!=''">
                and bms.product_sort_name like concat('%', #{productSortName}, '%')
            </if>
            <if test="priceChannelCode!=null and priceChannelCode!=''">
                and bms.price_channel_code=#{priceChannelCode}
            </if>
            <if test="priceChannelName!=null and priceChannelName!=''">
                and bms.price_channel_name like concat('%', #{priceChannelName}, '%')
            </if>
            <if test="storeTypeCode!=null and storeTypeCode!=''">
                and bms.store_type_code=#{storeTypeCode}
            </if>
            <if test="storeTypeName!=null and storeTypeName!=''">
                and bms.store_type_name like concat('%', #{storeTypeName}, '%')
            </if>
            <if test="dataStyleCode!=null and dataStyleCode!=''">
                and bms.data_style_code=#{dataStyleCode}
            </if>
            <if test="dataStyleName!=null and dataStyleName!=''">
                and bms.data_style_name like concat('%', #{dataStyleName}, '%')
            </if>
            <if test="beginRunTime!=null and beginRunTime!=''">
                and bhi.run_time between #{beginRunTime}
            </if>
            <if test="finishRunTime!=null and finishRunTime!=''">
                and #{finishRunTime}
            </if>
        </where>
    </sql>
    <sql id="select_monthly_gross_margin">
        <where>
            1=1
            <if test="productSortCode!=null and productSortCode!=''">
                and bmgm.product_sort_code=#{productSortCode}
            </if>
            <if test="productSortName!=null and productSortName!=''">
                and bmgm.product_sort_name like concat('%', #{productSortName}, '%')
            </if>
            <if test="priceChannelCode!=null and priceChannelCode!=''">
                and bmgm.price_channel_code=#{priceChannelCode}
            </if>
            <if test="priceChannelName!=null and priceChannelName!=''">
                and bmgm.price_channel_name like concat('%', #{priceChannelName}, '%')
            </if>
            <if test="storeTypeCode!=null and storeTypeCode!=''">
                and bmgm.store_type_code=#{storeTypeCode}
            </if>
            <if test="storeTypeName!=null and storeTypeName!=''">
                and bmgm.store_type_name like concat('%', #{storeTypeName}, '%')
            </if>
            <if test="dataStyleCode!=null and dataStyleCode!=''">
                and bmgm.data_style_code=#{dataStyleCode}
            </if>
            <if test="dataStyleName!=null and dataStyleName!=''">
                and bmgm.data_style_name like concat('%', #{dataStyleName}, '%')
            </if>
            <if test="beginRunTime!=null and beginRunTime!=''">
                and bmgm.run_time between #{beginRunTime}
            </if>
            <if test="finishRunTime!=null and finishRunTime!=''">
                and #{finishRunTime}
            </if>
        </where>
    </sql>
    <sql id="select_month_sales_achievement">
        <where>
            1=1
            <if test="productSortCode!=null and productSortCode!=''">
                and bmsa.product_sort_code=#{productSortCode}
            </if>
            <if test="productSortName!=null and productSortName!=''">
                and bmsa.product_sort_name like concat('%', #{productSortName}, '%')
            </if>
            <if test="priceChannelCode!=null and priceChannelCode!=''">
                and bmsa.price_channel_code=#{priceChannelCode}
            </if>
            <if test="priceChannelName!=null and priceChannelName!=''">
                and bmsa.price_channel_name like concat('%', #{priceChannelName}, '%')
            </if>
            <if test="storeTypeCode!=null and storeTypeCode!=''">
                and bmsa.store_type_code=#{storeTypeCode}
            </if>
            <if test="storeTypeName!=null and storeTypeName!=''">
                and bmsa.store_type_name like concat('%', #{storeTypeName}, '%')
            </if>
            <if test="dataStyleCode!=null and dataStyleCode!=''">
                and bmsa.data_style_code=#{dataStyleCode}
            </if>
            <if test="dataStyleName!=null and dataStyleName!=''">
                and bmsa.data_style_name like concat('%', #{dataStyleName}, '%')
            </if>
            <if test="beginRunTime!=null and beginRunTime!=''">
                and bmsa.run_time between #{beginRunTime}
            </if>
            <if test="finishRunTime!=null and finishRunTime!=''">
                and #{finishRunTime}
            </if>
            <if test="categoryTypeCode!=null and categoryTypeCode!=''">
                and bmsa.category_type_code=#{categoryTypeCode}
            </if>
            <if test="categoryTypeName!=null and categoryTypeName!=''">
                and bmsa.category_type_name like concat('%', #{categoryTypeName}, '%')
            </if>
        </where>
    </sql>
    <sql id="select_month_cumulative_brand_sales">
        <where>
            1=1
            <if test="productSortCode!=null and productSortCode!=''">
                and bmcbs.product_sort_code=#{productSortCode}
            </if>
            <if test="productSortName!=null and productSortName!=''">
                and bmcbs.product_sort_name like concat('%', #{productSortName}, '%')
            </if>
            <if test="priceChannelCode!=null and priceChannelCode!=''">
                and bmcbs.price_channel_code=#{priceChannelCode}
            </if>
            <if test="priceChannelName!=null and priceChannelName!=''">
                and bmcbs.price_channel_name like concat('%', #{priceChannelName}, '%')
            </if>
            <if test="storeTypeCode!=null and storeTypeCode!=''">
                and bmcbs.store_type_code=#{storeTypeCode}
            </if>
            <if test="storeTypeName!=null and storeTypeName!=''">
                and bmcbs.store_type_name like concat('%', #{storeTypeName}, '%')
            </if>
            <if test="dataStyleCode!=null and dataStyleCode!=''">
                and bmcbs.data_style_code=#{dataStyleCode}
            </if>
            <if test="dataStyleName!=null and dataStyleName!=''">
                and bmcbs.data_style_name like concat('%', #{dataStyleName}, '%')
            </if>
            <if test="beginRunTime!=null and beginRunTime!=''">
                and bmcbs.run_time between #{beginRunTime}
            </if>
            <if test="finishRunTime!=null and finishRunTime!=''">
                and #{finishRunTime}
            </if>
            <if test="categoryTypeCode!=null and categoryTypeCode!=''">
                and bmcbs.category_type_code=#{categoryTypeCode}
            </if>
            <if test="categoryTypeName!=null and categoryTypeName!=''">
                and bmcbs.category_type_name like concat('%', #{categoryTypeName}, '%')
            </if>
        </where>
    </sql>
    <sql id="select_month_cumulative_gross_profit_margin">
        <where>
            1=1
            <if test="productSortCode!=null and productSortCode!=''">
                and bmcgpm.product_sort_code=#{productSortCode}
            </if>
            <if test="productSortName!=null and productSortName!=''">
                and bmcgpm.product_sort_name like concat('%', #{productSortName}, '%')
            </if>
            <if test="priceChannelCode!=null and priceChannelCode!=''">
                and bmcgpm.price_channel_code=#{priceChannelCode}
            </if>
            <if test="priceChannelName!=null and priceChannelName!=''">
                and bmcgpm.price_channel_name like concat('%', #{priceChannelName}, '%')
            </if>
            <if test="storeTypeCode!=null and storeTypeCode!=''">
                and bmcgpm.store_type_code=#{storeTypeCode}
            </if>
            <if test="storeTypeName!=null and storeTypeName!=''">
                and bmcgpm.store_type_name like concat('%', #{storeTypeName}, '%')
            </if>
            <if test="dataStyleCode!=null and dataStyleCode!=''">
                and bmcgpm.data_style_code=#{dataStyleCode}
            </if>
            <if test="dataStyleName!=null and dataStyleName!=''">
                and bmcgpm.data_style_name like concat('%', #{dataStyleName}, '%')
            </if>
            <if test="beginRunTime!=null and beginRunTime!=''">
                and bmcgpm.run_time between #{beginRunTime}
            </if>
            <if test="finishRunTime!=null and finishRunTime!=''">
                and #{finishRunTime}
            </if>
            <if test="categoryTypeCode!=null and categoryTypeCode!=''">
                and bmcgpm.category_type_code=#{categoryTypeCode}
            </if>
            <if test="categoryTypeName!=null and categoryTypeName!=''">
                and bmcgpm.category_type_name like concat('%', #{categoryTypeName}, '%')
            </if>
        </where>
    </sql>
    <select id="selectSupplierArrivalRate" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.SupplierArrivalRateReqVo"
            resultType="com.aiqin.bms.scmp.api.bireport.domain.response.SupplierArrivalRateRespVo">
        select
        bsar.id as id,
        date_format(bsar.inbound_time, '%Y-%m-%d %H:%i:%s') as inboundTime,
        bsar.supplier_code as supplierCode,
        bsar.supplier_name as supplierName,
        bsar.category_code as categoryCode,
        bsar.category_name as categoryName,
        bsar.transport_center_code as transportCenterCode,
        bsar.transport_center_name as transportCenterName,
        bsar.pre_inbound_num as preInboundNum,
        bsar.pre_tax_amount as preTaxAmount,
        bsar.pra_inbound_num as praInboundNum,
        bsar.pra_tax_amount as praTaxAmount,
        bsar.pra_tax_amount_rate as praTaxAmountRate,
        date_format(bsar.create_time, '%Y-%m-%d %H:%i:%s') as createTime,
        bsar.responsible_person_code as responsiblePersonCode,
        bsar.responsible_person_name as responsiblePersonName
        from bi_supplier_arrival_rate bsar
        <include refid="select_supplier_arrival_rate"/>
    </select>
    <select id="countSupplierArrivalRate" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.SupplierArrivalRateReqVo"
            resultType="java.lang.Integer">
        select count(1) from (
        select
        bsar.id
        from bi_supplier_arrival_rate bsar
        WHERE
        1=1
        <if test="supplierCode!=null and supplierCode!=''">
            and bsar.supplier_code = #{supplierCode}
        </if>
        <if test="supplierName!=null and supplierName!=''">
            and bsar.supplier_name like concat('%', #{supplierName}, '%')
        </if>
        <if test="transportCenterCode!=null and transportCenterCode!=''">
            and bsar.logistics_center_code = #{transportCenterCode}
        </if>
        <if test="categoryCode!=null and categoryCode!=''">
            and bsar.category_code = #{categoryCode}
        </if>
        <if test="categoryName!=null and categoryName!=''">
            and bsar.category_name like concat('%', #{categoryName}, '%')
        </if>
        <if test="beginInboundTime!=null and beginInboundTime!=''">
            and bsar.inbound_time between #{beginInboundTime}
        </if>
        <if test="finishInboundTime!=null and finishInboundTime!=''">
            and #{finishInboundTime}
        </if>
        group by bsar.id
        ) as tmp
    </select>
    <select id="selectSupplierArrivalRateTableCloumnName" resultType="java.util.HashMap">
        select
          COLUMN_COMMENT as columnName,COLUMN_NAME as columnKey
        from information_schema.COLUMNS
        where
          table_name = 'bi_supplier_arrival_rate' and table_schema = 'bms_scmp'
    </select>
    <select id="selectGoodsBuySales" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.GoodsBuySalesReqVo"
            resultType="com.aiqin.bms.scmp.api.bireport.domain.response.GoodsBuySalesRespVo">
        select
        bgbs.id as id,
        date_format(bgbs.inbound_time, '%Y-%m-%d %H:%i:%s') as inboundTime,
        bgbs.supplier_code as supplierCode,
        bgbs.supplier_name as supplierName,
        bgbs.sku_code as skuCode,
        bgbs.sku_name as skuName,
        bgbs.product_sort_code as productSortCode,
        bgbs.product_sort_name as productSortName,
        bgbs.transport_center_code as transportCenterCode,
        bgbs.transport_center_name as transportCenterName,
        bgbs.warehouse_code as warehouseCode,
        bgbs.warehouse_name as warehouseName,
        bgbs.batch_code as batchCode,
        bgbs.category_name as categoryName,
        bgbs.category_code as categoryCode,
        bgbs.category_code_one as categoryCodeOne,
        bgbs.category_code_two as categoryCodeTwo,
        bgbs.category_code_three as categoryCodeThree,
        bgbs.product_brand_code as productBrandCode,
        bgbs.product_brand_name as productBrandName,
        bgbs.manufacturer_guide_price as manufacturerGuidePrice,
        bgbs.available_num as availableNum,
        bgbs.tax_cost as taxCost,
        bgbs.sales_num_one_month as salesNumOneMonth,
        bgbs.sales_cost_one_month as salesCostOneMonth,
        bgbs.distribution_sales_money_one_month as distributionSalesMoneyOneMonth,
        bgbs.distribution_sales_maori_one_month as distributionSalesMaoriOneMonth,
        bgbs.distribution_sales_maori_one_month_rate as distributionSalesMaoriOneMonthRate,
        bgbs.channel_sales_money_one_month as channelSalesMoneyOneMonth,
        bgbs.channel_sales_maori_one_month as channelSalesMaoriOneMonth,
        bgbs.channel_sales_maori_one_month_rate as channelSalesMaoriOneMonthRate,
        bgbs.turnover_days as turnoverDays,
        bgbs.inbound_days as inboundDays,
        bgbs.config_status as configStatus,
        bgbs.responsible_person_code as responsiblePersonCode,
        bgbs.responsible_person_name as responsiblePersonName,
        bgbs.production_date as productionDate,
        bgbs.quality_number as qualityNumber,
        date_format(bgbs.create_time, '%Y-%m-%d %H:%i:%s') as createTime
        from bi_goods_buy_sales bgbs
        <include refid="select_goods_buy_sales"/>
    </select>
    <select id="countGoodsBuySales" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.GoodsBuySalesReqVo"
            resultType="java.lang.Integer">
        select count(1) from (
        select
        bgbs.id
        from bi_goods_buy_sales bgbs
        <include refid="select_goods_buy_sales"/>
        group by bgbs.id
        ) as tmp
    </select>
    <select id="selectGoodsBuySalesTableCloumnName" resultType="java.util.HashMap">
        select
        COLUMN_COMMENT as columnName,COLUMN_NAME as columnKey
        from information_schema.COLUMNS
        where
        table_name = 'bi_goods_buy_sales' and table_schema = 'bms_scmp'
    </select>
    <select id="selectGiftsBuySales" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.GiftsBuySalesReqVo"
            resultType="com.aiqin.bms.scmp.api.bireport.domain.response.GiftsBuySalesRespVo">
        select
        bgbs.id as id,
        bgbs.sku_code as skuCode,
        bgbs.sku_name as skuName,
        bgbs.product_sort_code as productSortCode,
        bgbs.product_sort_name as productSortName,
        bgbs.category_name as categoryName,
        bgbs.category_code as categoryCode,
        bgbs.category_code_one as categoryCodeOne,
        bgbs.category_code_two as categoryCodeTwo,
        bgbs.category_code_three as categoryCodeThree,
        bgbs.product_brand_code as productBrandCode,
        bgbs.product_brand_name as productBrandName,
        bgbs.manufacturer_guide_price as manufacturerGuidePrice,
        bgbs.transport_center_code as transportCenterCode,
        bgbs.transport_center_name as transportCenterName,
        bgbs.warehouse_code as warehouseCode,
        bgbs.warehouse_name as warehouseName,
        bgbs.available_num as availableNum,
        bgbs.sales_num_one_month as salesNumOneMonth,
        bgbs.sales_money_one_month as salesMoneyOneMonth,
        bgbs.turnover_days as turnoverDays,
        bgbs.responsible_person_code as responsiblePersonCode,
        bgbs.responsible_person_name as responsiblePersonName,
        date_format(bgbs.inbound_time, '%Y-%m-%d %H:%i:%s') as inboundTime,
        bgbs.inbound_days as inboundDays,
        date_format(bgbs.create_time, '%Y-%m-%d %H:%i:%s') as createTime
        from bi_gifts_buy_sales bgbs
        <include refid="select_gifts_buy_sales"/>
    </select>
    <select id="countGiftsBuySales" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.GiftsBuySalesReqVo"
            resultType="java.lang.Integer">
        select count(1) from (
        select
        bgbs.id
        from bi_gifts_buy_sales bgbs
        <include refid="select_gifts_buy_sales"/>
        group by bgbs.id
        ) as tmp
    </select>
    <select id="selectSupplierReturn" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.SupplierReturnReqVo"
            resultType="com.aiqin.bms.scmp.api.bireport.domain.response.SupplierReturnRespVo">
        select
        bsr.id as id,
        bsr.supplier_code as supplierCode,
        bsr.supplier_name as supplierName,
        bsr.transport_center_code as transportCenterCode,
        bsr.transport_center_name as transportCenterName,
        bsr.warehouse_code as warehouseCode,
        bsr.warehouse_name as warehouseName,
        bsr.reject_record_code as rejectRecordCode,
        bsr.sum_count as sumCount,
        bsr.sum_amount as sumAmount,
        date_format(bsr.return_goods_create_time, '%Y-%m-%d %H:%i:%s') as returnGoodsCreateTime,
        date_format(bsr.out_stock_time, '%Y-%m-%d %H:%i:%s') as outStockTime,
        bsr.reject_status as rejectStatus,
        bsr.purchase_group_code as purchaseGroupCode,
        bsr.purchase_group_name as purchaseGroupName,
        bsr.responsible_person_code as responsiblePersonCode,
        bsr.responsible_person_name as responsiblePersonName,
        date_format(bsr.create_time, '%Y-%m-%d %H:%i:%s') as createTime
        from bi_supplier_return bsr
        <include refid="select_supplier_return"/>
    </select>
    <select id="countSupplierReturn" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.SupplierReturnReqVo"
            resultType="java.lang.Integer">
        select count(1) from (
        select
        bsr.id
        from bi_supplier_return bsr
        <include refid="select_supplier_return"/>
        group by bsr.id
        ) as tmp
    </select>
    <select id="selectNewProductBatchMovingRate" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.NewProductBatchMovingRateReqVo"
            resultType="com.aiqin.bms.scmp.api.bireport.domain.response.NewProductBatchMovingRateRespVo">
        select
        bnpbmr.id as id,
        bnpbmr.sku_code as skuCode,
        bnpbmr.sku_name as skuName,
        bnpbmr.stock_batch_code as batchCode,
        bnpbmr.supplier_code as supplierCode,
        bnpbmr.supplier_name as supplierName,
        bnpbmr.product_sort_code as productSortCode,
        bnpbmr.product_sort_name as productSortName,
        bnpbmr.category_code as categoryCode,
        bnpbmr.category_name as categoryName,
        bnpbmr.category_code_one as categoryCodeOne,
        bnpbmr.category_code_two as categoryCodeTwo,
        bnpbmr.category_code_three as categoryCodeThree,
        bnpbmr.product_brand_code as productBrandCode,
        bnpbmr.product_brand_name as productBrandName,
        bnpbmr.purchase_price as purchasePrice,
        bnpbmr.manufacturer_guide_price as manufacturerGuidePrice,
        bnpbmr.available_num as availableNum,
        bnpbmr.tax_cost as taxCost,
        bnpbmr.num as num,
        bnpbmr.sales_costs as salesCosts,
        bnpbmr.order_code as orderCode,
        bnpbmr.order_original as orderOriginal,
        bnpbmr.channel_amount as channelAmount,
        bnpbmr.channel_maori as channelMaori,
        bnpbmr.channel_maori_rate as channelMaoriRate,
        bnpbmr.distribution_sales_costs as distributionSalesCosts,
        bnpbmr.distribution_maori as distributionMaori,
        bnpbmr.distribution_maori_rate as distributionMaoriRate,
        bnpbmr.sales_num_one_month as salesNumOneMonth,
        bnpbmr.sales_coses_one_month as salesCosesOneMonth,
        bnpbmr.turnover_days as turnoverDays,
        date_format(bnpbmr.inbound_time, '%Y-%m-%d %H:%i:%s') as inboundTime,
        bnpbmr.inbound_days as inboundDays,
        bnpbmr.config_status as configStatus,
        bnpbmr.responsible_person_code as responsiblePersonCode,
        bnpbmr.responsible_person_name as responsiblePersonName,
        date_format(bnpbmr.create_time, '%Y-%m-%d %H:%i:%s') as createTime
        from bi_new_product_batch_moving_rate bnpbmr
        <include refid="select_new_product_batch_moving_rate"/>
        GROUP by bnpbmr.inbound_time desc
    </select>
    <select id="countNewProductBatchMovingRate" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.NewProductBatchMovingRateReqVo"
            resultType="java.lang.Integer">
        select count(1) from (
        select
        bnpbmr.id
        from bi_new_product_batch_moving_rate bnpbmr
        <include refid="select_new_product_batch_moving_rate"/>
        group by bnpbmr.id
        ) as tmp
    </select>
    <select id="selectStoreRepurchaseRate" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.StoreRepurchaseRateReqVo"
            resultType="com.aiqin.bms.scmp.api.bireport.domain.response.StoreRepurchaseRateRespVo">
        select
        bnm.id as id,
        bnm.order_original_code as orderOriginalCode,
        bnm.order_original_name as orderOriginalName,
        bnm.province_name as provinceName,
        bnm.city_name as cityName,
        bnm.district_name as districtName,
        bnm.product_category_code as productCategoryCode,
        bnm.product_category_name as productCategoryName,
        bnm.product_num as productNum,
        bnm.fen_order_amount as fenOrderAmount,
        bnm.qun_order_amount as qunOrderAmount,
        bnm.shopping_frequency as shoppingFrequency,
        bnm.after_buy_rate as afterBuyRate
        from bi_store_repurchase_rate bsrr
        <include refid="select_store_repurchase_rate"/>
    </select>
    <select id="countStoreRepurchaseRate" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.StoreRepurchaseRateReqVo"
            resultType="java.lang.Integer">
        select count(1) from (
        select
        bsrr.id
        from bi_store_repurchase_rate bsrr
        <include refid="select_store_repurchase_rate"/>
        group by bsrr.id
        ) as tmp
    </select>
    <select id="selectNegativeMargin" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.NegativeMarginReqVo"
            resultType="com.aiqin.bms.scmp.api.bireport.domain.response.NegativeMarginRespVo">
        select
        bnm.id as id,
        bnm.order_original_code as orderOriginalCode,
        bnm.order_original_name as orderOriginalName,
        bnm.sku_code as skuCode,
        bnm.sku_name as skuName,
        bnm.product_category_code as productCategoryCode,
        bnm.product_category_name as productCategoryName,
        bnm.product_brand_code as productBrandCode,
        bnm.product_brand_name as productBrandName,
        bnm.product_num as productNum,
        bnm.sales_cost as salesCost,
        bnm.qun_order_amount as qunOrderAmount,
        bnm.qun_maori as qunMaori,
        bnm.qun_maori_rate as qunMaoriRate,
        bnm.fen_order_amount as fenOrderAmount,
        bnm.fen_maori as fenMaori,
        bnm.fen_maori_rate as fenMaoriRate,
        bnm.product_sort_code as productSortCode,
        bnm.product_sort_name as productSortName
        from bi_negative_margin bnm
        <include refid="select_negative_margin"/>
    </select>
    <select id="countNegativeMargin" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.NegativeMarginReqVo"
            resultType="java.lang.Integer">
        select count(1) from (
        select
        bnm.id
        from bi_negative_margin bnm
        <include refid="select_negative_margin"/>
        group by bnm.id
        ) as tmp
    </select>
    <select id="selectSuggestReplenishment" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.SuggestReplenishmentReqVo"
            resultType="com.aiqin.bms.scmp.api.bireport.domain.response.SuggestReplenishmentRespVo">
        select
        bsr.id as id,
        bsr.product_category_code as productCategoryCode,
        bsr.product_category_name as productCategoryName,
        bsr.product_brand_code as productBrandCode,
        bsr.product_brand_name as productBrandName,
        bsr.sku_code as skuCode,
        bsr.sku_name as skuName,
        bsr.transport_center_code as transportCenterCode,
        bsr.transport_center_name as transportCenterName,
        bsr.average_amount as averageAmount,
        bsr.available_num as availableNum,
        bsr.available_money as availableMoney,
        bsr.turnover_days as turnoverDays,
        bsr.out_stock_continuous_days as outStockContinuousDays,
        bsr.last_month_out_stock_days as lastMonthOutStockDays,
        bsr.advice_orders as adviceOrders,
        bsr.config_status as configStatus
        from bi_suggest_replenishment bsr
        <include refid="select_suggest_replenishment"/>
    </select>
    <select id="countSuggestReplenishment" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.SuggestReplenishmentReqVo"
            resultType="java.lang.Integer">
        select count(1) from (
        select
        bsr.id
        from bi_suggest_replenishment bsr
        <include refid="select_suggest_replenishment"/>
        group by bsr.id
        ) as tmp
    </select>
    <select id="selectLowInventory" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.HighLowInventoryReqVo"
            resultType="com.aiqin.bms.scmp.api.bireport.domain.response.LowInventoryRespVo">
        select
        bli.id as id,
        bli.product_sort_code as productSortCode,
        bli.product_sort_name as productSortName,
        bli.procurement_section_code as procurementSectionCode,
        bli.procurement_section_name as procurementSectionName,
        bli.responsible_person_code as responsiblePersonCode,
        bli.responsible_person_name as responsiblePersonName,
        bli.warehouse_type_code as warehouseTypeCode,
        bli.warehouse_type_name as warehouseTypeName,
        bli.lastweek_total_national as lastweekTotalNational,
        bli.thisweek_total_national as thisweekTotalNational,
        bli.total_sku_num as totalSkuNum,
        bli.low_inventory_num as lowInventoryNum,
        bli.low_inventory_ratio as low_Inventory_ratio
        from bi_low_inventory bli
        <include refid="select_low_inventory"/>
    </select>
    <select id="countLowInventory" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.HighLowInventoryReqVo"
            resultType="java.lang.Integer">
        select count(1) from (
        select
        bli.id
        from bi_low_inventory bli
        <include refid="select_low_inventory"/>
        group by bli.id
        ) as tmp
    </select>
    <select id="selectHighInventory" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.HighLowInventoryReqVo"
            resultType="com.aiqin.bms.scmp.api.bireport.domain.response.HighInventoryRespVo">
        select
        bhi.id as id,
        bhi.product_sort_code as productSortCode,
        bhi.product_sort_name as productSortName,
        bhi.procurement_section_code as procurementSectionCode,
        bhi.procurement_section_name as procurementSectionName,
        bhi.responsible_person_code as responsiblePersonCode,
        bhi.responsible_person_name as responsiblePersonName,
        bhi.warehouse_type_code as warehouseTypeCode,
        bhi.warehouse_type_name as warehouseTypeName,
        bhi.lastweek_total_national as lastweekTotalNational,
        bhi.thisweek_total_national as thisweekTotalNational,
        bhi.high_inventory_amount as highInventoryAmount,
        bhi.inventory_total_amount as inventoryTotalAmount,
        bhi.high_inventory_ratio as highInventoryRatio
        from bi_high_inventory bhi
        <include refid="select_high_inventory"/>
    </select>
    <select id="countHighInventory" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.HighLowInventoryReqVo"
            resultType="java.lang.Integer">
        select count(1) from (
        select
        bhi.id
        from bi_high_inventory bhi
        <include refid="select_high_inventory"/>
        group by bhi.id
        ) as tmp
    </select>
    <select id="selectBrandSale" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.CategorySaleReqVo"
            resultType="com.aiqin.bms.scmp.api.bireport.domain.response.CategorySaleRespVo">
        select
        bbs.id as id,
        bbs.department_code as departmentCode,
        bbs.department_name as departmentName,
        bbs.channel_code as channelCode,
        bbs.channel_name as channelName,
        bbs.store_type_code as storeTypeCode,
        bbs.store_type_name as storeTypeName,
        bbs.data_style_code as dataStyleCode,
        bbs.data_style_name as dataStyleName,
        bbs.category_type_code as categoryTypeCode,
        bbs.category_type_name as categoryTypeName,
        bbs.product_brand_code as productBrandCode,
        bbs.product_brand_name as productBrandName,
        bbs.qun_current_sale_amount as qunCurrentSaleAmount,
        bbs.qun_previous_sales_amount as qunPreviousSalesAmount,
        bbs.qun_current_gross_margin as qunCurrentGrossMargin,
        bbs.qun_category_type_name as qunPreviousGrossMargin,
        bbs.qun_sale_link_ratio as qunSaleLinkRatio,
        bbs.qun_gross_margin_link_ratio as qunGrossMarginLinkRatio,
        bbs.fen_current_sale_amount as fenCurrentSaleAmount,
        bbs.fen_previous_sales_amount as fenPreviousSalesAmount,
        bbs.fen_current_gross_margin as fenCurrentGrossMargin,
        bbs.fen_category_type_name as fenPreviousGrossMargin,
        bbs.fen_sale_link_ratio as fenSaleLinkRatio,
        bbs.fen_gross_margin_link_ratio as fenGrossMarginLinkRatio
        from bi_brand_sale bbs
        <include refid="select_brand_sale"/>
    </select>
    <select id="countBrandSale" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.CategorySaleReqVo"
            resultType="java.lang.Integer">
        select count(1) from (
        select
        bbs.id
        from bi_brand_sale bbs
        <include refid="select_brand_sale"/>
        group by bbs.id
        ) as tmp
    </select>
    <select id="selectCategorySale" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.CategorySaleReqVo"
            resultType="com.aiqin.bms.scmp.api.bireport.domain.response.CategorySaleRespVo">
        select
        bcs.id as id,
        bcs.department_code as departmentCode,
        bcs.department_name as departmentName,
        bcs.channel_code as channelCode,
        bcs.channel_name as channelName,
        bcs.store_type_code as storeTypeCode,
        bcs.store_type_name as storeTypeName,
        bcs.data_style_code as dataStyleCode,
        bcs.data_style_name as dataStyleName,
        bcs.category_type_code as categoryTypeCode,
        bcs.category_type_name as categoryTypeName,
        bcs.qun_current_sale_amount as qunCurrentSaleAmount,
        bcs.qun_previous_sales_amount as qunPreviousSalesAmount,
        bcs.qun_current_gross_margin as qunCurrentGrossMargin,
        bcs.qun_category_type_name as qunPreviousGrossMargin,
        bcs.qun_sale_link_ratio as qunSaleLinkRatio,
        bcs.qun_gross_margin_link_ratio as qunGrossMarginLinkRatio,
        bcs.fen_current_sale_amount as fenCurrentSaleAmount,
        bcs.fen_previous_sales_amount as fenPreviousSalesAmount,
        bcs.fen_current_gross_margin as fenCurrentGrossMargin,
        bcs.fen_category_type_name as fenPreviousGrossMargin,
        bcs.fen_sale_link_ratio as fenSaleLinkRatio,
        bcs.fen_gross_margin_link_ratio as fenGrossMarginLinkRatio
        from bi_category_sale bcs
        <include refid="select_category_sale"/>
    </select>
    <select id="countCategorySale" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.CategorySaleReqVo"
            resultType="java.lang.Integer">
        select count(1) from (
        select
        bcs.id
        from bi_category_sale bcs
        <include refid="select_category_sale"/>
        group by bcs.id
        ) as tmp
    </select>
    <select id="selectBigEffect" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.BigEffectReqVo"
            resultType="com.aiqin.bms.scmp.api.bireport.domain.response.BigEffectRespVo">
        select
        bbe.id as id,
        bbe.product_category_code as productCategoryCode,
        bbe.product_category_name as productCategoryName,
        bbe.product_brand_code as productBrandCode,
        bbe.product_brand_name as productBrandName,
        bbe.procurement_section_code as procurementSectionCode,
        bbe.procurement_section_name as procurementSectionName,
        bbe.supply_unit_code as supplyUnitCode,
        bbe.supply_unit_name as supplyUnitName,
        bbe.sku_code as skuCode,
        bbe.sku_name as skuName,
        bbe.production_date as productionDate,
        bbe.end_date as endDate,
        bbe.quality_number as qualityNumber,
        bbe.big_effect_period_warn_day as bigEffectPeriodWarnDay,
        bbe.transport_center_code as transportCenterCode,
        bbe.transport_center_name as transportCenterName
        from bi_big_effect bbe
        <include refid="select_big_effect"/>
    </select>
    <select id="countBigEffect" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.BigEffectReqVo"
            resultType="java.lang.Integer">
        select count(1) from (
        select
        bbe.id
        from bi_big_effect bbe
        <include refid="select_big_effect"/>
        group by bbe.id
        ) as tmp
    </select>
    <select id="selectMonthlySales" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.MonthlySalesReqVo"
            resultType="com.aiqin.bms.scmp.api.bireport.domain.response.MonthlySalesRespVo">
        select
        bms.id as id,
        #{beginRunTime}  as beginRunTime,
        #{finishRunTime} as finishRunTime,
        bms.product_sort_code as productSortCode,
        bms.product_sort_name as productSortName,
        bms.price_channel_code as priceChannelCode,
        bms.price_channel_name as priceChannelName,
        bms.store_type_code as storeTypeCode,
        bms.store_type_name as storeTypeName,
        bms.data_style_code as dataStyleCode,
        bms.data_style_name as dataStyleName,
        bms.qun_order_amount as qunOrderAmount,
        bms.qun_last_year_sales as qunLastYearSales,
        bms.qun_last_month_sales as qunLastMonthSales,
        bms.qun_compared_same as qunComparedSame,
        bms.qun_sequential as qunSequential,
        bms.fen_order_amount as fenOrderAmount,
        bms.fen_last_year_sales as fenLastYearSales,
        bms.fen_last_month_sales as fenLastMonthSales,
        bms.fen_compared_same as fenComparedSame,
        bms.fen_sequential as fenSequential
        from bi_monthly_sales bms
        <include refid="select_monthly_sales"/>
    </select>
    <select id="countMonthlySales" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.MonthlySalesReqVo"
            resultType="java.lang.Integer">
        select count(1) from (
        select
        bms.id
        from bi_monthly_sales bms
        <include refid="select_monthly_sales"/>
        group by bms.id
        ) as tmp
    </select>
    <select id="selectMonthlyGrossMargin" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.MonthlySalesReqVo"
            resultType="com.aiqin.bms.scmp.api.bireport.domain.response.MonthlySalesRespVo">
        select
        bmgm.id as id,
        #{beginRunTime}  as beginRunTime,
        #{finishRunTime} as finishRunTime,
        bmgm.product_sort_code as productSortCode,
        bmgm.product_sort_name as productSortName,
        bmgm.price_channel_code as priceChannelCode,
        bmgm.price_channel_name as priceChannelName,
        bmgm.store_type_code as storeTypeCode,
        bmgm.store_type_name as storeTypeName,
        bmgm.data_style_code as dataStyleCode,
        bmgm.data_style_name as dataStyleName,
        bmgm.qun_order_amount as qunOrderAmount,
        bmgm.qun_last_year_sales as qunLastYearSales,
        bmgm.qun_last_month_sales as qunLastMonthSales,
        bmgm.qun_compared_same as qunComparedSame,
        bmgm.qun_sequential as qunSequential,
        bmgm.fen_order_amount as fenOrderAmount,
        bmgm.fen_last_year_sales as fenLastYearSales,
        bmgm.fen_last_month_sales as fenLastMonthSales,
        bmgm.fen_compared_same as fenComparedSame,
        bmgm.fen_sequential as fenSequential
        from bi_month_gross_margin bmgm
        <include refid="select_monthly_gross_margin"/>
    </select>
    <select id="countMonthlyGrossMargin" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.MonthlySalesReqVo"
            resultType="java.lang.Integer">
        select count(1) from (
        select
        bmgm.id
        from bi_month_gross_margin bmgm
        <include refid="select_monthly_gross_margin"/>
        group by bmgm.id
        ) as tmp
    </select>
    <select id="selectMonthSalesAchievement" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.MonthSalesAchievementReqVo"
            resultType="com.aiqin.bms.scmp.api.bireport.domain.response.MonthSalesAchievementRespVo">
        select
        bmsa.id as id,
        #{beginRunTime}  as beginRunTime,
        #{finishRunTime} as finishRunTime,
        bmsa.product_sort_code as productSortCode,
        bmsa.product_sort_name as productSortName,
        bmsa.price_channel_code as priceChannelCode,
        bmsa.price_channel_name as priceChannelName,
        bmsa.store_type_code as storeTypeCode,
        bmsa.store_type_name as storeTypeName,
        bmsa.data_style_code as dataStyleCode,
        bmsa.data_style_name as dataStyleName,
        bmsa.category_type_code as categoryTypeCode,
        bmsa.category_type_name as categoryTypeName,
        bmsa.qun_amount as qunAmount,
        bmsa.qun_budget as qunBudget,
        bmsa.qun_yield_rate as qunYieldRate,
        bmsa.fen_amount as fenAmount,
        bmsa.fen_budget as febBudget,
        bmsa.fen_yield_rate as fenYieldRate
        from bi_month_sales_achievement bmsa
        <include refid="select_month_sales_achievement"/>
    </select>
    <select id="countMonthSalesAchievement" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.MonthSalesAchievementReqVo"
            resultType="java.lang.Integer">
        select count(1) from (
        select
        bmsa.id
        from bi_month_sales_achievement bmsa
        <include refid="select_month_sales_achievement"/>
        group by bmsa.id
        ) as tmp
    </select>
    <select id="selectMonthCumulativeBrandSales" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.MonthSalesAchievementReqVo"
            resultType="com.aiqin.bms.scmp.api.bireport.domain.response.MonthCumulativeBrandSalesRespVo">
        select
        bmcbs.id as id,
        #{beginRunTime}  as beginRunTime,
        #{finishRunTime} as finishRunTime,
        bmcbs.product_sort_code as productSortCode,
        bmcbs.product_sort_name as productSortName,
        bmcbs.price_channel_code as priceChannelCode,
        bmcbs.price_channel_name as priceChannelName,
        bmcbs.store_type_code as storeTypeCode,
        bmcbs.store_type_name as storeTypeName,
        bmcbs.data_style_code as dataStyleCode,
        bmcbs.data_style_name as dataStyleName,
        bmcbs.category_type_code as categoryTypeCode,
        bmcbs.category_type_name as categoryTypeName,
        bmcbs.qun_order_amount as qunOrderAmount,
        bmcbs.qun_last_year_sales as qunLastYearSales,
        bmcbs.qun_last_month_sales as qunLastMonthSales,
        bmcbs.qun_compared_same as qunComparedSame,
        bmcbs.qun_sequential as qunSequential,
        bmcbs.fen_order_amount as fenOrderAmount,
        bmcbs.fen_last_year_sales as fenLastYearSales,
        bmcbs.fen_last_month_sales as fenLastMonthSales,
        bmcbs.fen_compared_same as fenComparedSame,
        bmcbs.fen_sequential as fenSequential
        from bi_month_cumulative_brand_sales bmcbs
        <include refid="select_month_cumulative_brand_sales"/>
    </select>
    <select id="countMonthCumulativeBrandSales" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.MonthSalesAchievementReqVo"
            resultType="java.lang.Integer">
        select count(1) from (
        select
        bmcbs.id
        from bi_month_cumulative_brand_sales bmcbs
        <include refid="select_month_cumulative_brand_sales"/>
        group by bmcbs.id
        ) as tmp
    </select>
    <select id="selectMonthCumulativeGrossProfitMargin" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.MonthSalesAchievementReqVo"
            resultType="com.aiqin.bms.scmp.api.bireport.domain.response.MonthCumulativeGrossProfitMarginRespVo">
        select
        bmcgpm.id as id,
        #{beginRunTime}  as beginRunTime,
        #{finishRunTime} as finishRunTime,
        bmcgpm.product_sort_code as productSortCode,
        bmcgpm.product_sort_name as productSortName,
        bmcgpm.price_channel_code as priceChannelCode,
        bmcgpm.price_channel_name as priceChannelName,
        bmcgpm.store_type_code as storeTypeCode,
        bmcgpm.store_type_name as storeTypeName,
        bmcgpm.data_style_code as dataStyleCode,
        bmcgpm.data_style_name as dataStyleName,
        bmcgpm.category_type_code as categoryTypeCode,
        bmcgpm.category_type_name as categoryTypeName,
        bmcgpm.sales_cost as salesCost,
        bmcgpm.qun_amount as qunAmount,
        bmcgpm.qun_maori as qunMaori,
        bmcgpm.qun_maori_rate as qunMaoriRate,
        bmcgpm.qun_last_maori_rate as qunLastMaoriRate,
        bmcgpm.qun_compared_same as qunComparedSame,
        bmcgpm.qun_sequential as qunSequential,
        bmcgpm.fen_amount as fenAmount,
        bmcgpm.fen_maori as fenMaori,
        bmcgpm.fen_maori_rate as fenMaoriRate,
        bmcgpm.fen_last_maori_rate as fenLastMaoriRate,
        bmcgpm.fen_compared_same as fenComparedSame,
        bmcgpm.fen_sequential as fenSequential
        from bi_month_cumulative_gross_profit_margin bmcgpm
        <include refid="select_month_cumulative_gross_profit_margin"/>
    </select>
    <select id="countMonthCumulativeGrossProfitMargin" parameterType="com.aiqin.bms.scmp.api.bireport.domain.request.MonthSalesAchievementReqVo"
            resultType="java.lang.Integer">
        select count(1) from (
        select
        bmcgpm.id
        from bi_month_cumulative_gross_profit_margin bmcgpm
        <include refid="select_month_cumulative_gross_profit_margin"/>
        group by bmcgpm.id
        ) as tmp
    </select>
    <select id="selectStoreType" resultType="com.aiqin.bms.scmp.api.bireport.domain.response.MonthlySalesRespVo">
        SELECT
        bms.store_type_code as storeTypeCode,
        bms.store_type_name as storeTypeName
        FROM bi_monthly_sales bms
    </select>
    <select id="selectDataStyle" resultType="com.aiqin.bms.scmp.api.bireport.domain.response.MonthlySalesRespVo">
        SELECT
        bms.data_style_code as dataStyleCode,
        bms.data_style_name as dataStyleName
        FROM bi_monthly_sales bms
    </select>
    <select id="selectAllOneCategory" resultType="java.util.HashMap">
        SELECT
        bsar.category_code,
        bsar.category_name
        FROM bi_supplier_arrival_rate bsar
    </select>
    <select id="selectTableCloumnName" resultType="java.util.HashMap">
        select
        COLUMN_COMMENT as columnName,COLUMN_NAME as columnKey
        from information_schema.COLUMNS
        where
        table_name = #{cloumnName} and table_schema = 'bms_scmp'
    </select>
    <select id="selectNewProductBatchMovingRateTableCloumnName" resultType="java.util.HashMap">
        select
        COLUMN_COMMENT as columnName,COLUMN_NAME as columnKey
        from information_schema.COLUMNS
        where
        table_name = #{cloumnName} and table_schema = 'bms_scmp'
    </select>
</mapper>
