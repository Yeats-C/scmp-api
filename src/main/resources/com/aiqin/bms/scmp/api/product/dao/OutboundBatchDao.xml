<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aiqin.bms.scmp.api.product.dao.OutboundBatchDao">
  <resultMap id="BaseResultMap" type="com.aiqin.bms.scmp.api.product.domain.pojo.OutboundBatch">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="outbound_oder_code" jdbcType="VARCHAR" property="outboundOderCode" />
    <result column="batch_code" jdbcType="VARCHAR" property="batchCode" />
    <result column="batch_info_code" jdbcType="VARCHAR" property="batchInfoCode" />
    <result column="sku_code" jdbcType="VARCHAR" property="skuCode" />
    <result column="sku_name" jdbcType="VARCHAR" property="skuName" />
    <result column="supplier_code" jdbcType="VARCHAR" property="supplierCode" />
    <result column="supplier_name" jdbcType="VARCHAR" property="supplierName" />
    <result column="batch_remark" jdbcType="VARCHAR" property="batchRemark" />
    <result column="product_date" jdbcType="VARCHAR" property="productDate" />
    <result column="be_overdue_date" jdbcType="VARCHAR" property="beOverdueDate" />
    <result column="total_count" jdbcType="BIGINT" property="totalCount" />
    <result column="actual_total_count" jdbcType="BIGINT" property="actualTotalCount" />
    <result column="location_code" jdbcType="VARCHAR" property="locationCode" />
    <result column="line_code" jdbcType="BIGINT" property="lineCode" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by_id" jdbcType="VARCHAR" property="createById" />
    <result column="update_by_id" jdbcType="VARCHAR" property="updateById" />
    <result column="create_by_name" jdbcType="VARCHAR" property="createByName" />
    <result column="update_by_name" jdbcType="VARCHAR" property="updateByName" />
  </resultMap>
  <sql id="Base_Column_List">
    id, outbound_oder_code, batch_code, batch_info_code, sku_code, sku_name, supplier_code,
    supplier_name, batch_remark, product_date, be_overdue_date, total_count, actual_total_count,
    location_code, line_code, create_time, update_time, create_by_id, update_by_id, create_by_name,
    update_by_name
  </sql>

  <select id="selectOutboundBatchInfoByOutboundOderCode" parameterType="com.aiqin.bms.scmp.api.product.domain.pojo.OutboundBatch" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from outbound_batch where outbound_oder_code = #{outboundOderCode, jdbcType=VARCHAR}
    LIMIT #{beginIndex,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
  </select>
  <select id="countOutboundBatchInfoByOutboundOderCode" parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(1)
    from outbound_batch where outbound_oder_code = #{outboundOderCode, jdbcType=VARCHAR}
  </select>
  <insert id="insertAll">
    insert into outbound_batch (outbound_oder_code, batch_code, batch_info_code, sku_code, sku_name, supplier_code,
    supplier_name, batch_remark, product_date, be_overdue_date, total_count, actual_total_count,
    location_code, line_code, create_time, update_time, create_by_id, update_by_id, create_by_name,
    update_by_name)
    values
    <foreach collection="list" index="index" item="item" separator=",">
    (#{item.outboundOderCode,jdbcType=VARCHAR}, #{item.batchCode,jdbcType=VARCHAR}, #{item.batchInfoCode,jdbcType=VARCHAR},
      #{item.skuCode,jdbcType=VARCHAR}, #{item.skuName,jdbcType=VARCHAR}, #{item.supplierCode,jdbcType=VARCHAR},
      #{item.supplierName,jdbcType=VARCHAR}, #{item.batchRemark,jdbcType=VARCHAR}, #{item.productDate,jdbcType=VARCHAR},
      #{item.beOverdueDate,jdbcType=VARCHAR}, #{item.totalCount,jdbcType=BIGINT}, #{item.actualTotalCount,jdbcType=BIGINT},
      #{item.locationCode,jdbcType=VARCHAR}, #{item.lineCode,jdbcType=BIGINT},  now(),now(),
      #{item.createById,jdbcType=VARCHAR}, #{item.updateById,jdbcType=VARCHAR},
      #{item.createByName,jdbcType=VARCHAR}, #{item.updateByName,jdbcType=VARCHAR})
    </foreach>
  </insert>

  <select id="listByOrderCode" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from
    outbound_batch
    where outbound_oder_code in
    <foreach collection="orderCodeList"  item="item" open="(" close=")" separator=",">
      #{item}
    </foreach>
  </select>
  <select id="selectBatchInfoByLineCode" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from outbound_batch
    where outbound_oder_code = #{outboundOderCode,jdbcType=VARCHAR}
    <if test="batchCode != null">
    and batch_code = #{batchCode,jdbcType=VARCHAR}
    </if>
    and line_code = #{lineCode,jdbcType=BIGINT}
  </select>

  <update id="update">
    update outbound_batch
    <set>
      <if test="batchCode != null">
        batch_code = #{batchCode,jdbcType=VARCHAR},
      </if>
      <if test="batchInfoCode != null">
        batch_info_code = #{batchInfoCode,jdbcType=VARCHAR},
      </if>
      <if test="skuName != null">
        sku_name = #{skuName,jdbcType=VARCHAR},
      </if>
      <if test="supplierCode != null">
        supplier_code = #{supplierCode,jdbcType=VARCHAR},
      </if>
      <if test="supplierName != null">
        supplier_name = #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="batchRemark != null">
        batch_remark = #{batchRemark,jdbcType=VARCHAR},
      </if>
      <if test="productDate != null">
        product_date = #{productDate,jdbcType=VARCHAR},
      </if>
      <if test="beOverdueDate != null">
        be_overdue_date = #{beOverdueDate,jdbcType=VARCHAR},
      </if>
      <if test="totalCount != null">
        total_count = #{totalCount,jdbcType=BIGINT},
      </if>
      <if test="actualTotalCount != null">
        actual_total_count = #{actualTotalCount,jdbcType=BIGINT},
      </if>
      <if test="locationCode != null">
        location_code = #{locationCode,jdbcType=VARCHAR},
      </if>
        update_time = now(),
      <if test="updateById != null">
        update_by_id = #{updateById,jdbcType=VARCHAR},
      </if>
      <if test="updateByName != null">
        update_by_name = #{updateByName,jdbcType=VARCHAR},
      </if>
    </set>
    where outbound_oder_code = #{outboundOderCode,jdbcType=VARCHAR}
    and batch_info_code = #{batchInfoCode,jdbcType=VARCHAR}
    and line_code = #{lineCode,jdbcType=BIGINT}
  </update>
  <select id="selectByOutboundBatchOderCode" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from outbound_batch
    where outbound_oder_code = #{outboundOderCode,jdbcType=VARCHAR}
  </select>
  <select id="outboundBatchBySap"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from outbound_batch
    where outbound_oder_code = #{outboundOderCode,jdbcType=VARCHAR}
    and sku_code = #{skuCode,jdbcType=VARCHAR}
    and line_code = #{lineCode,jdbcType=BIGINT}
  </select>
</mapper>