<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aiqin.bms.scmp.api.purchase.mapper.OrderInfoItemBatchMonthMapper">
  <resultMap id="BaseResultMap" type="com.aiqin.bms.scmp.api.purchase.domain.pojo.order.OrderInfoItemBatchMonth">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_code" jdbcType="VARCHAR" property="orderCode" />
    <result column="location_code" jdbcType="VARCHAR" property="locationCode" />
    <result column="line_code" jdbcType="BIGINT" property="lineCode" />
    <result column="original_line_code" jdbcType="BIGINT" property="originalLineCode" />
    <result column="sku_code" jdbcType="VARCHAR" property="skuCode" />
    <result column="sku_name" jdbcType="VARCHAR" property="skuName" />
    <result column="warehouse_code" jdbcType="VARCHAR" property="warehouseCode" />
    <result column="total_count" jdbcType="BIGINT" property="totalCount" />
    <result column="actual_total_count" jdbcType="BIGINT" property="actualTotalCount" />
    <result column="return_total_count" jdbcType="BIGINT" property="returnTotalCount" />
    <result column="product_date" jdbcType="VARCHAR" property="productDate" />
    <result column="be_overdue_date" jdbcType="VARCHAR" property="beOverdueDate" />
    <result column="batch_remark" jdbcType="VARCHAR" property="batchRemark" />
    <result column="batch_id" jdbcType="VARCHAR" property="batchId" />
    <result column="batch_code" jdbcType="VARCHAR" property="batchCode" />
    <result column="batch_info_code" jdbcType="VARCHAR" property="batchInfoCode" />
    <result column="lock_type" jdbcType="INTEGER" property="lockType" />
    <result column="supplier_code" jdbcType="VARCHAR" property="supplierCode" />
    <result column="supplier_name" jdbcType="VARCHAR" property="supplierName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by_id" jdbcType="VARCHAR" property="createById" />
    <result column="update_by_id" jdbcType="VARCHAR" property="updateById" />
    <result column="create_by_name" jdbcType="VARCHAR" property="createByName" />
    <result column="update_by_name" jdbcType="VARCHAR" property="updateByName" />

  </resultMap>
  <sql id="Base_Column_List">
    id, order_code, location_code, line_code, original_line_code, sku_code, sku_name, warehouse_code, total_count,
     actual_total_count, return_total_count,
    product_date, batch_remark, batch_id, batch_code, lock_type, supplier_code,supplier_name,batch_info_code, be_overdue_date,
    create_time, update_time, create_by_id, update_by_id, create_by_name, update_by_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_info_item_batch_month
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="com.aiqin.bms.scmp.api.purchase.domain.pojo.order.OrderInfoItemBatchMonth">
     insert into order_info_item_batch_month
     (id, order_code, location_code,line_code,original_line_code, sku_code, sku_name, warehouse_code,
      total_count, actual_total_count, return_total_count, product_date, batch_remark, batch_id,
      batch_code, lock_type, supplier_code, supplier_name, batch_info_code, be_overdue_date,
      create_time, update_time, create_by_id, update_by_id, create_by_name, update_by_name)
    values
      (#{id,jdbcType=BIGINT}, #{orderCode,jdbcType=VARCHAR}, #{locationCode,jdbcType=VARCHAR},
      #{lineCode,jdbcType=BIGINT}, #{originalLineCode,jdbcType=BIGINT}, #{skuCode,jdbcType=VARCHAR},
      #{skuName,jdbcType=VARCHAR}, #{warehouseCode,jdbcType=VARCHAR}, #{totalCount,jdbcType=BIGINT},
      #{actualTotalCount,jdbcType=BIGINT},
      #{returnTotalCount,jdbcType=BIGINT}, #{productDate,jdbcType=VARCHAR},  #{batchRemark,jdbcType=VARCHAR},
      #{batchId,jdbcType=VARCHAR}, #{batchCode,jdbcType=VARCHAR}, #{lockType,jdbcType=INTEGER},
      #{supplierCode,jdbcType=VARCHAR},#{supplierName,jdbcType=VARCHAR},#{batchInfoCode,jdbcType=VARCHAR},
      #{beOverdueDate,jdbcType=VARCHAR},now(),now(),
      #{createById,jdbcType=VARCHAR},#{updateById,jdbcType=VARCHAR},
      #{createByName,jdbcType=VARCHAR},#{updateByName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertList" parameterType="com.aiqin.bms.scmp.api.purchase.domain.pojo.order.OrderInfoItemBatchMonth">
    insert into order_info_item_batch_month (id, order_code, location_code,
    line_code, original_line_code, sku_code, sku_name, warehouse_code,
    total_count, actual_total_count, return_total_count, product_date,
    batch_remark, batch_id, batch_code, lock_type,
    supplier_code, supplier_name, batch_info_code, be_overdue_date,
    create_time, update_time, create_by_id, update_by_id,
    create_by_name, update_by_name)
    values
     <foreach collection="list" item="item"  separator=",">
       (
       #{item.orderCode,jdbcType=VARCHAR},
       #{item.locationCode,jdbcType=VARCHAR},
       #{item.lineCode,jdbcType=BIGINT},
       #{item.originalLineCode,jdbcType=BIGINT},
       #{item.skuCode,jdbcType=VARCHAR},
       #{item.skuName,jdbcType=VARCHAR},
       #{item.warehouseCode,jdbcType=VARCHAR},
       #{item.totalCount,jdbcType=BIGINT},
       #{item.actualTotalCount,jdbcType=BIGINT},
       #{item.returnTotalCount,jdbcType=BIGINT},
       #{item.productDate,jdbcType=VARCHAR},
       #{item.batchRemark,jdbcType=VARCHAR},
       #{item.batchCode,jdbcType=VARCHAR},
       #{item.lockType,jdbcType=INTEGER},
       #{item.supplierCode,jdbcType=VARCHAR},
       #{item.supplierName,jdbcType=VARCHAR},
       #{item.batchInfoCode,jdbcType=VARCHAR},
       #{item.beOverdueDate,jdbcType=VARCHAR},
       now(),
       now(),
       #{item.createById,jdbcType=VARCHAR},
       #{item.updateById,jdbcType=VARCHAR},
       #{item.createByName,jdbcType=VARCHAR},
       #{item.updateByName,jdbcType=VARCHAR}
       )
     </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.aiqin.bms.scmp.api.purchase.domain.pojo.order.OrderInfoItemBatchMonth">
    insert into order_info_item_batch_month
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderCode != null">
        order_code,
      </if>
      <if test="locationCode != null">
        location_code,
      </if>
      <if test="lineCode != null">
        line_code,
      </if>
      <if test="originalLineCode != null">
        original_line_code,
      </if>
      <if test="skuCode != null">
        sku_code,
      </if>
      <if test="skuName != null">
        sku_name,
      </if>
      <if test="warehouseCode, != null">
        warehouse_code,
      </if>
      <if test="totalCount != null">
        total_count,
      </if>
      <if test="actualTotalCount != null">
        actual_total_count,
      </if>
      <if test="returnTotalCount != null">
        return_total_count,
      </if>
      <if test="productDate != null">
        product_date,
      </if>
      <if test="batchRemark != null">
        batch_remark,
      </if>
      <if test="batchId != null">
        batch_id,
      </if>
      <if test="batchCode != null">
        batch_code,
      </if>
      <if test="lockType != null">
        lock_type,
      </if>
      <if test="supplierCode != null">
        supplier_code,
      </if>
      <if test="supplierName != null">
        supplier_name,
      </if>
      <if test="batchInfoCode != null">
        batch_info_code,
      </if>
      <if test="beOverdueDate != null">
        be_overdue_date,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createById != null">
        create_by_id,
      </if>
      <if test="updateById != null">
        update_by_id,
      </if>
      <if test="createByName != null">
        create_by_name,
      </if>
      <if test="updateByName != null">
        update_by_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderCode != null">
        #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="locationCode != null">
        #{locationCode,jdbcType=VARCHAR},
      </if>
      <if test="lineCode != null">
        #{lineCode,jdbcType=BIGINT},
      </if>
      <if test="originalLineCode != null">
        #{originalLineCode,jdbcType=BIGINT},
      </if>
      <if test="skuCode != null">
        #{skuCode,jdbcType=VARCHAR},
      </if>
      <if test="skuName != null">
        #{skuName,jdbcType=VARCHAR},
      </if>
      <if test="warehouseCode, != null">
        #{warehouseCode,jdbcType=VARCHAR},
      </if>
      <if test="totalCount != null">
        #{totalCount,jdbcType=BIGINT},
      </if>
      <if test="actualTotalCount != null">
        #{actualTotalCount,jdbcType=BIGINT},
      </if>
      <if test="returnTotalCount != null">
        #{returnTotalCount,jdbcType=BIGINT},
      </if>
      <if test="productDate != null">
        #{productDate,jdbcType=VARCHAR},
      </if>
      <if test="batchRemark != null">
        #{batchRemark,jdbcType=VARCHAR},
      </if>
      <if test="batchId != null">
        #{batchId,jdbcType=VARCHAR},
      </if>
      <if test="batchCode != null">
        #{batchCode,jdbcType=VARCHAR},
      </if>
      <if test="lockType != null">
        #{lockType,jdbcType=INTEGER},
      </if>
      <if test="supplierCode != null">
        #{supplierCode,jdbcType=VARCHAR},
      </if>
      <if test="supplierName != null">
        #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="batchInfoCode != null">
        #{batchInfoCode,jdbcType=VARCHAR},
      </if>
      <if test="beOverdueDate != null">
        #{beOverdueDate,jdbcType=VARCHAR},
      </if>
      now(),now(),
      <if test="createById != null">
        #{createById,jdbcType=VARCHAR},
      </if>
      <if test="updateById != null">
        #{updateById,jdbcType=VARCHAR},
      </if>
      <if test="createByName != null">
        #{createByName,jdbcType=VARCHAR},
      </if>
      <if test="updateByName != null">
        #{updateByName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
</mapper>