<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aiqin.bms.scmp.api.purchase.mapper.ReturnOrderInfoInspectionItemMapper">
  <resultMap id="BaseResultMap" type="com.aiqin.bms.scmp.api.purchase.domain.pojo.returngoods.ReturnOrderInfoInspectionItem">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="return_order_code" jdbcType="VARCHAR" property="returnOrderCode" />
    <result column="sku_code" jdbcType="VARCHAR" property="skuCode" />
    <result column="sku_name" jdbcType="VARCHAR" property="skuName" />
    <result column="picture_url" jdbcType="VARCHAR" property="pictureUrl" />
    <result column="spec" jdbcType="VARCHAR" property="spec" />
    <result column="color_name" jdbcType="VARCHAR" property="colorName" />
    <result column="color_code" jdbcType="VARCHAR" property="colorCode" />
    <result column="model" jdbcType="VARCHAR" property="model" />
    <result column="base_product_content" jdbcType="INTEGER" property="baseProductContent" />
    <result column="unit_code" jdbcType="VARCHAR" property="unitCode" />
    <result column="unit_name" jdbcType="VARCHAR" property="unitName" />
    <result column="zero_disassembly_coefficient" jdbcType="INTEGER" property="zeroDisassemblyCoefficient" />
    <result column="product_status" jdbcType="INTEGER" property="productStatus" />
    <result column="give_promotion" jdbcType="INTEGER" property="givePromotion" />
    <result column="line_code" jdbcType="BIGINT" property="lineCode" />
    <result column="transport_center_code" jdbcType="VARCHAR" property="transportCenterCode" />
    <result column="transport_center_name" jdbcType="VARCHAR" property="transportCenterName" />
    <result column="warehouse_code" jdbcType="VARCHAR" property="warehouseCode" />
    <result column="warehouse_name" jdbcType="VARCHAR" property="warehouseName" />
    <result column="supplier_code" jdbcType="VARCHAR" property="supplierCode" />
    <result column="supplier_name" jdbcType="VARCHAR" property="supplierName" />
    <result column="product_count" jdbcType="BIGINT" property="productCount" />
    <result column="actual_product_count" jdbcType="BIGINT" property="actualProductCount" />
    <result column="batch_code" jdbcType="VARCHAR" property="batchCode" />
    <result column="batch_info_code" jdbcType="VARCHAR" property="batchInfoCode" />
    <result column="product_date" jdbcType="VARCHAR" property="productDate" />
    <result column="be_overdue_date" jdbcType="VARCHAR" property="beOverdueDate" />
    <result column="location_code" jdbcType="VARCHAR" property="locationCode" />
    <result column="return_product_count" jdbcType="BIGINT" property="returnProductCount" />
    <result column="batch_remark" jdbcType="VARCHAR" property="batchRemark" />
    <result column="lock_type" jdbcType="INTEGER" property="lockType" />
  </resultMap>
  <sql id="Base_Column_List">
    id, return_order_code, sku_code, sku_name, picture_url, spec, color_name, color_code,
    model, base_product_content, unit_code, unit_name, zero_disassembly_coefficient,
    product_status, give_promotion, line_code, transport_center_code, transport_center_name,
    warehouse_code, warehouse_name, supplier_code, supplier_name,  ifnull(product_count, 0), ifnull(actual_product_count, 0),
    batch_code, batch_info_code, product_date, be_overdue_date, location_code, return_product_count,
    batch_remark, lock_type
  </sql>
  <insert id="insert">
    insert into return_order_info_inspection_item (return_order_code, sku_code, sku_name, picture_url, spec, color_name,
      color_code, model, base_product_content, unit_code, unit_name, zero_disassembly_coefficient, product_status, 
      give_promotion, line_code, transport_center_code, transport_center_name, warehouse_code, warehouse_name, 
      supplier_code, supplier_name, product_count, actual_product_count, batch_code, batch_info_code, 
      product_date, be_overdue_date, location_code, return_product_count, batch_remark, lock_type)
    values (#{returnOrderCode,jdbcType=VARCHAR}, #{skuCode,jdbcType=VARCHAR}, #{skuName,jdbcType=VARCHAR}, 
      #{pictureUrl,jdbcType=VARCHAR}, #{spec,jdbcType=VARCHAR}, #{colorName,jdbcType=VARCHAR}, 
      #{colorCode,jdbcType=VARCHAR}, #{model,jdbcType=VARCHAR}, #{baseProductContent,jdbcType=INTEGER},
      #{unitCode,jdbcType=VARCHAR}, #{unitName,jdbcType=VARCHAR}, #{zeroDisassemblyCoefficient,jdbcType=INTEGER}, 
      #{productStatus,jdbcType=INTEGER}, #{givePromotion,jdbcType=INTEGER}, #{lineCode,jdbcType=BIGINT}, 
      #{transportCenterCode,jdbcType=VARCHAR}, #{transportCenterName,jdbcType=VARCHAR}, #{warehouseCode,jdbcType=VARCHAR},
      #{warehouseName,jdbcType=VARCHAR}, #{supplierCode,jdbcType=VARCHAR}, #{supplierName,jdbcType=VARCHAR},
      #{productCount,jdbcType=BIGINT}, #{actualProductCount,jdbcType=BIGINT}, #{batchCode,jdbcType=VARCHAR},
      #{batchInfoCode,jdbcType=VARCHAR}, #{productDate,jdbcType=VARCHAR}, #{beOverdueDate,jdbcType=VARCHAR},
      #{locationCode,jdbcType=VARCHAR}, #{returnProductCount,jdbcType=BIGINT}, #{batchRemark,jdbcType=VARCHAR},
      #{lockType,jdbcType=INTEGER})
  </insert>
  <update id="update">
    update return_order_info_inspection_item
    <set>
      <if test="returnOrderCode != null">
        return_order_code = #{returnOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="skuCode != null">
        sku_code = #{skuCode,jdbcType=VARCHAR},
      </if>
      <if test="skuName != null">
        sku_name = #{skuName,jdbcType=VARCHAR},
      </if>
      <if test="pictureUrl != null">
        picture_url = #{pictureUrl,jdbcType=VARCHAR},
      </if>
      <if test="spec != null">
        spec = #{spec,jdbcType=VARCHAR},
      </if>
      <if test="colorName != null">
        color_name = #{colorName,jdbcType=VARCHAR},
      </if>
      <if test="colorCode != null">
        color_code = #{colorCode,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="baseProductContent != null">
        base_product_content = #{baseProductContent,jdbcType=INTEGER},
      </if>
      <if test="unitCode != null">
        unit_code = #{unitCode,jdbcType=VARCHAR},
      </if>
      <if test="unitName != null">
        unit_name = #{unitName,jdbcType=VARCHAR},
      </if>
      <if test="zeroDisassemblyCoefficient != null">
        zero_disassembly_coefficient = #{zeroDisassemblyCoefficient,jdbcType=INTEGER},
      </if>
      <if test="productStatus != null">
        product_status = #{productStatus,jdbcType=INTEGER},
      </if>
      <if test="givePromotion != null">
        give_promotion = #{givePromotion,jdbcType=INTEGER},
      </if>
      <if test="lineCode != null">
        line_code = #{lineCode,jdbcType=BIGINT},
      </if>
      <if test="transportCenterCode != null">
        transport_center_code = #{transportCenterCode,jdbcType=VARCHAR},
      </if>
      <if test="transportCenterName != null">
        transport_center_name = #{transportCenterName,jdbcType=VARCHAR},
      </if>
      <if test="warehouseCode != null">
        warehouse_code = #{warehouseCode,jdbcType=VARCHAR},
      </if>
      <if test="warehouseName != null">
        warehouse_name = #{warehouseName,jdbcType=VARCHAR},
      </if>
      <if test="supplierCode != null">
        supplier_code = #{supplierCode,jdbcType=VARCHAR},
      </if>
      <if test="supplierName != null">
        supplier_name = #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="productCount != null">
        product_count = #{productCount,jdbcType=BIGINT},
      </if>
      <if test="actualProductCount != null">
        actual_product_count = #{actualProductCount,jdbcType=BIGINT},
      </if>
      <if test="batchCode != null">
        batch_code = #{batchCode,jdbcType=VARCHAR},
      </if>
      <if test="batchInfoCode != null">
        batch_info_code = #{batchInfoCode,jdbcType=VARCHAR},
      </if>
      <if test="productDate != null">
        product_date = #{productDate,jdbcType=VARCHAR},
      </if>
      <if test="beOverdueDate != null">
        be_overdue_date = #{beOverdueDate,jdbcType=VARCHAR},
      </if>
      <if test="locationCode != null">
        location_code = #{locationCode,jdbcType=VARCHAR},
      </if>
      <if test="returnProductCount != null">
        return_product_count = #{returnProductCount,jdbcType=BIGINT},
      </if>
      <if test="batchRemark != null">
        batch_remark = #{batchRemark,jdbcType=VARCHAR},
      </if>
      <if test="lockType != null">
        lock_type = #{lockType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="insertBatch">
    insert into return_order_info_inspection_item (return_order_code, sku_code, sku_name, picture_url, spec, color_name,
      color_code, model, base_product_content, unit_code, unit_name, zero_disassembly_coefficient, product_status,
      give_promotion, line_code, transport_center_code, transport_center_name, warehouse_code, warehouse_name,
      supplier_code, supplier_name, product_count, actual_product_count, batch_code, batch_info_code,
      product_date, be_overdue_date, location_code, return_product_count, batch_remark, lock_type)
    values
    <foreach collection="list" item="item"  separator=",">
      (#{item.returnOrderCode,jdbcType=VARCHAR}, #{item.skuCode,jdbcType=VARCHAR}, #{item.skuName,jdbcType=VARCHAR},
      #{item.pictureUrl,jdbcType=VARCHAR}, #{item.spec,jdbcType=VARCHAR}, #{item.colorName,jdbcType=VARCHAR},
      #{item.colorCode,jdbcType=VARCHAR}, #{item.model,jdbcType=VARCHAR}, #{item.baseProductContent,jdbcType=INTEGER},
      #{item.unitCode,jdbcType=VARCHAR}, #{item.unitName,jdbcType=VARCHAR}, #{item.zeroDisassemblyCoefficient,jdbcType=INTEGER},
      #{item.productStatus,jdbcType=INTEGER}, #{item.givePromotion,jdbcType=INTEGER}, #{item.lineCode,jdbcType=BIGINT},
      #{item.transportCenterCode,jdbcType=VARCHAR}, #{item.transportCenterName,jdbcType=VARCHAR}, #{item.warehouseCode,jdbcType=VARCHAR},
      #{item.warehouseName,jdbcType=VARCHAR}, #{item.supplierCode,jdbcType=VARCHAR}, #{item.supplierName,jdbcType=VARCHAR},
      #{item.productCount,jdbcType=BIGINT}, #{item.actualProductCount,jdbcType=BIGINT}, #{item.batchCode,jdbcType=VARCHAR},
      #{item.batchInfoCode,jdbcType=VARCHAR}, #{item.productDate,jdbcType=VARCHAR}, #{item.beOverdueDate,jdbcType=VARCHAR},
      #{item.locationCode,jdbcType=VARCHAR}, #{item.returnProductCount,jdbcType=BIGINT}, #{item.batchRemark,jdbcType=VARCHAR},
      #{item.lockType,jdbcType=INTEGER})
    </foreach>
  </insert>
  <select id="returnBatchList" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include>
    from return_order_info_inspection_item
    where return_order_code = #{returnOrderCode,jdbcType=VARCHAR}
    and sku_code = #{skuCode,jdbcType=VARCHAR}
    and line_code = #{lineCode,jdbcType=BIGINT}
  </select>
  <select id="returnOrderInfo" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include>
    from return_order_info_inspection_item
    where return_order_code = #{returnOrderCode,jdbcType=VARCHAR}
    <if test="batchCode != null">
    and batch_code = #{batchCode,jdbcType=VARCHAR}
    </if>
    <if test="lineCode != null">
        and line_code = #{lineCode,jdbcType=BIGINT}
    </if>
    and sku_code = #{skuCode,jdbcType=VARCHAR}
  </select>
  <select id="returnOrderBatchList" resultMap="BaseResultMap">
      select <include refid="Base_Column_List"></include>
      from return_order_info_inspection_item
      where return_order_code = #{returnOrderCode,jdbcType=VARCHAR}
  </select>
  <select id="list" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from return_order_info_inspection_item
    where return_order_code = #{returnOrderCode,jdbcType=VARCHAR}
    LIMIT #{beginIndex,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
  </select>
  <select id="listCount" resultType="java.lang.Integer">
    select count(1)
    from return_order_info_inspection_item
    where return_order_code = #{returnOrderCode,jdbcType=VARCHAR}
  </select>
  <select id="inboundBatchByReturnOrderList" resultType="com.aiqin.bms.scmp.api.purchase.domain.response.returngoods.ReturnOrderInboundBatchResponse">
    SELECT a.sku_code skuCode, a.sku_name skuName, b.picture_url pictureUrl, b.spec, b.color_name colorName,
      b.model,  CONCAT(b.base_product_content, '/', b.unit_name) as boxGauge, a.total_count productCount,
      b.product_status productStatus, a.batch_code batchCode, a.product_date productDate, a.batch_remark batchRemark,
      a.supplier_code supplierCode, a.supplier_name supplierName
    FROM inbound_batch a
    INNER JOIN return_order_info_item b
    on a.sku_code = b.sku_code and a.line_code = b.product_line_num
    WHERE a.inbound_oder_code = #{inboundOderCode,jdbcType=VARCHAR}
    LIMIT #{beginIndex,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
  </select>
  <select id="inboundBatchByReturnOrderCount" resultType="java.lang.Integer">
    SELECT count(1)
    FROM inbound_batch a
    INNER JOIN return_order_info_item b
    on a.sku_code = b.sku_code and a.line_code = b.product_line_num
    WHERE a.inbound_oder_code = #{inboundOderCode,jdbcType=VARCHAR}
  </select>
  <select id="returnOrderByWarehouse" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include>
    from return_order_info_inspection_item
    where return_order_code = #{returnOrderCode,jdbcType=VARCHAR}
    group by warehouse_code
    order by warehouse_code asc
  </select>
  <select id="returnOrderBatchListByWarehouse" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include>
    from return_order_info_inspection_item
    where return_order_code = #{returnOrderCode,jdbcType=VARCHAR}
    and warehouse_code = #{warehouseCode,jdbcType=VARCHAR}
  </select>
</mapper>