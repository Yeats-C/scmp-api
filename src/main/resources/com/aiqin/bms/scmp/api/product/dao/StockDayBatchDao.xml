<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aiqin.bms.scmp.api.product.dao.StockDayBatchDao">
  <resultMap id="BaseResultMap" type="com.aiqin.bms.scmp.api.product.domain.pojo.StockDayBatch">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="sku_code" jdbcType="VARCHAR" property="skuCode" />
    <result column="warehouse_code" jdbcType="VARCHAR" property="warehouseCode" />
    <result column="batch_code" jdbcType="VARCHAR" property="batchCode" />
    <result column="batch_count" jdbcType="BIGINT" property="batchCount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="synchr_time" jdbcType="BIGINT" property="synchrTime" />
    <result column="wms_type" jdbcType="INTEGER" property="wmsType" />
  </resultMap>
  <sql id="Base_Column_List">
    id, sku_code, warehouse_code, batch_code, batch_count, create_time, update_time, synchr_time, wms_type
  </sql>
  <select id="stockDayBatchOne" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from stock_day_batch
    where sku_code = #{skuCode,jdbcType=VARCHAR}
    and warehouse_code = #{warehouseCode,jdbcType=VARCHAR}
    and batch_code = #{batchCode,jdbcType=VARCHAR}
    order by synchr_time desc limit 1
  </select>
  <delete id="delete">
    delete from stock_day_batch
    where wms_type = #{wmsType,jdbcType=INTEGER}
    and synchr_time != #{synchrTime,jdbcType=BIGINT}
  </delete>
  <insert id="insertAll">
    insert into stock_day_batch (sku_code, warehouse_code, batch_code, batch_count, create_time, update_time, synchr_time, wms_type)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.skuCode,jdbcType=VARCHAR}, #{item.warehouseCode,jdbcType=VARCHAR}, #{item.batchCode,jdbcType=VARCHAR},
        #{item.batchCount,jdbcType=BIGINT}, now(), now(), #{item.synchrTime,jdbcType=BIGINT}, #{item.wmsType,jdbcType=INTEGER})
    </foreach>
  </insert>
  <update id="update">
    update stock_day_batch
    <set>
      <if test="skuCode != null">
        sku_code = #{skuCode,jdbcType=VARCHAR},
      </if>
      <if test="warehouseCode != null">
        warehouse_code = #{warehouseCode,jdbcType=VARCHAR},
      </if>
      <if test="batchCode != null">
        batch_code = #{batchCode,jdbcType=VARCHAR},
      </if>
      <if test="batchCount != null">
        batch_count = #{batchCount,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="stockDayBatchList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from stock_day_batch
    where sku_code = #{skuCode,jdbcType=VARCHAR}
    and warehouse_code = #{warehouseCode,jdbcType=VARCHAR}
    and batch_code like concat(#{batchCode,jdbcType=VARCHAR}, '%')
    and batch_count > 0
    order by synchr_time desc, batch_code asc
  </select>
  <select id="dayBatchByGroup" resultType="com.aiqin.bms.scmp.api.product.domain.pojo.StockMonthBatch">
    select sku_code skuCode, warehouse_code warehouseCode, SUBSTRING(batch_code, 1, 7) batchCode, synchr_time synchrTime,
      sum(batch_count) batchCount
    from stock_day_batch
    where synchr_time = #{synchrTime,jdbcType=BIGINT}
    and wms_type = #{wmsType,jdbcType=INTEGER}
    group by skuCode, warehouseCode, batchCode
  </select>
  <select id="stockDayByDl" resultType="com.aiqin.bms.scmp.api.abutment.domain.request.dl.MonthStockRequest">
     select a.sku_code skuCode, a.warehouse_code, a.batch_code batchCode,sum(a.batch_count) batchCount, a.wms_type wmsType,
          b.wms_warehouse_id warehouseCode, b.wms_warehouse_type wmsWarehouseType, b.wms_warehouse_name warehouseName
     from stock_day_batch a
     inner join warehouse b on a.warehouse_code = b.warehouse_code
     where b.wms_warehouse_type = 1
     and b.wms_warehouse_id = #{warehouseCode,jdbcType=VARCHAR}
	 and a.synchr_time = (select c.synchr_time from stock_month_batch c where c.wms_type = #{wmsType,jdbcType=INTEGER}
			group by c.synchr_time desc limit 1)
     group by a.sku_code,a.batch_code,b.wms_warehouse_id
  </select>
  <select id="stockDaySum" resultMap="BaseResultMap">
     select sku_code, warehouse_code,sum(batch_count) batch_count, wms_type
     from stock_day_batch
     where batch_count > 0 and
     synchr_time in
      <foreach collection="list" separator="," item="item" open="(" close=")">
        #{item}
      </foreach>
     group by sku_code,warehouse_code
  </select>
  <select id="stockBySynchrTime" resultType="java.lang.String">
    SELECT synchr_time FROM stock_day_batch
    WHERE id IN (SELECT max(id) FROM stock_day_batch GROUP BY synchr_time);
  </select>
</mapper>