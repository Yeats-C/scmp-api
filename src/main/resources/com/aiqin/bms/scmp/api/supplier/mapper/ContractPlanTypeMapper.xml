<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aiqin.bms.scmp.api.supplier.mapper.ContractPlanTypeMapper">
  <resultMap id="BaseResultMap" type="com.aiqin.bms.scmp.api.supplier.domain.pojo.ContractPlanType">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="contract_code" jdbcType="VARCHAR" property="contractCode" />
    <result column="plan_type" jdbcType="INTEGER" property="planType" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, contract_code, plan_type, start_time, end_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from contract_plan_type
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from contract_plan_type
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deletePlanTypeList">
        delete from contract_plan_type
    where contract_code = #{contractCode}
  </delete>
  <insert id="insert" parameterType="com.aiqin.bms.scmp.api.supplier.domain.pojo.ContractPlanType">
    insert into contract_plan_type (id, contract_code, plan_type, 
      start_time, end_time)
    values (#{id,jdbcType=BIGINT}, #{contractCode,jdbcType=VARCHAR}, #{planType,jdbcType=INTEGER}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.aiqin.bms.scmp.api.supplier.domain.pojo.ContractPlanType">
    insert into contract_plan_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="contractCode != null">
        contract_code,
      </if>
      <if test="planType != null">
        plan_type,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="contractCode != null">
        #{contractCode,jdbcType=VARCHAR},
      </if>
      <if test="planType != null">
        #{planType,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
        insert into contract_plan_type (id, contract_code, plan_type,
      start_time, end_time)
    values
    <foreach collection="list" open="" close="" separator="," item="item">
    (#{item.id,jdbcType=BIGINT}, #{item.contractCode,jdbcType=VARCHAR}, #{item.planType,jdbcType=INTEGER},
      #{item.startTime,jdbcType=TIMESTAMP}, #{item.endTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.aiqin.bms.scmp.api.supplier.domain.pojo.ContractPlanType">
    update contract_plan_type
    <set>
      <if test="contractCode != null">
        contract_code = #{contractCode,jdbcType=VARCHAR},
      </if>
      <if test="planType != null">
        plan_type = #{planType,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aiqin.bms.scmp.api.supplier.domain.pojo.ContractPlanType">
    update contract_plan_type
    set contract_code = #{contractCode,jdbcType=VARCHAR},
      plan_type = #{planType,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>