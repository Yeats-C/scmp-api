<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aiqin.bms.scmp.api.statistics.dao.StatComNegativeMarginQuarterlyDao">
  <resultMap id="BaseResultMap" type="com.aiqin.bms.scmp.api.statistics.domain.StatComNegativeMarginQuarterly">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="stat_year" jdbcType="BIGINT" property="statYear" />
    <result column="quarter" jdbcType="BIGINT" property="quarter" />
    <result column="product_sort_code" jdbcType="VARCHAR" property="productSortCode" />
    <result column="product_sort_name" jdbcType="VARCHAR" property="productSortName" />
    <result column="price_channel_code" jdbcType="VARCHAR" property="priceChannelCode" />
    <result column="price_channel_name" jdbcType="VARCHAR" property="priceChannelName" />
    <result column="lv1" jdbcType="VARCHAR" property="lv1" />
    <result column="lv1_category_name" jdbcType="VARCHAR" property="lv1CategoryName" />
    <result column="sales_num" jdbcType="BIGINT" property="salesNum" />
    <result column="channel_sales_amount" jdbcType="BIGINT" property="channelSalesAmount" />
    <result column="pre_channel_sales_amount" jdbcType="BIGINT" property="preChannelSalesAmount" />
    <result column="channel_sales_amount_yearonyear" jdbcType="DECIMAL" property="channelSalesAmountYearonyear" />
    <result column="channel_sales_cost" jdbcType="BIGINT" property="channelSalesCost" />
    <result column="channel_margin" jdbcType="BIGINT" property="channelMargin" />
    <result column="pre_channel_margin" jdbcType="BIGINT" property="preChannelMargin" />
    <result column="channel_margin_yearonyear" jdbcType="DECIMAL" property="channelMarginYearonyear" />
    <result column="distribution_sales_amount" jdbcType="BIGINT" property="distributionSalesAmount" />
    <result column="pre_distribution_sales_amount" jdbcType="BIGINT" property="preDistributionSalesAmount" />
    <result column="distribution_sales_amount_yearonyear" jdbcType="DECIMAL" property="distributionSalesAmountYearonyear" />
    <result column="distribution_margin" jdbcType="BIGINT" property="distributionMargin" />
    <result column="pre_distribution_margin" jdbcType="BIGINT" property="preDistributionMargin" />
    <result column="distribution_margin_yearonyear" jdbcType="DECIMAL" property="distributionMarginYearonyear" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, stat_year, quarter, product_sort_code, product_sort_name, price_channel_code, 
    price_channel_name, lv1, lv1_category_name, sales_num, channel_sales_amount, pre_channel_sales_amount, 
    channel_sales_amount_yearonyear, channel_sales_cost, channel_margin, pre_channel_margin, 
    channel_margin_yearonyear, distribution_sales_amount, pre_distribution_sales_amount, 
    distribution_sales_amount_yearonyear, distribution_margin, pre_distribution_margin, 
    distribution_margin_yearonyear, create_time
  </sql>
  <select id="negativeSum" resultType="com.aiqin.bms.scmp.api.statistics.domain.response.negative.NegativeSumResponse">
    select
      sum(ifnull(sales_num,0)) as salesNum, sum(ifnull(channel_sales_amount,0)) as channelSalesAmount,
      sum(ifnull(channel_sales_cost,0)) as channelSalesCost, sum(ifnull(channel_margin,0)) as channelMargin,
      sum(ifnull(distribution_sales_amount,0)) as distributionSalesAmount, sum(ifnull(distribution_margin,0)) as distributionMargin,
      sum(ifnull(pre_channel_sales_amount,0)) as preChannelSalesAmount, sum(ifnull(pre_channel_margin,0)) as preChannelMargin,
      sum(ifnull(pre_distribution_sales_amount,0)) as preDistributionSalesAmount, sum(ifnull(pre_distribution_margin,0)) as preDistributionMargin
    from stat_dept_negative_margin_quarterly
    where stat_year = #{year,jdbcType=BIGINT}
    and quarter = #{quarter,jdbcType=BIGINT}
  </select>
  <select id="negativeByDept" resultType="com.aiqin.bms.scmp.api.statistics.domain.response.CompanyAndDeptResponse">
    select
     product_sort_code as productSortCode, product_sort_name as productSortName
    from stat_dept_negative_margin_quarterly
    where stat_year = #{year,jdbcType=BIGINT}
    and quarter = #{quarter,jdbcType=BIGINT}
    group by product_sort_code
    order by product_sort_code
  </select>
  <select id="negativeDeptSum" resultType="com.aiqin.bms.scmp.api.statistics.domain.response.negative.NegativeDeptResponse">
    select
      product_sort_code as productSortCode, product_sort_name as productSortName,
      sum(ifnull(sales_num,0)) as salesNum, sum(ifnull(channel_sales_amount,0)) as channelSalesAmount,
      sum(ifnull(channel_sales_cost,0)) as channelSalesCost, sum(ifnull(channel_margin,0)) as channelMargin,
      sum(ifnull(distribution_sales_amount,0)) as distributionSalesAmount, sum(ifnull(distribution_margin,0)) as distributionMargin,
      sum(ifnull(pre_channel_sales_amount,0)) as preChannelSalesAmount, sum(ifnull(pre_channel_margin,0)) as preChannelMargin,
      sum(ifnull(pre_distribution_sales_amount,0)) as preDistributionSalesAmount, sum(ifnull(pre_distribution_margin,0)) as preDistributionMargin
    from stat_dept_negative_margin_quarterly
    where stat_year = #{year,jdbcType=BIGINT}
    and quarter = #{quarter,jdbcType=BIGINT}
    and product_sort_code = #{productSortCode,jdbcType=VARCHAR}
  </select>
  <select id="negativeByCompany" resultType="com.aiqin.bms.scmp.api.statistics.domain.response.CompanyAndDeptResponse">
    select
    product_sort_code as productSortCode, product_sort_name as productSortName,
    price_channel_code as priceChannelCode, price_channel_name as priceChannelName
    from stat_dept_negative_margin_quarterly
    where
      stat_year = #{year,jdbcType=BIGINT}
      and quarter = #{quarter,jdbcType=BIGINT}
      and product_sort_code = #{productSortCode,jdbcType=VARCHAR}
    group by price_channel_code
    order by price_channel_code
  </select>
  <select id="negativeCompanySum" resultType="com.aiqin.bms.scmp.api.statistics.domain.response.negative.NegativeCompanyResponse">
    select
      product_sort_code as productSortCode, product_sort_name as productSortName,
      price_channel_code as priceChannelCode, price_channel_name as priceChannelName,
      sum(ifnull(sales_num,0)) as salesNum, sum(ifnull(channel_sales_amount,0)) as channelSalesAmount,
      sum(ifnull(channel_sales_cost,0)) as channelSalesCost, sum(ifnull(channel_margin,0)) as channelMargin,
      sum(ifnull(distribution_sales_amount,0)) as distributionSalesAmount, sum(ifnull(distribution_margin,0)) as distributionMargin,
      sum(ifnull(pre_channel_sales_amount,0)) as preChannelSalesAmount, sum(ifnull(pre_channel_margin,0)) as preChannelMargin,
      sum(ifnull(pre_distribution_sales_amount,0)) as preDistributionSalesAmount, sum(ifnull(pre_distribution_margin,0)) as preDistributionMargin
    from stat_dept_negative_margin_quarterly
    where stat_year = #{year,jdbcType=BIGINT}
    and quarter = #{quarter,jdbcType=BIGINT}
    and product_sort_code = #{productSortCode,jdbcType=VARCHAR}
    and price_channel_code = #{priceChannelCode,jdbcType=VARCHAR}
  </select>
  <select id="negativeCategoryList" resultType="com.aiqin.bms.scmp.api.statistics.domain.response.negative.NegativeCategoryResponse">
    select
      product_sort_code as productSortCode, product_sort_name as productSortName, price_channel_code as priceChannelCode,
      price_channel_name as priceChannelName, lv1, lv1_category_name as lv1CategoryName,
      ifnull(sales_num,0) as salesNum, ifnull(channel_sales_amount,0) as channelSalesAmount,
      ifnull(channel_sales_cost,0) as channelSalesCost, ifnull(channel_margin,0) as channelMargin,
      ifnull(distribution_sales_amount,0) as distributionSalesAmount, ifnull(distribution_margin,0) as distributionMargin,
      ifnull(channel_sales_amount_yearonyear,0) as channelSalesAmountYearonyear, ifnull(channel_margin_yearonyear, 0) as channelMarginYearonyear,
      ifnull(distribution_sales_amount_yearonyear ,0) as distributionSalesAmountYearonyear,
      ifnull(distribution_margin_yearonyear, 0) as distributionMarginYearonyear,
      create_time as createTime
    from stat_dept_negative_margin_quarterly
    where stat_year = #{year,jdbcType=BIGINT}
    and quarter = #{quarter,jdbcType=BIGINT}
    and product_sort_code = #{productSortCode,jdbcType=VARCHAR}
    and price_channel_code = #{priceChannelCode,jdbcType=VARCHAR}
  </select>
</mapper>