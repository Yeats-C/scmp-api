<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aiqin.bms.scmp.api.product.dao.StockDao">
    <resultMap id="BaseResultMap" type="com.aiqin.bms.scmp.api.product.domain.pojo.Stock">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="stock_code" jdbcType="VARCHAR" property="stockCode"/>
        <result column="company_code" jdbcType="VARCHAR" property="companyCode"/>
        <result column="company_name" jdbcType="VARCHAR" property="companyName"/>
        <result column="transport_center_code" jdbcType="VARCHAR" property="transportCenterCode"/>
        <result column="transport_center_name" jdbcType="VARCHAR" property="transportCenterName"/>
        <result column="warehouse_code" jdbcType="VARCHAR" property="warehouseCode"/>
        <result column="warehouse_name" jdbcType="VARCHAR" property="warehouseName"/>
        <result column="warehouse_type" jdbcType="INTEGER" property="warehouseType"/>
        <result column="sku_code" jdbcType="VARCHAR" property="skuCode"/>
        <result column="sku_name" jdbcType="VARCHAR" property="skuName"/>
        <result column="inventory_count" jdbcType="BIGINT" property="inventoryCount"/>
        <result column="available_count" jdbcType="BIGINT" property="availableCount"/>
        <result column="lock_count" jdbcType="BIGINT" property="lockCount"/>
        <result column="purchase_way_count" jdbcType="BIGINT" property="purchaseWayCount"/>
        <result column="allocation_way_count" jdbcType="BIGINT" property="allocationWayCount"/>
        <result column="total_way_count" jdbcType="BIGINT" property="totalWayCount"/>
        <result column="new_delivery" jdbcType="VARCHAR" property="newDelivery"/>
        <result column="new_delivery_name" jdbcType="VARCHAR" property="newDeliveryName"/>
        <result column="new_purchase_price" jdbcType="DECIMAL" property="newPurchasePrice"/>
        <result column="unit_code" jdbcType="VARCHAR" property="unitCode"/>
        <result column="unit_name" jdbcType="VARCHAR" property="unitName"/>
        <result column="tax_rate" jdbcType="DECIMAL" property="taxRate"/>
        <result column="tax_cost" jdbcType="DECIMAL" property="taxCost"/>
        <result column="use_status" jdbcType="INTEGER" property="useStatus"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_by_id" jdbcType="VARCHAR" property="createById"/>
        <result column="create_by_name" jdbcType="VARCHAR" property="createByName"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="update_by_id" jdbcType="VARCHAR" property="updateById"/>
        <result column="update_by_name" jdbcType="VARCHAR" property="createByName"/>
    </resultMap>
    <resultMap id="QueryStockSkuResultMap" type="com.aiqin.bms.scmp.api.product.domain.response.QueryStockSkuRespVo">
        <result column="product_code" jdbcType="VARCHAR" property="productCode"/>
        <result column="product_name" jdbcType="VARCHAR" property="productName"/>
        <result column="sku_code" jdbcType="VARCHAR" property="skuCode"/>
        <result column="sku_name" jdbcType="VARCHAR" property="skuName"/>
        <result column="product_category_code" jdbcType="VARCHAR" property="skuCategoryCode"/>
        <result column="product_category_name" jdbcType="VARCHAR" property="skuCategoryName"/>
        <result column="product_brand_code" jdbcType="VARCHAR" property="skuBrandCode"/>
        <result column="product_brand_name" jdbcType="VARCHAR" property="skuBrandName"/>
        <result column="spec" jdbcType="VARCHAR" property="skuSpecName"/>
        <result column="color_code" jdbcType="VARCHAR" property="skuColorCode"/>
        <result column="color_name" jdbcType="VARCHAR" property="skuColorName"/>
        <result column="model_number" jdbcType="VARCHAR" property="skuModelNumberName"/>
        <result column="unit_code" jdbcType="VARCHAR" property="skuUnitCode"/>
        <result column="unit_name" jdbcType="VARCHAR" property="skuUnitName"/>
        <result column="product_sort_code" jdbcType="VARCHAR" property="skuSortCode"/>
        <result column="product_sort_name" jdbcType="VARCHAR" property="skuSortName"/>
        <result column="goods_gifts" jdbcType="BIGINT" property="skuTypeCode"/>
        <result column="unit_code" jdbcType="VARCHAR" property="stockUnitCode"/>
        <result column="unit_name" jdbcType="VARCHAR" property="stockUnitName"/>
        <result column="available_count" jdbcType="BIGINT" property="stock"/>
        <result column="Input_tax_rate" jdbcType="DECIMAL" property="taxRate"/>
        <result column="tax_price" jdbcType="DECIMAL" property="price"/>
        <result column="zero_removal_coefficient" jdbcType="BIGINT" property="zeroRemovalCoefficient"/>
    </resultMap>
    <resultMap id="QueryStockSkuListResultMap" type="com.aiqin.bms.scmp.api.product.domain.response.QueryStockSkuListRespVo">
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="warehouse_code" jdbcType="VARCHAR" property="warehouseCode"/>
        <result column="sku_code" jdbcType="VARCHAR" property="skuCode"/>
        <result column="sku_name" jdbcType="VARCHAR" property="skuName"/>
        <result column="product_category_code" jdbcType="VARCHAR" property="productCategoryCode"/>
        <result column="product_category_name" jdbcType="VARCHAR" property="productCategoryName"/>
        <result column="product_sort_code" jdbcType="VARCHAR" property="productSortCode"/>
        <result column="product_sort_name" jdbcType="VARCHAR" property="productSortName"/>
        <result column="product_brand_code" jdbcType="VARCHAR" property="productBrandCode"/>
        <result column="product_brand_name" jdbcType="VARCHAR" property="productBrandName"/>
        <result column="goods_gifts" jdbcType="BIGINT" property="goodsGifts"/>
        <result column="spec" jdbcType="VARCHAR" property="spec"/>
        <result column="color_code" jdbcType="VARCHAR" property="colorCode"/>
        <result column="color_name" jdbcType="VARCHAR" property="colorName"/>
        <result column="model_number" jdbcType="VARCHAR" property="modelNumber"/>
        <result column="unit_code" jdbcType="VARCHAR" property="unitCode"/>
        <result column="unit_name" jdbcType="VARCHAR" property="unitName"/>
        <result column="available_num" jdbcType="BIGINT" property="availableNum"/>
        <result column="tax_rate" jdbcType="DECIMAL" property="taxRate"/>
        <result column="tax_cost" jdbcType="DECIMAL" property="taxCost"/>
        <result column="batch_code" jdbcType="VARCHAR" property="batchCode"/>
        <result column="product_date" jdbcType="VARCHAR" property="productionDate"/>
    </resultMap>
    <resultMap id="StockFlowMap" type="com.aiqin.bms.scmp.api.product.domain.pojo.StockFlow">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <id column="stock_code" jdbcType="VARCHAR" property="stockCode"/>
        <id column="flow_code" jdbcType="VARCHAR" property="flowCode"/>
        <id column="order_code" jdbcType="VARCHAR" property="orderCode"/>
        <id column="order_type" jdbcType="INTEGER" property="orderType"/>
        <id column="order_source" jdbcType="VARCHAR" property="orderSource"/>
        <id column="sku_code" jdbcType="VARCHAR" property="skuCode"/>
        <id column="sku_name" jdbcType="VARCHAR" property="skuName"/>
        <id column="before_inventory_num" jdbcType="BIGINT" property="beforeInventoryNum"/>
        <id column="after_inventory_num" jdbcType="BIGINT" property="afterInventoryNum"/>
        <id column="before_available_num" jdbcType="BIGINT" property="beforeAvailableNum"/>
        <id column="after_available_num" jdbcType="BIGINT" property="afterAvailableNum"/>
        <id column="before_lock_num" jdbcType="BIGINT" property="beforeLockNum"/>
        <id column="after_lock_num" jdbcType="BIGINT" property="afterLockNum"/>
        <id column="before_purchase_way_num" jdbcType="BIGINT" property="beforePurchaseWayNum"/>
        <id column="after_purchase_way_num" jdbcType="BIGINT" property="afterPurchaseWayNum"/>
        <id column="before_allocation_way_num" jdbcType="BIGINT" property="beforeAllocationWayNum"/>
        <id column="after_allocation_way_num" jdbcType="BIGINT" property="afterAllocationWayNum"/>
        <id column="before_total_way_num" jdbcType="BIGINT" property="beforeTotalWayNum"/>
        <id column="after_total_way_num" jdbcType="BIGINT" property="afterTotalWayNum"/>
        <id column="after_total_way_num" jdbcType="BIGINT" property="afterTotalWayNum"/>
        <id column="change_num" jdbcType="BIGINT" property="changeNum"/>
        <id column="operation_type" jdbcType="BIGINT" property="operationType"/>
    </resultMap>
    <sql id="Stock_flow_Column">
        id,stock_code,flow_code,order_code,order_type,order_source,sku_code,sku_name,before_inventory_num,after_inventory_num,
        before_available_num,after_available_num,before_lock_num,after_lock_num,before_purchase_way_num,after_purchase_way_num,
        before_allocation_way_num,after_allocation_way_num,before_total_way_num,after_total_way_num,change_num,operation_type
    </sql>
    <sql id="Base_Column_List">
        id, stock_code, company_code, company_name, transport_center_code, transport_center_name, warehouse_code, warehouse_name,
        warehouse_type, sku_code, sku_name, inventory_count, available_count, lock_count, purchase_way_count, allocation_way_count,
        total_way_count, new_delivery, new_delivery_name, new_purchase_price, unit_code, unit_name, tax_rate,
        purchase_way_count, allocation_way_count,total_way_count, use_status, tax_cost, create_time,
        create_by_id, update_time, update_by_id, create_by_name, update_by_name
    </sql>
    <sql id="Query_Stock_Sku_List">
        a.sku_code,a.sku_name,c.product_category_code,c.product_category_name,c.product_brand_code,c.product_brand_name,c.spec,
        c.color_code,c.color_name,c.model_number, c.unit_code,c.unit_name,c.goods_gifts,c.product_sort_code,c.product_sort_name,a.unit_code,a.unit_name,b.Input_tax_rate,a.tax_cost as tax_price,
        c.product_code,c.product_name,a.available_count, 1 as zero_removal_coefficient
    </sql>
    <select id="selectStockSumInfoByPage" resultType="com.aiqin.bms.scmp.api.product.domain.response.stock.StockRespVO">
        SELECT
        st.stock_code stockCode, st.company_code companyCode, st.company_name companyName, st.sku_code skuCode, st.sku_name skuName,
        ps.model_number modelNumber, pssi.spec, ps.product_category_name productCategoryName, ps.product_brand_name productBrandName,
        ps.color_code colorCode, ps.color_name colorName, pssi.unit_code unitCode, pssi.unit_name unitName, psc.config_status configStatus,
        CONCAT(pssi.base_product_content, '/', pssi.unit_name) largeUnit, st.warehouse_type warehouseType,
        ps.procurement_section_code purchaseGroupCode, st.update_by_name updateByName, st.create_by_name createByName,
        ps.procurement_section_code purchaseGroupName, st.create_time createTime, st.update_time updateTime
        FROM stock AS st
        LEFT JOIN product_sku_config AS psc ON psc.sku_code = st.sku_code AND psc.transport_center_code = st.transport_center_code
        LEFT JOIN product_sku AS ps ON st.sku_code = ps.sku_code
        LEFT JOIN product_sku_stock_info AS pssi ON st.sku_code = pssi.product_sku_code
        LEFT JOIN product_sku_sales_info AS ss ON st.sku_code = ss.product_sku_code
        <include refid="LIST_QUERY"/>
        GROUP BY st.sku_code
        limit #{beginIndex,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
    </select>
    <select id="selectStockSumInfoByPageCount" resultType="java.lang.Integer">
        select count(1) from (
        SELECT st.sku_code
        FROM stock AS st
        LEFT JOIN product_sku_config AS psc ON psc.sku_code = st.sku_code AND psc.transport_center_code = st.transport_center_code
        LEFT JOIN product_sku AS ps ON st.sku_code = ps.sku_code
        LEFT JOIN product_sku_stock_info AS pssi ON st.sku_code = pssi.product_sku_code
        LEFT JOIN product_sku_sales_info AS ss ON st.sku_code = ss.product_sku_code
          <include refid="LIST_QUERY"/>
        GROUP BY st.sku_code) AS tableCount
    </select>
    <select id="centerStock" resultMap="BaseResultMap">
        select
         sku_code, sku_name, warehouse_type, sum(ifnull(inventory_count,0)) inventory_count, sum(ifnull(lock_count,0)) lock_count,
        sum(ifnull(available_count,0)) available_count, sum(ifnull(total_way_count,0)) total_way_count,
        sum(ifnull(purchase_way_count,0)) purchase_way_count
        from stock
        where sku_code = #{skuCode, jdbcType=VARCHAR}
        and warehouse_type = #{warehouseType, jdbcType=INTEGER}
    </select>
    <select id="transportStock" resultType="com.aiqin.bms.scmp.api.product.domain.response.stock.StockRespVO">
        select
        st.sku_code skuCode, st.sku_name skuName, ps.product_category_code productCategoryCode,
        ps.product_brand_code productBrandCode, st.warehouse_type warehouseType,
        sum(ifnull(st.inventory_count,0)) inventoryCount, sum(ifnull(st.lock_count,0)) lockCount,
        sum(ifnull(st.available_count,0)) availableCount, sum(ifnull(st.total_way_count,0)) totalWayCount,
        sum(ifnull(st.purchase_way_count,0)) purchaseWayCount,
        sum(ifnull(st.inventory_count,0) * ifnull(st.tax_cost,0)) totalTaxCost
        from stock st
        LEFT JOIN product_sku ps ON st.sku_code = ps.sku_code
        where st.transport_center_code = #{transportCenterCode, jdbcType=VARCHAR}
        and st.warehouse_type in (1, 2, 3)
        <if test="collectType == 0">
            AND st.sku_code = #{publicName, jdbcType=VARCHAR}
        </if>
        <if test="collectType == 1 and categoryLevel == 1">
            AND ps.product_category_code like concat(#{publicName, jdbcType=VARCHAR}, '%')
        </if>
        <if test="collectType == 1 and categoryLevel == 2">
            AND ps.product_category_code like concat(#{publicName, jdbcType=VARCHAR}, '%')
        </if>
        <if test="collectType == 1 and categoryLevel == 3">
            AND ps.product_category_code like concat(#{publicName, jdbcType=VARCHAR}, '%')
        </if>
        <if test="collectType == 1 and categoryLevel == 4">
            AND ps.product_category_code like concat(#{publicName, jdbcType=VARCHAR}, '%')
        </if>
        <if test="collectType == 2">
            AND ps.product_brand_code = #{publicName, jdbcType=VARCHAR}
        </if>
        group by warehouseType
    </select>
    <select id="stockByWarehouseTypeSum" resultMap="BaseResultMap">
        select
        warehouse_type, sum(ifnull(inventory_count,0)) inventory_count, sum(ifnull(lock_count,0)) lock_count,
        sum(ifnull(available_count,0)) available_count, sum(ifnull(total_way_count,0)) total_way_count,
        sum(ifnull(purchase_way_count,0)) purchase_way_count,
        sum(ifnull(inventory_count,0) * ifnull(tax_cost,0)) tax_cost
        from stock
        where warehouse_type in (1, 2, 3)
        group by warehouse_type
    </select>
    <sql id="Query_Stock_Sku_Where">
        <where>
            1 = 1
            <if test="companyCode != null and companyCode != ''">
                and a.company_code = #{companyCode, jdbcType=VARCHAR}
            </if>
            <if test="supplyCode != null and supplyCode != ''">
                and a.new_delivery = #{supplyCode, jdbcType=VARCHAR}
            </if>
            <if test="transportCenterCode != null and transportCenterCode != ''">
                and a.transport_center_code = #{transportCenterCode, jdbcType=VARCHAR}
            </if>
            <if test="warehouseCode != null and warehouseCode != ''">
                and a.warehouse_code = #{warehouseCode, jdbcType=VARCHAR}
            </if>
            <if test="purchaseGroupCode != null and purchaseGroupCode != ''">
                and a.purchase_group_code = #{purchaseGroupCode, jdbcType=VARCHAR}
            </if>
            <if test="skuCode != null and skuCode != ''">
                and a.sku_code = #{skuCode, jdbcType=VARCHAR}
            </if>
            <if test="skuName != null and skuName != ''">
                and a.sku_name like concat(#{skuName, jdbcType=VARCHAR}, '%')
            </if>
            <if test="productPropertyName != null and productPropertyName != ''">
                and c.product_property_name like concat(#{productPropertyName, jdbcType=VARCHAR}, '%')
            </if>
            <if test="productCategoryName != null and productCategoryName != ''">
                and c.product_category_name like concat(#{productCategoryName, jdbcType=VARCHAR}, '%')
            </if>
            <if test="productBrandName != null and productBrandName != ''">
                and c.product_brand_name like concat(#{productBrandName, jdbcType=VARCHAR}, '%')
            </if>
            and a.available_count > 0
            <if test="skuList != null">
                and a.sku_code in
                <foreach collection="skuList" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </sql>

    <select id="selectStockSkuInfoByPage" parameterType="com.aiqin.bms.scmp.api.product.domain.request.QueryStockSkuReqVo"
            resultMap="QueryStockSkuResultMap">
        select
        <include refid="Query_Stock_Sku_List"/>
        from stock a left join product_sku c on a.sku_code = c.sku_code left join product_sku_checkout b on a.sku_code = b.sku_code
        <include refid="Query_Stock_Sku_Where"/>
        order by sku_code asc
    </select>
    <select id="selectTransportStockInfoByPage" resultType="com.aiqin.bms.scmp.api.product.domain.response.stock.StockRespVO" >
        SELECT
        st.stock_code stockCode, st.company_code companyCode, st.company_name companyName, st.sku_code skuCode,
        st.sku_name skuName, st.transport_center_code transportCenterCode, st.transport_center_name transportCenterName,
        ps.model_number modelNumber, pssi.spec, ps.color_code colorCode, ps.color_name colorName, pssi.unit_code unitCode,
        pssi.unit_name unitName, ps.product_category_code productCategoryCode, ps.product_brand_name productBrandName,
        psc.config_status configStatus, CONCAT(pssi.base_product_content, '/', pssi.unit_name) largeUnit, st.tax_rate taxRate,
        st.new_purchase_price newPurchasePrice, ps.procurement_section_code purchaseGroupCode, ps.procurement_section_name purchaseGroupName,
        ps.product_category_name productCategoryName, ps.product_brand_code productBrandCode, st.warehouse_type warehouseType,
        SUBSTRING(ps.product_category_code, 1, 2) categoryOne, SUBSTRING(ps.product_category_code, 1, 4) categoryTwo,
        SUBSTRING(ps.product_category_code, 1, 6) categoryThree, ps.product_category_code categoryFour
        FROM stock AS st
        LEFT JOIN product_sku_config AS psc ON psc.sku_code = st.sku_code AND psc.transport_center_code = st.transport_center_code
        LEFT JOIN product_sku AS ps ON st.sku_code = ps.sku_code
        LEFT JOIN product_sku_stock_info AS pssi ON st.sku_code = pssi.product_sku_code
        LEFT JOIN product_sku_sales_info AS ss ON st.sku_code = ss.product_sku_code
        <include refid="LIST_QUERY"/>
        <if test="collectType == 0">
          GROUP BY st.transport_center_code, st.sku_code
        </if>
        <if test="collectType == 1 and categoryLevel == 1">
            GROUP BY categoryOne, st.transport_center_code
        </if>
        <if test="collectType == 1 and categoryLevel == 2">
            GROUP BY categoryTwo, st.transport_center_code
        </if>
        <if test="collectType == 1 and categoryLevel == 3">
            GROUP BY categoryThree, st.transport_center_code
        </if>
        <if test="collectType == 1 and categoryLevel == 4">
            GROUP BY categoryFour, st.transport_center_code
        </if>
        <if test="collectType == 2">
            GROUP BY ps.product_brand_code, st.transport_center_code
        </if>
        limit #{beginIndex,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
    </select>
    <select id="selectTransportStockInfoByPageCount" resultType="java.lang.Integer">
        select count(1) from (SELECT
        st.stock_code, SUBSTRING(ps.product_category_code, 1, 2) categoryOne, SUBSTRING(ps.product_category_code, 1, 4) categoryTwo,
        SUBSTRING(ps.product_category_code, 1, 6) categoryThree, ps.product_category_code categoryFour
        FROM stock AS st
        LEFT JOIN product_sku_config AS psc ON psc.sku_code = st.sku_code AND psc.transport_center_code = st.transport_center_code
        LEFT JOIN product_sku AS ps ON st.sku_code = ps.sku_code
        LEFT JOIN product_sku_stock_info AS pssi ON st.sku_code = pssi.product_sku_code
        LEFT JOIN product_sku_sales_info AS ss ON st.sku_code = ss.product_sku_code
        <include refid="LIST_QUERY"/>
        <if test="collectType == 0">
            GROUP BY st.transport_center_code, st.sku_code
        </if>
        <if test="collectType == 1 and categoryLevel == 1">
            GROUP BY categoryOne, st.transport_center_code
        </if>
        <if test="collectType == 1 and categoryLevel == 2">
            GROUP BY categoryTwo, st.transport_center_code
        </if>
        <if test="collectType == 1 and categoryLevel == 3">
            GROUP BY categoryThree, st.transport_center_code
        </if>
        <if test="collectType == 1 and categoryLevel == 4">
            GROUP BY categoryFour, st.transport_center_code
        </if>
        <if test="collectType == 2">
            GROUP BY ps.product_brand_code, st.transport_center_code
        </if>
        ) AS tableCount
    </select>
    <sql id="LIST_QUERY">
        <where>
            ps.procurement_section_code in
            <foreach collection="groupList" open="(" close=")" item="item" separator=",">
                #{item.purchaseGroupCode,jdbcType=VARCHAR}
            </foreach>
            <if test="skuCode!=null and skuCode!=''">
                and st.sku_code = #{skuCode}
            </if>
            <if test="skuName!=null and skuName!=''">
                and st.sku_name like concat(#{skuName, jdbcType=VARCHAR}, '%')
            </if>
            <if test="configStatus!=null">
                and psc.config_status = #{configStatus}
            </if>
            <if test="productPropertyCode !=null and productPropertyCode!=''">
                and ps.product_property_code = #{productPropertyCode}
            </if>
            <if test="productBrandCode !=null and productBrandCode!=''">
                and ps.product_brand_code = #{productBrandCode}
            </if>
            <if test="productCategoryCode !=null and productCategoryCode!=''">
                and ps.product_category_code like concat(#{productCategoryCode, jdbcType=VARCHAR}, '%')
            </if>
            <if test="inventoryBeginCount !=null">
                AND st.inventory_count <![CDATA[>=]]> #{inventoryBeginCount}
            </if>
            <if test="inventoryFinishCount !=null">
                AND st.inventory_count <![CDATA[<=]]> #{inventoryFinishCount}
            </if>
            <if test="availableBeginCount !=null">
                AND st.available_count <![CDATA[>=]]> #{availableBeginCount}
            </if>
            <if test="availableFinishCount!=null">
                AND st.available_count <![CDATA[<=]]> #{availableFinishCount}
            </if>
            <if test="transportCenterCode !=null and transportCenterCode !=''">
                AND st.transport_center_code = #{transportCenterCode}
            </if>
            <if test="companyCode !=null and companyCode !=''">
                AND st.company_code = #{companyCode}
            </if>
            <if test="warehouseCode !=null and warehouseCode!=''">
                AND st.warehouse_code = #{warehouseCode}
            </if>
            <if test="saleBeginCount != null">
                AND st.available_count <![CDATA[>=]]> #{saleBeginCount}
            </if>
            <if test="saleFinishCount != null">
                AND st.available_count <![CDATA[<=]]> #{saleFinishCount}
            </if>
            <if test="specialSaleBeginCount != null">
                AND st.available_count <![CDATA[>=]]> #{specialSaleBeginCount}
            </if>
            <if test="specialSaleFinishCount != null">
                AND st.available_count <![CDATA[<=]]> #{specialSaleFinishCount}
            </if>
            <if test="badBeginCount !=null">
                AND st.available_count <![CDATA[>=]]> #{badBeginCount}
            </if>
            <if test="badFinishCount!=null">
                AND st.available_count <![CDATA[<=]]> #{badFinishCount}
            </if>
            <if test="purchaseGroupCode !=null and purchaseGroupCode !=''">
                AND ps.procurement_section_code = #{purchaseGroupCode}
            </if>
            <if test="purchaseGroupName !=null and purchaseGroupName !=''">
                AND ps.procurement_section_name like concat(#{purchaseGroupName, jdbcType=VARCHAR}, '%')
            </if>
            <if test="salesCode !=null">
                AND ss.sales_code = #{salesCode, jdbcType=VARCHAR}
            </if>
        </where>
    </sql>
    <select id="selectStorehouseStockInfoByPage" resultType="com.aiqin.bms.scmp.api.product.domain.response.stock.StockRespVO" >
        SELECT
        st.stock_code stockCode, st.company_code companyCode, st.company_name companyName, st.transport_center_code transportCenterCode,
        st.transport_center_name transportCenterName, st.warehouse_code warehouseCode, st.warehouse_name warehouseName,
        st.warehouse_type warehouseType, st.sku_code skuCode, st.sku_name skuName, ps.model_number modelNumber, pssi.spec,
        ps.product_category_code productCategoryCode, ps.product_brand_name productBrandName, ps.color_code colorCode,
        ps.color_name colorName, pssi.unit_code unitCode, pssi.unit_name unitName, psc.config_status configStatus,
        st.new_delivery newDelivery, st.new_delivery_name newDeliveryName, ps.product_category_name productCategoryName,
        ifnull(st.inventory_count,0) inventoryCount, ifnull(st.available_count,0) availableCount,
        ifnull(st.lock_count,0) lockCount, ifnull(st.purchase_way_count,0) purchaseWayCount,
        ifnull(st.allocation_way_count,0) allocationWayCount, ifnull(st.total_way_count,0) totalWayCount,
        st.new_purchase_price newPurchasePrice, ps.procurement_section_code purchaseGroupCode, st.tax_cost taxCost,
        ps.procurement_section_name purchaseGroupName, st.create_time createTime, st.update_time updateTime,
        st.create_by_name createByName, st.update_by_name updateByName, pssi.base_product_content baseProductContent,
        CONCAT(pssi.base_product_content, '/', pssi.unit_name) largeUnit
        FROM stock AS st
        LEFT JOIN product_sku_config AS psc ON psc.sku_code = st.sku_code AND psc.transport_center_code = st.transport_center_code
        LEFT JOIN product_sku AS ps ON st.sku_code = ps.sku_code
        LEFT JOIN product_sku_stock_info AS pssi ON st.sku_code = pssi.product_sku_code
        LEFT JOIN product_sku_sales_info AS ss ON st.sku_code = ss.product_sku_code
        <include refid="LIST_QUERY"/>
        GROUP BY st.warehouse_code,st.sku_code
        limit #{beginIndex,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
    </select>
    <select id="countStorehouseStockInfoByPage" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM (
        SELECT st.sku_code
        FROM stock AS st
        LEFT JOIN product_sku_config AS psc ON psc.sku_code = st.sku_code
          AND psc.transport_center_code = st.transport_center_code
        LEFT JOIN product_sku AS ps ON st.sku_code = ps.sku_code
        LEFT JOIN product_sku_sales_info AS ss ON st.sku_code = ss.product_sku_code
        <include refid="LIST_QUERY"/>
        group by st.warehouse_code, st.sku_code
        ) as tableCount
    </select>
    <select id="stockWarehouseInfo" resultType="com.aiqin.bms.scmp.api.product.domain.response.stock.StockRespVO">
        select
        st.stock_code stockCode, st.company_code companyCode, st.company_name companyName, st.transport_center_code transportCenterCode,
        st.transport_center_name transportCenterName, st.warehouse_code warehouseCode, st.warehouse_name warehouseName,
        st.warehouse_type warehouseType, st.sku_code skuCode, st.sku_name skuName, ps.model_number modelNumber, pssi.spec,
        ps.product_category_code productCategoryCode, ps.product_brand_name productBrandName, ps.color_code colorCode,
        ps.color_name colorName, pssi.unit_code unitCode, pssi.unit_name unitName, psc.config_status configStatus,
        st.new_delivery newDelivery, st.new_delivery_name newDeliveryName, ps.product_category_name productCategoryName,
        ifnull(st.inventory_count,0) inventoryCount, ifnull(st.available_count,0) availableCount,
        ifnull(st.lock_count,0) lockCount, ifnull(st.purchase_way_count,0) purchaseWayCount,
        ifnull(st.allocation_way_count,0) allocationWayCount, ifnull(st.total_way_count,0) totalWayCount,
        st.new_purchase_price newPurchasePrice, ps.procurement_section_code purchaseGroupCode, st.tax_cost taxCost,
        ps.procurement_section_name purchaseGroupName, st.create_time createTime, st.update_time updateTime,
        st.create_by_name createByName, st.update_by_name updateByName, pssi.base_product_content baseProductContent,
        CONCAT(pssi.base_product_content, '/', pssi.unit_name) largeUnit, st.tax_rate taxRate
        FROM stock AS st
        LEFT JOIN product_sku_config AS psc ON psc.sku_code = st.sku_code AND psc.transport_center_code = st.transport_center_code
        LEFT JOIN product_sku AS ps ON st.sku_code = ps.sku_code
        LEFT JOIN product_sku_stock_info AS pssi ON st.sku_code = pssi.product_sku_code
        where stock_code = #{stockCode,jdbcType=VARCHAR}
    </select>
    <insert id="insertBatch" parameterType="java.util.List">
        INSERT INTO stock (
        stock_code,
        company_code,
        company_name,
        transport_center_code,
        transport_center_name,
        warehouse_code,
        warehouse_name,
        warehouse_type,
        sku_code,
        sku_name,
        new_delivery,
        new_delivery_name,
        new_purchase_price,
         unit_code,
        unit_name,
        tax_rate,
        tax_cost,
        create_time,
        create_by_name,
        update_time,
        update_by_name
        )
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.stockCode},
            #{item.companyCode},
            #{item.companyName},
            #{item.transportCenterCode},
            #{item.transportCenterName},
            #{item.warehouseCode},
            #{item.warehouseName},
            #{item.warehouseType},
            #{item.skuCode},
            #{item.skuName},
            #{item.newDelivery},
            #{item.newDeliveryName},
            #{item.newPurchasePrice},
            #{item.unitCode},
            #{item.unitName},
            #{item.taxRate},
            #{item.taxCost},
            NOW(),
            #{item.createBy},
            NOW(),
            #{item.updateBy}
            )
        </foreach>
    </insert>
    <update id="updateByPrimaryKey">
        update stock
        <set>
            <if test="stockCode!=null and stockCode!=''">
                stock_code=#{stockCode},
            </if>
            <if test="companyCode!=null and companyCode!=''">
                company_code=#{companyCode},
            </if>
            <if test="companyName!=null and companyName!=''">
                company_name=#{companyName},
            </if>
            <if test="transportCenterCode!=null and transportCenterCode!=''">
                transport_center_code=#{transportCenterCode},
            </if>
            <if test="transportCenterName!=null and transportCenterName!=''">
                transport_center_name=#{transportCenterName},
            </if>
            <if test="warehouseCode!=null and warehouseCode!=''">
                warehouse_code=#{warehouseCode},
            </if>
            <if test="warehouseName!=null and warehouseName!=''">
                warehouse_name=#{warehouseName},
            </if>
            <if test="warehouseType!=null and warehouseType!=''">
                warehouse_type=#{warehouseType},
            </if>
            <if test="skuCode!=null and skuCode!=''">
                sku_code=#{skuCode},
            </if>
            <if test="skuName!=null and skuName!=''">
                sku_name=#{skuName},
            </if>
            <if test="inventoryNum!=null">
                inventory_num=#{inventoryNum},
            </if>
            <if test="availableNum!=null">
                available_num=#{availableNum},
            </if>
            <if test="lockNum!=null">
                lock_num=#{lockNum},
            </if>
            <if test="purchaseWayNum!=null">
                purchase_way_num=#{purchaseWayNum},
            </if>
            <if test="allocationWayNum!=null">
                allocation_way_num=#{allocationWayNum},
            </if>
            <if test="totalWayNum!=null">
                total_way_num=#{totalWayNum},
            </if>
            <if test="newDelivery!=null and newDelivery!=''">
                new_delivery=#{newDelivery},
            </if>
            <if test="newDeliveryName!=null and newDeliveryName!=''">
                new_delivery_name=#{newDeliveryName},
            </if>
            <if test="newPurchasePrice!=null">
                new_purchase_price=#{newPurchasePrice},
            </if>
            <if test="purchaseGroupCode!=null and purchaseGroupCode!=''">
                purchase_group_code=#{purchaseGroupCode},
            </if>
            <if test="purchaseGroupName!=null and purchaseGroupName!=''">
                purchase_group_name=#{purchaseGroupName},
            </if>
            <if test="stockUnitCode!=null and stockUnitCode!=''">
                stock_unit_code=#{stockUnitCode},
            </if>
            <if test="stockUnitName!=null and stockUnitName!=''">
                stock_unit_name=#{stockUnitName},
            </if>
            <if test="taxPrice!=null">
                tax_price=#{taxPrice},
            </if>
            <if test="createTime!=null">
                create_time=#{createTime},
            </if>
            <if test="createBy!=null and createBy!=''">
                create_by=#{createBy},
            </if>
            <if test="updateTime!=null">
                update_time=#{updateTime},
            </if>
            <if test="updateBy!=null and updateBy!=''">
                update_by=#{updateBy},
            </if>
        </set>
        where id=#{id}
    </update>
    <select id="stockByWarehouseAndSku" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"></include>
        from stock
        where transport_center_code in
        <foreach collection="stockList" item="item" open="(" close=")" index="index" separator=",">
            #{item.transportCenterCode}
        </foreach>
        and warehouse_code in
        <foreach collection="stockList" item="item" open="(" close=")" index="index" separator=",">
            #{item.warehouseCode}
        </foreach>
        and sku_code in
        <foreach collection="stockList" item="item" open="(" close=")" index="index" separator=",">
            #{item.skuCode}
        </foreach>
    </select>
    <update id="updateBatch">
        <foreach collection="stocks" item="item" separator=";">
            update stock
            <set>
                <if test="item.stockCode!=null and item.stockCode!=''">
                    stock_code=#{item.stockCode},
                </if>
                <if test="item.companyCode!=null and item.companyCode!=''">
                    company_code=#{item.companyCode},
                </if>
                <if test="item.companyName!=null and item.companyName!=''">
                    company_name=#{item.companyName},
                </if>
                <if test="item.transportCenterCode != null and item.transportCenterCode != ''">
                    transport_center_code=#{item.transportCenterCode},
                </if>
                <if test="item.transportCenterName != null and item.transportCenterName != ''">
                    transport_center_name=#{item.transportCenterName},
                </if>
                <if test="item.warehouseCode != null and item.warehouseCode != ''">
                    warehouse_code=#{item.warehouseCode},
                </if>
                <if test="item.warehouseName != null and item.warehouseName != ''">
                    warehouse_name=#{item.warehouseName},
                </if>
                <if test="item.warehouseType != null and item.warehouseType != ''">
                    warehouse_type=#{item.warehouseType},
                </if>
                <if test="item.skuCode != null and item.skuCode != ''">
                    sku_code=#{item.skuCode},
                </if>
                <if test="item.skuName != null and item.skuName != ''">
                    sku_name=#{item.skuName},
                </if>
                <if test="item.inventoryCount != null">
                    inventory_count=#{item.inventoryCount},
                </if>
                <if test="item.availableCount != null">
                    available_count=#{item.availableCount},
                </if>
                <if test="item.lockCount!=null">
                    lock_count=#{item.lockCount},
                </if>
                <if test="item.purchaseWayCount != null">
                    purchase_way_count=#{item.purchaseWayCount},
                </if>
                <if test="item.allocationWayCount != null">
                    allocation_way_count=#{item.allocationWayCount},
                </if>
                <if test="item.totalWayCount != null">
                    total_way_count=#{item.totalWayCount},
                </if>
                <if test="item.newDelivery!=null and item.newDelivery!=''">
                    new_delivery=#{item.newDelivery},
                </if>
                <if test="item.newDeliveryName!=null and item.newDeliveryName!=''">
                    new_delivery_name=#{item.newDeliveryName},
                </if>
                <if test="item.newPurchasePrice!=null">
                    new_purchase_price=#{item.newPurchasePrice},
                </if>
                <if test="item.unitCode != null and item.unitCode != ''">
                    unit_code=#{item.unitCode},
                </if>
                <if test="item.unitName!=null and item.unitName!=''">
                    unit_name=#{item.unitName},
                </if>
                <if test="item.taxRate!=null">
                    tax_rate=#{item.taxRate},
                </if>
                    update_time=NOW(),
                <if test="item.updateById!=null and item.updateById!=''">
                    update_by_id = #{item.updateById},
                </if>
                <if test="item.updateByName != null and item.updateByName != ''">
                    update_by_name = #{item.updateByName},
                </if>
            </set>
            where id=#{item.id}
        </foreach>
    </update>
    <select id="selectStockLogs" resultMap="StockFlowMap">
        select <include refid="Stock_flow_Column"></include> from stock_flow where stock_code=#{stockCode} order by id desc
    </select>
    <select id="selectGroup" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"></include>,count(1) from stock group by transport_center_code,warehouse_code
    </select>
    <select id="selectListByWareHouseCode" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"></include> from stock where warehouse_code=#{warehouseCode}
    </select>
    <select id="rejectProductInfo" resultType="com.aiqin.bms.scmp.api.purchase.domain.response.reject.RejectApplyDetailHandleResponse">
        select
        s.sku_code skuCode, s.sku_name skuName, su.supply_unit_code supplierCode, su.supply_unit_name supplierName,
        s.transport_center_code transportCenterCode,s.transport_center_name transportCenterName, s.warehouse_code warehouseCode,
        s.warehouse_name warehouseName, psi.unit_code unitCode, psi.unit_name unitName, s.available_count availableCount,
        s.tax_cost productCost, s.new_purchase_price newPurchasePrice, ifnull(su.tax_included_price, 0) purchaseMax,
        ps.product_brand_code brandId, ps.product_brand_name brandName, ps.product_category_code categoryId,
        ps.product_category_name categoryName, psi.spec productSpec, ps.color_code colorCode, ps.color_name colorName,
        ps.model_number modelNumber, ps.goods_gifts productType, ps.product_sort_code productSortCode,
        ps.product_sort_name productSortName, psc.Input_tax_rate taxRate, ps.bar_code barcode, s.inventory_count stockCount,
        ps.procurement_section_code purchaseGroupCode, ps.procurement_section_name purchaseGroupName,
        psc.settlement_method_code settlementMethodCode, psc.settlement_method_name settlementMethodName,
        su.factory_sku_code factorySkuCode, ps.product_code spuCode, ps.product_name spuName
        from stock s inner join product_sku ps on s.sku_code = ps.sku_code
        inner join product_sku_supply_unit su on s.sku_code = su.product_sku_code
        inner join product_sku_checkout psc on s.sku_code = psc.sku_code
        inner join product_sku_stock_info psi on s.sku_code = psi.product_sku_code
        <where>
            ps.del_flag = 0 and s.available_count > 0
            <if test="transportCenterCode != null">
                and s.transport_center_code = #{transportCenterCode,jdbcType=VARCHAR}
            </if>
            <if test="warehouseCode != null">
                and s.warehouse_code = #{warehouseCode,jdbcType=VARCHAR}
            </if>
            <if test="purchaseGroupCode != null">
                and ps.procurement_section_code = #{purchaseGroupCode,jdbcType=VARCHAR}
            </if>
            <if test="supplierCode != null">
                and su.supply_unit_code = #{supplierCode,jdbcType=VARCHAR}
            </if>
            <if test="skuCode != null">
                and s.sku_code = #{skuCode,jdbcType=VARCHAR}
            </if>
            <if test="productType != null">
                and ps.goods_gifts = #{productType,jdbcType=VARCHAR}
            </if>
        </where>
    </select>
    <select id="rejectProductList" resultType="com.aiqin.bms.scmp.api.purchase.domain.response.reject.RejectApplyDetailHandleResponse">
        select
        s.sku_code skuCode, s.sku_name skuName, su.supply_unit_code supplierCode, su.supply_unit_name supplierName,
        s.transport_center_code transportCenterCode,s.transport_center_name transportCenterName, s.warehouse_code warehouseCode,
        s.warehouse_name warehouseName, psi.unit_code unitCode, psi.unit_name unitName, s.available_count availableCount,
        s.tax_cost productCost, s.new_purchase_price newPurchasePrice, ifnull(su.tax_included_price, 0) purchaseMax,
        ps.product_brand_code brandId, ps.product_brand_name brandName, ps.product_category_code categoryId,
        ps.product_category_name categoryName, psi.spec productSpec, ps.color_code colorCode, ps.color_name colorName,
        ps.model_number modelNumber, ps.goods_gifts productType, ps.product_sort_code productSortCode,
        ps.product_sort_name productSortName, psc.Input_tax_rate taxRate, ps.bar_code barcode, s.inventory_count stockCount,
        ps.procurement_section_code purchaseGroupCode, ps.procurement_section_name purchaseGroupName,
        psc.settlement_method_code settlementMethodCode, psc.settlement_method_name settlementMethodName,
        su.factory_sku_code factorySkuCode, ps.product_code spuCode, ps.product_name spuName, w.batch_manage batchManage,
        com.supplier_code supplierCompanyCode, com.supplier_name supplierCompanyName
        from stock s inner join product_sku ps on s.sku_code = ps.sku_code
        inner join product_sku_supply_unit su on s.sku_code = su.product_sku_code
        inner join product_sku_checkout psc on s.sku_code = psc.sku_code
        inner join product_sku_stock_info psi on s.sku_code = psi.product_sku_code
        inner join warehouse w on w.warehouse_code = s.warehouse_code
        inner join supply_company com on com.supply_code = su.supply_unit_code
        <include refid="REJECT_QUERY_SQL"></include>
        LIMIT #{beginIndex,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
    </select>
    <select id="rejectProductListCount" resultType="java.lang.Integer">
        select count(1)
        from stock s inner join product_sku ps on s.sku_code = ps.sku_code
        inner join product_sku_supply_unit su on s.sku_code = su.product_sku_code
        inner join product_sku_checkout psc on s.sku_code = psc.sku_code
        <include refid="REJECT_QUERY_SQL"></include>
    </select>
    <sql id="REJECT_QUERY_SQL">
        <where>
            ps.del_flag = 0
            and s.available_count > 0
            <if test="supplierCode != null">
                and su.supply_unit_code = #{supplierCode,jdbcType=VARCHAR}
            </if>
            <if test="transportCenterCode != null">
                and s.transport_center_code = #{transportCenterCode,jdbcType=VARCHAR}
            </if>
            <if test="warehouseCode != null">
                and s.warehouse_code = #{warehouseCode,jdbcType=VARCHAR}
            </if>
            <if test="skuCode != null">
                and s.sku_code = #{skuCode,jdbcType=VARCHAR}
            </if>
            <if test="skuName != null">
                and s.sku_name like CONCAT(#{skuName,jdbcType=VARCHAR},'%')
            </if>
            <if test="purchaseGroupCode != null">
                and ps.procurement_section_code = #{purchaseGroupCode,jdbcType=VARCHAR}
            </if>
            <if test="productPropertyCode != null">
                and ps.product_property_code = #{productPropertyCode,jdbcType=VARCHAR}
            </if>
            <if test="productPropertyName != null">
                and ps.product_property_name like CONCAT(#{productPropertyName,jdbcType=VARCHAR},'%')
            </if>
            <if test="brandName != null">
                and ps.product_brand_name like CONCAT(#{brandName,jdbcType=VARCHAR},'%')
            </if>
            <if test="categoryName != null">
                and ps.product_category_name like CONCAT(#{categoryName,jdbcType=VARCHAR},'%')
            </if>
            <if test="brandId != null">
                and ps.product_brand_code= #{brandId,jdbcType=VARCHAR}
            </if>
            <if test="categoryId != null">
                and ps.product_category_code like CONCAT( #{categoryId,jdbcType=VARCHAR},'%')
            </if>
            <if test="spuCode != null">
                and ps.product_code= #{spuCode,jdbcType=VARCHAR}
            </if>
            <if test="spuName != null">
                and ps.product_name like CONCAT(#{spuName,jdbcType=VARCHAR},'%')
            </if>
        </where>
    </sql>
    <select id="selectStockSkuList" parameterType="com.aiqin.bms.scmp.api.product.domain.request.QueryStockSkuListReqVo"
            resultType="com.aiqin.bms.scmp.api.product.domain.response.QueryStockSkuListRespVo"
            resultMap="QueryStockSkuListResultMap">
        select
        s.id,s.warehouse_code,s.sku_code,s.sku_name,
        ps.product_category_code,ps.product_category_name,ps.product_sort_code,ps.product_sort_name,
        ps.product_brand_code,ps.product_brand_name,ps.goods_gifts,
        pssi.spec,ps.color_code,ps.color_name,ps.model_number,pssi.unit_code,pssi.unit_name,
        sum(s.available_num) available_num,IFNULL(s.tax_rate,0) tax_rate,IFNULL(s.tax_cost,0) tax_cost
        from stock s
        left join stock_batch sb on s.sku_code = sb.sku_code
        left join product_sku ps on s.sku_code = ps.sku_code
        left join product_sku_stock_info pssi on s.sku_code = pssi.product_sku_code
        <where>
            1 = 1
            <if test="outTransportCenterCode != null and outTransportCenterCode != ''">
                and s.transport_center_code  = #{outTransportCenterCode, jdbcType=VARCHAR}
            </if>
            <if test="outWarehouseCode != null and outWarehouseCode != ''">
                and s.warehouse_code  = #{outWarehouseCode, jdbcType=VARCHAR}
            </if>
            <if test="procurementSectionCode != null and procurementSectionCode != ''">
                and ps.procurement_section_code  = #{procurementSectionCode, jdbcType=VARCHAR}
            </if>
            <if test="inTransportCenterCode != null and inTransportCenterCode != ''">
                and s.transport_center_code = #{inTransportCenterCode, jdbcType=VARCHAR}
            </if>
            <if test="inWarehouseCode != null and inWarehouseCode != ''">
                and s.warehouse_code  = #{inWarehouseCode, jdbcType=VARCHAR}
            </if>
            <if test="skuCode != null and skuCode != ''">
                and s.sku_code =  #{skuCode, jdbcType=VARCHAR}
            </if>
            <if test="skuName != null and skuName != ''">
                and s.sku_name like concat('', #{skuName, jdbcType=VARCHAR}, '%')
            </if>
            <if test="productBrandCode != null and productBrandCode != ''">
                and ps.product_brand_code = #{productBrandCode, jdbcType=VARCHAR}
            </if>
            <if test="productCategoryCode != null and productCategoryCode != ''">
                and ps.product_category_code =  #{productCategoryCode, jdbcType=VARCHAR}
            </if>
            <if test="productPropertyCode != null and productPropertyCode != ''">
                and ps.product_property_code = #{productPropertyCode, jdbcType=VARCHAR}
            </if>
        </where>
        group by s.sku_code
    </select>
    <update id="updateStorehouseById" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update stock st
            <set>
                <if test="item.stockupNum!=null and item.stockupNum!=''">
                    st.stockup_num = #{item.stockupNum,jdbcType=BIGINT},
                </if>
                <if test="item.stockupNum==null or item.stockupNum==''">
                    st.stockup_num = null,
                </if>
                <if test="item.stockupfinishTime!=null and item.stockupfinishTime!=''">
                    st.stockupfinish_time = #{item.stockupfinishTime,jdbcType=VARCHAR},
                </if>
                <if test="item.stockupfinishTime==null or item.stockupfinishTime==''">
                    st.stockupfinish_time = null
                </if>
            </set>
            WHERE  st.id = #{item.id}
        </foreach>
    </update>
    <select id="selectSkuCodeByQueryBatchCodeList" parameterType="String" resultType="com.aiqin.bms.scmp.api.product.domain.response.QueryStockSkuListRespVo">
        SELECT
        sb.batch_code as batchCode,
        date_format(sb.product_date , '%Y-%m-%d %H:%i:%s') as productionDate,
        sb.batch_remark as batchRemark,
        sb.available_num as availableNum
        FROM stock_batch sb
        where 1=1
        <if test="warehouseCode!=null and warehouseCode!=''">
            and sb.warehouse_code=#{warehouseCode}
        </if>
        <if test="skuCode!=null and skuCode!=''">
            and sb.sku_code=#{skuCode}
        </if>
    </select>
    <select id="queryStockBatch" parameterType="com.aiqin.bms.scmp.api.product.domain.request.QueryImportStockSkuListReqVo"
            resultType="com.aiqin.bms.scmp.api.product.domain.response.QueryStockSkuListRespVo" resultMap="QueryStockSkuListResultMap">
        select
        sb.id,sb.warehouse_code,sb.sku_code,sb.sku_name,ps.product_category_code,ps.product_category_name,ps.product_brand_code,ps.product_brand_name,
        ps.goods_gifts,sb.spec,sb.color_code,sb.color_name,sb.model_number,sb.unit_code,sb.unit_name,sb.available_num,sb.batch_code,
        date_format(sb.product_date , '%Y-%m-%d %H:%i:%s') product_date,s.tax_rate,s.tax_cost
        from stock_batch sb
        left join stock s on sb.sku_code = s.sku_code
        left join product_sku ps on sb.sku_code = ps.sku_code
        <where>
            1 = 1
            <if test="outTransportCenterCode != null and outTransportCenterCode != ''">
                and sb.transport_center_code  = #{outTransportCenterCode, jdbcType=VARCHAR}
            </if>
            <if test="outWarehouseCode != null and outWarehouseCode != ''">
                and sb.warehouse_code  = #{outWarehouseCode, jdbcType=VARCHAR}
            </if>
            <if test="procurementSectionCode != null and procurementSectionCode != ''">
                and ps.procurement_section_code  = #{procurementSectionCode, jdbcType=VARCHAR}
            </if>
            <if test="inTransportCenterCode != null and inTransportCenterCode != ''">
                and sb.transport_center_code = #{inTransportCenterCode, jdbcType=VARCHAR}
            </if>
            <if test="inWarehouseCode != null and inWarehouseCode != ''">
                and sb.warehouse_code  = #{inWarehouseCode, jdbcType=VARCHAR}
            </if>
            <if test="skuCode != null and skuCode != ''">
                and sb.sku_code = #{skuCode, jdbcType=VARCHAR}
            </if>
            <if test="skuName != null and skuName != ''">
                and sb.sku_name like concat('', #{skuName, jdbcType=VARCHAR}, '%')
            </if>
            <if test="productBrandCode != null and productBrandCode != ''">
                and ps.product_brand_code = #{productBrandCode, jdbcType=VARCHAR}
            </if>
            <if test="productCategoryCode != null and productCategoryCode != ''">
                and ps.product_category_code = #{productCategoryCode, jdbcType=VARCHAR}
            </if>
            <if test="productPropertyCode != null and productPropertyCode != ''">
                and ps.product_property_code = #{productPropertyCode, jdbcType=VARCHAR}
            </if>
            <if test="skuList != null">
                and sb.sku_code in
                <foreach collection="skuList" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>
    <resultMap id="SkuListForSalePriceMap" type="com.aiqin.bms.scmp.api.product.domain.response.changeprice.QuerySkuInfoRespVO">
        <result column="skuCode" property="skuCode"/>
        <result column="skuName" property="skuName"/>
        <result column="batchCode" property="batchCode"/>
        <result column="productCategoryName" property="productBrandName"/>
        <result column="productBrandName" property="productBrandName"/>
        <result column="spec" property="spec"/>
        <result column="colorName" property="colorName"/>
        <result column="modelNumber" property="modelNumber"/>
        <result column="unitName" property="unitName"/>
        <result column="productSortName" property="productSortName"/>
        <result column="goodsGifts" property="goodsGifts"/>
        <result column="productPropertyName" property="productPropertyName"/>
        <result column="spuName" property="spuName"/>
        <result column="spuCode" property="spuCode"/>
        <result column="warehouseBatchNumber" property="warehouseBatchNumber"/>
        <result column="transportCenterCode" property="transportCenterCode"/>
        <result column="transportCenterName" property="transportCenterName"/>
        <result column="warehouseCode" property="warehouseCode"/>
        <result column="warehouseName" property="warehouseName"/>
        <result column="batchRemark" property="batchRemark"/>
        <result column="productTime" property="productTime"/>
        <collection property="priceChannelList" javaType="java.util.List" ofType="com.aiqin.bms.scmp.api.product.domain.response.changeprice.PriceChannelForChangePrice" column="changePriceType = changePriceType,companyCode = companyCode,skuCode = skuCode" select="getSaleChannelList" />
    </resultMap>
    <select id="getSkuBatchForChangePrice" resultMap="SkuListForSalePriceMap">
        select
        a.sku_code              as skuCode,
        a.sku_name              as skuName,
        a.batch_code              as batchCode,
        b.product_category_name as productCategoryName,
        b.product_brand_name    as productBrandName,
        d.spec                  as spec,
        b.color_name            as colorName,
        b.model_number          as modelNumber,
        d.unit_name             as unitName,
        b.product_sort_name     as productSortName,
        b.goods_gifts           as goodsGifts,
        b.product_property_name as productPropertyName,
        b.product_name          as spuName,
        b.product_code          as spuCode,
        a.batch_code      as warehouseBatchNumber,
        a.batch_info_code      as warehouseBatchName,
        a.transport_center_code as transportCenterCode,
        a.transport_center_name as transportCenterName,
        a.warehouse_code        as warehouseCode,
        a.warehouse_name        as warehouseName,
        a.batch_remark          as batchRemark,
        a.product_date       as productTime,
        #{changePriceType}      as changePriceType,
        #{companyCode}          as companyCode
        from stock_batch a
        left join product_sku b
        on a.sku_code = b.sku_code
        left join product c
        on b.spu_code = c.product_code
        left join product_sku_purchase_info d
        on a.sku_code = d.product_sku_code
        where b.procurement_section_code = #{purchaseGroupCode}  and b.company_code = #{companyCode}
        <if test="skuCode!=null and skuCode!=''">
            AND a.sku_code = #{skuCode,jdbcType=VARCHAR}
        </if>
        <if test="skuName!=null and skuName!=''">
            AND a.sku_name LIKE CONCAT('',#{skuName,jdbcType=VARCHAR},'%')
        </if>
        <if test="productCategoryName!=null and productCategoryName!=''">
            AND b.product_category_name LIKE CONCAT('',#{productCategoryName,jdbcType=VARCHAR},'%')
        </if>
        <if test="productBrandName!=null and productBrandName!=''">
            AND b.product_brand_name LIKE CONCAT('',#{productBrandName,jdbcType=VARCHAR},'%')
        </if>
        <if test="productPropertyCode!=null and productPropertyCode!=''">
            AND b.product_property_code = #{productPropertyCode,jdbcType=VARCHAR}
        </if>
        <if test="spuCode!=null and spuCode!=''">
            AND c.product_code = #{spuCode,jdbcType=VARCHAR}
        </if>
        <if test="spuName!=null and spuName!=''">
            AND c.product_name LIKE CONCAT('',#{spuName,jdbcType=VARCHAR},'%')
        </if>
    </select>
    <select id="getBatch" resultType="com.aiqin.bms.scmp.api.product.domain.response.changeprice.BatchInfo">
       select
          a.batch_code      as warehouseBatchNumber,
          a.batch_info_code      as warehouseBatchName,
          a.batch_code      as batchCode,
          a.transport_center_code as transportCenterCode,
          a.transport_center_name as transportCenterName,
          a.warehouse_code        as warehouseCode,
          a.warehouse_name        as warehouseName,
          a.batch_remark          as batchRemark,
          a.product_date       as productTime
       from stock_batch a
       where a.sku_code = #{skuCode} and a.company_code = #{companyCode}
    </select>
    <resultMap id="getSaleChannelList" type="com.aiqin.bms.scmp.api.product.domain.response.changeprice.PriceChannelForChangePrice">
        <result column="priceItemCode" property="priceItemCode"/>
        <result column="priceItemName" property="priceItemName"/>
        <result column="priceTypeCode" property="priceTypeCode"/>
        <result column="priceTypeName" property="priceTypeName"/>
        <result column="priceAttributeCode" property="priceAttributeCode"/>
        <result column="priceAttributeName" property="priceAttributeName"/>
        <result column="oldPrice" property="oldPrice"/>
        <result column="taxCost" property="taxCost"/>
    </resultMap>
    <select id="getSaleChannelList" resultMap="getSaleChannelList">
    select
      f.price_project_code    as priceItemCode,
      f.price_project_name    as priceItemName,
      f.price_type_code       as priceTypeCode,
      f.price_type_name       as priceTypeName,
      f.price_category_code   as priceAttributeCode,
      f.price_category_name   as priceAttributeName,
      ifnull(g.price_tax,0) as oldPrice,
      ifnull(h.stock_tax_cost,0) as taxCost
      from price_project f
       left join product_sku_price_info g
      on #{skuCode} = g.sku_code and g.price_item_code = f.price_project_code and g.be_contain_area = 0
       left join tax_cost_log_stock h
      on g.sku_code = h.sku_code and DATE_FORMAT(h.tax_date,'%Y-%m-%d') = DATE_FORMAT(DATE_SUB(NOW(),INTERVAL 1 DAY),'%Y-%m-%d')
      where  f.company_code = #{companyCode}
  </select>
    <resultMap id="queryStockBatchForAllo" type="com.aiqin.bms.scmp.api.product.domain.response.allocation.SkuBatchRespVO">
        <result column="skuCode" property="skuCode"/>
        <result column="skuName" property="skuName"/>
        <result column="warehouseBatchNumber" property="warehouseBatchNumber"/>
        <result column="transportCenterCode" property="transportCenterCode"/>
        <result column="transportCenterName" property="transportCenterName"/>
        <result column="warehouseCode" property="warehouseCode"/>
        <result column="warehouseName" property="warehouseName"/>
        <result column="batchRemark" property="batchRemark"/>
        <result column="productTime" property="productTime"/>
        <result column="availableNum" property="availableNum"/>
    </resultMap>
    <select id="queryStockBatchForAllo" resultMap="queryStockBatchForAllo">
        select
        a.sku_code              as skuCode,
        a.sku_name              as skuName,
        a.stock_batch_code      as warehouseBatchNumber,
        a.transport_center_code as transportCenterCode,
        a.transport_center_name as transportCenterName,
        a.warehouse_code        as warehouseCode,
        a.warehouse_name        as warehouseName,
        a.batch_remark          as batchRemark,
        a.product_date          as productTime,
        a.available_count       as availableNum
        from stock_batch a
        where 1=1
        <if test="transportCenterCode!=null and transportCenterCode!=''">
            AND a.transport_center_code = #{transportCenterCode,jdbcType=VARCHAR}
        </if>
        <if test="warehouseCode!=null and warehouseCode!=''">
            AND a.warehouse_code = #{warehouseCode,jdbcType=VARCHAR}
        </if>
        <if test="skuCodes != null and skuCodes.size>0">
            AND a.sku_code in
            <foreach collection="skuCodes" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
    </select>
    <select id="selectWarehouseType" resultType="java.lang.Integer">
        select warehouse_type_code as warehouseType
        FROM warehouse
        where warehouse_code = #{warehouseCode,jdbcType=VARCHAR}
    </select>
    <select id="stockCountByOtherInfo" resultType="com.aiqin.bms.scmp.api.purchase.domain.response.PurchaseStockResponse">
        SELECT s.sku_code as skuCode,s.sku_name as skuName,s.transport_center_code as transportCenterCode,
        s.transport_center_name as transportCenterName,s.warehouse_code as warehouseCode,s.warehouse_name as warehouseName,
        s.available_num as availableNum, sc.large_inventory_warn_day as LargeInventoryWarnDay, ba.days_turnover as daysTurnover,
        s.tax_cost as taxCost, ba.sales_avg_3_month_num as salesAvgMonthNum
        FROM stock s
        INNER JOIN product_sku_config sc
        on s.sku_code = sc.sku_code and s.transport_center_code = sc.transport_center_code
        LEFT JOIN bi_app_suggest_replenishment ba
        on ba.sku_code = s.sku_code and s.transport_center_code = ba.transport_center_code
        WHERE sc.config_status = 0 and s.sku_code = #{skuCode,jdbcType=VARCHAR}
        and s.transport_center_code = #{transportCenterCode,jdbcType=VARCHAR} and s.warehouse_code = #{warehouseCode,jdbcType=VARCHAR}
        limit 1
    </select>
    <select id="selectSkuCost" resultType="com.aiqin.bms.scmp.api.product.domain.pojo.Stock">
        select
        sku_code skuCode,sku_name skuName,sum(tax_cost*inventory_num) taxCost,sum(inventory_num) inventoryNum
        from stock
        group by sku_code
    </select>
    <insert id="insertReplaceAll">
        replace into stock(
        stock_code,company_code,company_name,transport_center_code,transport_center_name,warehouse_code,warehouse_name,
        warehouse_type,sku_code,sku_name,inventory_num,available_num,lock_num,purchase_way_num,allocation_way_num,total_way_num,
        new_delivery,new_delivery_name,new_purchase_price,purchase_group_code,purchase_group_name,stock_unit_code,stock_unit_name,
        tax_price,tax_rate,tax_cost,update_time,update_by,stockup_num)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.stockCode},
            #{item.companyCode},
            #{item.companyName},
            #{item.transportCenterCode},
            #{item.transportCenterName},
            #{item.warehouseCode},
            #{item.warehouseName},
            #{item.warehouseType},
            #{item.skuCode},
            #{item.skuName},
            #{item.inventoryNum},
            #{item.availableNum},
            #{item.lockNum},
            #{item.purchaseWayNum},
            #{item.allocationWayNum},
            #{item.totalWayNum},
            #{item.newDelivery},
            #{item.newDeliveryName},
            #{item.newPurchasePrice},
            #{item.purchaseGroupCode},
            #{item.purchaseGroupName},
            #{item.stockUnitCode},
            #{item.stockUnitName},
            #{item.taxPrice},
            #{item.taxRate},
            #{item.taxCost},
            NOW(),
            #{item.updateBy},
            #{item.stockupNum})
        </foreach>
    </insert>
    <resultMap id="SapProductStock" type="com.aiqin.bms.scmp.api.abutment.domain.response.StockResponse">
        <result column="sku_code" jdbcType="VARCHAR" property="skuCode"/>
        <result column="product_category_code" jdbcType="VARCHAR" property="productCategoryCode"/>
        <result column="tax_cost" jdbcType="DECIMAL" property="taxCost"/>
        <result column="transport_center_code" jdbcType="VARCHAR" property="transportCenterCode"/>
        <result column="transport_center_name" jdbcType="VARCHAR" property="transportCenterName"/>
        <result column="warehouse_code" jdbcType="VARCHAR" property="warehouseCode"/>
        <result column="warehouse_name" jdbcType="VARCHAR" property="warehouseName"/>
        <result column="procurement_section_code" jdbcType="VARCHAR" property="procurementSectionCode"/>
    </resultMap>
    <select id="listBySkuCodes" resultMap="SapProductStock">
        select
        ps.sku_code,ps.sku_name,ps.product_category_code,psc.Input_tax_rate,s.transport_center_code,s.transport_center_name,
        s.warehouse_code,s.warehouse_name,ps.procurement_section_code
        from
        stock as s
        left join product_sku as ps on s.sku_code = ps.sku_code
        inner join product_sku_checkout psc on s.sku_code = psc.sku_code
        where s.sku_code in
        <foreach collection="list" separator="," open="(" close=")" item="item">
            #{item}
        </foreach>
    </select>
    <select id="stockInfoList" resultType="com.aiqin.bms.scmp.api.product.domain.pojo.Stock">
        select
        sku_code skuCode, sku_name skuName, ifnull(inventory_num,0) as inventoryNum, ifnull(available_num,0) as availableNum,
        ifnull(total_way_num,0) as totalWayNum, ifnull(tax_cost,0) as taxCost, ifnull(new_purchase_price,0) as newPurchasePrice,
        stock_code as stockCode, transport_center_code AS transportCenterCode, warehouse_code as warehouseCode, warehouse_type as warehouseType
        from stock
        <where>
            <if test="skuList!=null">
                sku_code IN <foreach collection="skuList" item="id" index="index" open="(" close=")" separator=",">#{id}</foreach>
            </if>
        </where>
    </select>
    <select id="selectSkuCodeByQueryAvailableSum" resultType="java.lang.Long">
             SELECT
        sum(available_num) as availableNum
        FROM stock
        WHERE sku_code = #{skuCode}
    </select>
    <select id="selectSkuCodeBySaleSum" resultType="java.lang.Long">
        SELECT
        sum(available_num) as availableNum
        FROM stock
        <where>
            warehouse_type = 1 and
            sku_code = #{skuCode} and
            company_code=#{companyCode}
        </where>
    </select>

    <select id="selectSkuCodeBySpecialSum" resultType="java.lang.Long">
        SELECT
        sum(available_num) as availableNum
        FROM stock
        <where>
            warehouse_type = 2 and
            sku_code = #{skuCode} and
            company_code=#{companyCode}
        </where>
    </select>

    <select id="selectSkuAndCompanyByQueryAvailableSum" resultType="java.lang.Long">
        SELECT
        sum(available_num) as availableNum
        FROM stock
        <where>
            sku_code = #{skuCode} and
            company_code=#{companyCode}
        </where>
    </select>

    <select id="byCityCodeAndprovinceCode"
            resultType="java.lang.String">
        SELECT distinct s.sku_code skuCode
        FROM logistics_center_area l
        inner  join  stock s on l.logistics_center_code=s.transport_center_code
        left  join use_tag_record ut on ut.tag_code =s.sku_code
        left  join  product_sku_price_info ps on ps.sku_code=s.sku_code
        <where>
            l.del_flag=0 and
            l.province_code = #{provinceCode} and
            s.warehouse_type=1 and
            l.city_code=#{cityCode}
            <if test="exitStock == 0 and exitStock != '' ">
                and s.available_num >0
            </if>
            <if test="tagCode != null and tagCode != '' ">
                and ut.tag_code = #{tagCode,jdbcType=VARCHAR}
                and   ut.tag_type_code='2'
            </if>
            <if test="orderByType!=null and orderByType=='0' ">
                and ps.company_code = #{companyCode}
                and ps.be_contain_area = 0 and ps.price_attribute_code in (1,2) and  ps.price_type_code = '3'
            </if>
        </where>
        <if test="orderByType!=null and orderByType=='1' ">
            order by s.available_num desc
        </if>
        <if test="orderByType!=null and orderByType=='0' ">
            order by  ps.price_tax  desc
        </if>
        limit 100
    </select>
    <select id="byCityAndProvinceAndtransportCenterCode"
            resultType="com.aiqin.bms.scmp.api.product.domain.response.stock.StockBatchRespVO">
        SELECT s.transport_center_code transportCenterCode,
        ps.sku_code skuCode,
        ps.sku_name skuName,
        s.available_num availableNum
        FROM logistics_center_area l
        inner  join  stock s on l.logistics_center_code=s.transport_center_code
        inner  join  product_sku ps on s.sku_code=ps.sku_code
        <where>
            l.del_flag=0 and
            l.province_code = #{provinceCode} and
            s.warehouse_type=1 and
            l.city_code=#{cityCode} and
            s.transport_center_code= #{transportCenterCode}
        </where>
        order by s.logistics_center_code desc
        limit 1
    </select>
    <select id="findSpareWarehouse"
            resultType="com.aiqin.bms.scmp.api.product.domain.response.stock.StockBatchRespVO">
        select
        <include refid="com.aiqin.bms.scmp.api.product.mapper.ProductSkuConfigDraftMapper.List_Column"/>
        from product_sku_config a
        left join product_sku_config_spare_warehouse b
        on a.config_code = b.config_code
        left join product_sku c
        on a.sku_code = c.sku_code
        where a.del_flag = 0
        and a.sku_code = #{skuCode}
        and a.transport_center_code= #{transportCenterCode}
    </select>
    <select id="stockInfoByBatchDetail" resultType="com.aiqin.bms.scmp.api.product.domain.response.stock.StockBatchDetailResponse">
        select
          a.sku_code skuCode, a.sku_name skuName, b.product_category_code productCategoryCode,
          b.product_category_name productCategoryName, b.product_brand_code productBrandCode,
          b.product_brand_name productBrandName, b.color_name colorName, b.model_number modelNumber,
          d.spec productSpec, d.unit_name unitName, CONCAT(d.base_product_content, '/', d.unit_name) boxGauge,
          b.product_property_code productPropertyCode, b.product_property_name productPropertyName,
          c.config_status configStatus, a.warehouse_code warehouseCode, a.warehouse_name warehouseName,
          a.transport_center_code transportCenterCode, a.transport_center_name transportCenterName,
          a.warehouse_type warehouseType, a.inventory_count inventoryCount, a.available_count availableCount,
          a.lock_count lockCount, a.purchase_way_count purchaseWayCount, a.allocation_way_count allocationWayCount,
          a.total_way_count totalWayCount, a.new_purchase_price newPurchaseAmount, a.new_delivery_name newSupplierName,
          ifnull(a.tax_rate, 0) taxRate, ifnull(a.tax_cost, 0) taxCost
        from stock a
        inner join product_sku b on a.sku_code = b.sku_code
        inner join product_sku_config c on a.sku_code = c.sku_code and c.transport_center_code = a.transport_center_code
        inner join product_sku_stock_info d on a.sku_code = d.product_sku_code
        where a.sku_code = #{skuCode,jdbcType=VARCHAR}
        and a.warehouse_code = #{warehouseCode,jdbcType=VARCHAR}
    </select>
    <select id="stockCountByReject" resultType="java.lang.Integer">
        select
          available_count availableCount
        from stock
        where sku_code = #{skuCode,jdbcType=VARCHAR}
        and warehouse_code = #{warehouseCode,jdbcType=VARCHAR}
    </select>
</mapper>