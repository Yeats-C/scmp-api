<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aiqin.bms.scmp.api.product.mapper.AllocationMapper">
  <resultMap id="BaseResultMap" type="com.aiqin.bms.scmp.api.product.domain.pojo.Allocation">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="allocation_code" jdbcType="VARCHAR" property="allocationCode" />
    <result column="callout_logistics_center_code" jdbcType="VARCHAR" property="calloutLogisticsCenterCode" />
    <result column="callout_logistics_center_name" jdbcType="VARCHAR" property="calloutLogisticsCenterName" />
    <result column="callout_warehouse_code" jdbcType="VARCHAR" property="calloutWarehouseCode" />
    <result column="callout_warehouse_name" jdbcType="VARCHAR" property="calloutWarehouseName" />
    <result column="inventory_attributes_code" jdbcType="VARCHAR" property="inventoryAttributesCode" />
    <result column="inventory_attributes_name" jdbcType="VARCHAR" property="inventoryAttributesName" />
    <result column="purchase_group_code" jdbcType="VARCHAR" property="purchaseGroupCode" />
    <result column="purchase_group_name" jdbcType="VARCHAR" property="purchaseGroupName" />
    <result column="callin_logistics_center_code" jdbcType="VARCHAR" property="callinLogisticsCenterCode" />
    <result column="callin_logistics_center_name" jdbcType="VARCHAR" property="callinLogisticsCenterName" />
    <result column="callin_warehouse_code" jdbcType="VARCHAR" property="callinWarehouseCode" />
    <result column="callin_warehouse_name" jdbcType="VARCHAR" property="callinWarehouseName" />
    <result column="allocation_type_code" jdbcType="TINYINT" property="allocationTypeCode" />
    <result column="allocation_type_name" jdbcType="VARCHAR" property="allocationTypeName" />
    <result column="principal" jdbcType="VARCHAR" property="principal" />
    <result column="quantity" jdbcType="BIGINT" property="quantity" />
    <result column="tax_refund_amount" jdbcType="BIGINT" property="taxRefundAmount" />
    <result column="outbound_oder_code" jdbcType="VARCHAR" property="outboundOderCode" />
    <result column="inbound_oder_code" jdbcType="VARCHAR" property="inboundOderCode" />
    <result column="allocation_status_code" jdbcType="TINYINT" property="allocationStatusCode" />
    <result column="allocation_status_name" jdbcType="VARCHAR" property="allocationStatusName" />
    <result column="del_flag" jdbcType="TINYINT" property="delFlag" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="form_no"  jdbcType="VARCHAR" property="formNo"/>
    <result column="company_code" jdbcType="VARCHAR" property="companyCode" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
  </resultMap>
  <!--<sql id="Example_Where_Clause">-->
    <!--<where>-->
      <!--<foreach collection="oredCriteria" item="criteria" separator="or">-->
        <!--<if test="criteria.valid">-->
          <!--<trim prefix="(" prefixOverrides="and" suffix=")">-->
            <!--<foreach collection="criteria.criteria" item="criterion">-->
              <!--<choose>-->
                <!--<when test="criterion.noValue">-->
                  <!--and ${criterion.condition}-->
                <!--</when>-->
                <!--<when test="criterion.singleValue">-->
                  <!--and ${criterion.condition} #{criterion.value}-->
                <!--</when>-->
                <!--<when test="criterion.betweenValue">-->
                  <!--and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}-->
                <!--</when>-->
                <!--<when test="criterion.listValue">-->
                  <!--and ${criterion.condition}-->
                  <!--<foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">-->
                    <!--#{listItem}-->
                  <!--</foreach>-->
                <!--</when>-->
              <!--</choose>-->
            <!--</foreach>-->
          <!--</trim>-->
        <!--</if>-->
      <!--</foreach>-->
    <!--</where>-->
  <!--</sql>-->
  <!--<sql id="Update_By_Example_Where_Clause">-->
    <!--<where>-->
      <!--<foreach collection="example.oredCriteria" item="criteria" separator="or">-->
        <!--<if test="criteria.valid">-->
          <!--<trim prefix="(" prefixOverrides="and" suffix=")">-->
            <!--<foreach collection="criteria.criteria" item="criterion">-->
              <!--<choose>-->
                <!--<when test="criterion.noValue">-->
                  <!--and ${criterion.condition}-->
                <!--</when>-->
                <!--<when test="criterion.singleValue">-->
                  <!--and ${criterion.condition} #{criterion.value}-->
                <!--</when>-->
                <!--<when test="criterion.betweenValue">-->
                  <!--and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}-->
                <!--</when>-->
                <!--<when test="criterion.listValue">-->
                  <!--and ${criterion.condition}-->
                  <!--<foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">-->
                    <!--#{listItem}-->
                  <!--</foreach>-->
                <!--</when>-->
              <!--</choose>-->
            <!--</foreach>-->
          <!--</trim>-->
        <!--</if>-->
      <!--</foreach>-->
    <!--</where>-->
  <!--</sql>-->
  <sql id="Base_Column_List">
    id, allocation_code, callout_logistics_center_code, callout_logistics_center_name, 
    callout_warehouse_code, callout_warehouse_name, inventory_attributes_code, inventory_attributes_name, 
    purchase_group_code, purchase_group_name, callin_logistics_center_code, callin_logistics_center_name, 
    callin_warehouse_code, callin_warehouse_name, allocation_type_code, allocation_type_name, 
    principal, quantity, tax_refund_amount, outbound_oder_code, inbound_oder_code, allocation_status_code,
    allocation_status_name, del_flag, create_time, create_by, update_time, update_by,form_no,company_code,company_name
  </sql>
  <!--<select id="selectByExample" parameterType="com.aiqin.mgs.product.api.pojo.AllocationExample" resultMap="BaseResultMap">-->
    <!--select-->
    <!--<if test="distinct">-->
      <!--distinct-->
    <!--</if>-->
    <!--<include refid="Base_Column_List" />-->
    <!--from allocation-->
    <!--<if test="_parameter != null">-->
      <!--<include refid="Example_Where_Clause" />-->
    <!--</if>-->
    <!--<if test="orderByClause != null">-->
      <!--order by ${orderByClause}-->
    <!--</if>-->
  <!--</select>-->

  <select id="getList" parameterType="com.aiqin.bms.scmp.api.product.domain.request.allocation.QueryAllocationReqVo" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List">
    </include>
    FROM allocation
    where
    1=1
    <if test="createStartTime != null ">
      AND create_time &gt;=#{createStartTime,jdbcType=TIMESTAMP}
    </if>
    <if test="createEndTime != null">
      AND create_time &lt;=#{createEndTime,jdbcType=TIMESTAMP}
    </if>
    <if test="allocationCode != null and allocationCode != '' ">
      AND allocation_code  LIKE  CONCAT(CONCAT('%',#{allocationCode},'%'))
    </if>
    <if test="allocationStatusCode != null">
      AND allocation_status_code = #{allocationStatusCode}
    </if>
    <if test="calloutLogisticsCenterName != null and calloutLogisticsCenterName != ''">
      AND callout_logistics_center_name LIKE  CONCAT(CONCAT('%',#{calloutLogisticsCenterName},'%'))
    </if>
    <if test="calloutWarehouseName != null and calloutWarehouseName != '' ">
      AND callout_warehouse_name LIKE  CONCAT(CONCAT('%',#{calloutWarehouseName},'%'))
    </if>
    <if test="outboundOderCode != null and outboundOderCode != ''">
      AND outbound_oder_code LIKE  CONCAT(CONCAT('%',#{outboundOderCode},'%'))
    </if>
    <if test="callinLogisticsCenterName != null and callinLogisticsCenterName != ''">
      AND callin_logistics_center_name LIKE  CONCAT(CONCAT('%',#{callinLogisticsCenterName},'%'))
    </if>
    <if test="callinWarehouseName != null and callinWarehouseName != '' ">
      AND callin_warehouse_name LIKE  CONCAT(CONCAT('%',#{callinWarehouseName},'%'))
    </if>
    <if test="inboundOderCode != null and inboundOderCode != ''">
      AND inbound_oder_code LIKE  CONCAT(CONCAT('%',#{inboundOderCode},'%'))
    </if>
    <if test="companyCode != null and companyCode != ''">
      AND company_code = #{companyCode}
    </if>
    order by create_time desc
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from allocation
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from allocation
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <!--<delete id="deleteByExample" parameterType="com.aiqin.mgs.product.api.pojo.AllocationExample">-->
    <!--delete from allocation-->
    <!--<if test="_parameter != null">-->
      <!--<include refid="Example_Where_Clause" />-->
    <!--</if>-->
  <!--</delete>-->
  <insert id="insert"  parameterType="com.aiqin.bms.scmp.api.product.domain.pojo.Allocation">
    insert into allocation (id, allocation_code, callout_logistics_center_code, 
      callout_logistics_center_name, callout_warehouse_code, 
      callout_warehouse_name, inventory_attributes_code, 
      inventory_attributes_name, purchase_group_code, 
      purchase_group_name, callin_logistics_center_code, 
      callin_logistics_center_name, callin_warehouse_code, 
      callin_warehouse_name, allocation_type_code, 
      allocation_type_name, principal, quantity, 
      tax_refund_amount, outbound_oder_code, inbound_oder_code,
      allocation_status_code, allocation_status_name, 
      del_flag, create_time, create_by, 
      update_time, update_by ,form_no,,company_code,company_name)
    values (#{id,jdbcType=BIGINT}, #{allocationCode,jdbcType=VARCHAR}, #{calloutLogisticsCenterCode,jdbcType=VARCHAR}, 
      #{calloutLogisticsCenterName,jdbcType=VARCHAR}, #{calloutWarehouseCode,jdbcType=VARCHAR}, 
      #{calloutWarehouseName,jdbcType=VARCHAR}, #{inventoryAttributesCode,jdbcType=VARCHAR}, 
      #{inventoryAttributesName,jdbcType=VARCHAR}, #{purchaseGroupCode,jdbcType=VARCHAR}, 
      #{purchaseGroupName,jdbcType=VARCHAR}, #{callinLogisticsCenterCode,jdbcType=VARCHAR}, 
      #{callinLogisticsCenterName,jdbcType=VARCHAR}, #{callinWarehouseCode,jdbcType=VARCHAR}, 
      #{callinWarehouseName,jdbcType=VARCHAR}, #{allocationTypeCode,jdbcType=TINYINT}, 
      #{allocationTypeName,jdbcType=VARCHAR}, #{principal,jdbcType=VARCHAR}, #{quantity,jdbcType=BIGINT}, 
      #{taxRefundAmount,jdbcType=BIGINT}, #{outboundOderCode,jdbcType=VARCHAR}, #{inboundOderCode,jdbcType=VARCHAR},
      #{allocationStatusCode,jdbcType=TINYINT}, #{allocationStatusName,jdbcType=VARCHAR}, 
      #{delFlag,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR},
     #{company_code, jdbcType=VARCHAR },#{company_name,jdbcType=VARCHAR}
</insert>
  <insert id="insertSelective"  keyProperty="id" useGeneratedKeys="true" parameterType="com.aiqin.bms.scmp.api.product.domain.pojo.Allocation">
    insert into allocation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="allocationCode != null">
        allocation_code,
      </if>
      <if test="calloutLogisticsCenterCode != null">
        callout_logistics_center_code,
      </if>
      <if test="calloutLogisticsCenterName != null">
        callout_logistics_center_name,
      </if>
      <if test="calloutWarehouseCode != null">
        callout_warehouse_code,
      </if>
      <if test="calloutWarehouseName != null">
        callout_warehouse_name,
      </if>
      <if test="inventoryAttributesCode != null">
        inventory_attributes_code,
      </if>
      <if test="inventoryAttributesName != null">
        inventory_attributes_name,
      </if>
      <if test="purchaseGroupCode != null">
        purchase_group_code,
      </if>
      <if test="purchaseGroupName != null">
        purchase_group_name,
      </if>
      <if test="callinLogisticsCenterCode != null">
        callin_logistics_center_code,
      </if>
      <if test="callinLogisticsCenterName != null">
        callin_logistics_center_name,
      </if>
      <if test="callinWarehouseCode != null">
        callin_warehouse_code,
      </if>
      <if test="callinWarehouseName != null">
        callin_warehouse_name,
      </if>
      <if test="allocationTypeCode != null">
        allocation_type_code,
      </if>
      <if test="allocationTypeName != null">
        allocation_type_name,
      </if>
      <if test="principal != null">
        principal,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="taxRefundAmount != null">
        tax_refund_amount,
      </if>
      <if test="outboundOderCode != null">
        outbound_oder_code,
      </if>
      <if test="inboundOderCode != null">
        inbound_oder_code,
      </if>
      <if test="allocationStatusCode != null">
        allocation_status_code,
      </if>
      <if test="allocationStatusName != null">
        allocation_status_name,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="formNo !=null">
        form_no,
      </if>
      <if test="companyCode != null">
        company_code,
      </if>
      <if test="companyName != null">
        company_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="allocationCode != null">
        #{allocationCode,jdbcType=VARCHAR},
      </if>
      <if test="calloutLogisticsCenterCode != null">
        #{calloutLogisticsCenterCode,jdbcType=VARCHAR},
      </if>
      <if test="calloutLogisticsCenterName != null">
        #{calloutLogisticsCenterName,jdbcType=VARCHAR},
      </if>
      <if test="calloutWarehouseCode != null">
        #{calloutWarehouseCode,jdbcType=VARCHAR},
      </if>
      <if test="calloutWarehouseName != null">
        #{calloutWarehouseName,jdbcType=VARCHAR},
      </if>
      <if test="inventoryAttributesCode != null">
        #{inventoryAttributesCode,jdbcType=VARCHAR},
      </if>
      <if test="inventoryAttributesName != null">
        #{inventoryAttributesName,jdbcType=VARCHAR},
      </if>
      <if test="purchaseGroupCode != null">
        #{purchaseGroupCode,jdbcType=VARCHAR},
      </if>
      <if test="purchaseGroupName != null">
        #{purchaseGroupName,jdbcType=VARCHAR},
      </if>
      <if test="callinLogisticsCenterCode != null">
        #{callinLogisticsCenterCode,jdbcType=VARCHAR},
      </if>
      <if test="callinLogisticsCenterName != null">
        #{callinLogisticsCenterName,jdbcType=VARCHAR},
      </if>
      <if test="callinWarehouseCode != null">
        #{callinWarehouseCode,jdbcType=VARCHAR},
      </if>
      <if test="callinWarehouseName != null">
        #{callinWarehouseName,jdbcType=VARCHAR},
      </if>
      <if test="allocationTypeCode != null">
        #{allocationTypeCode,jdbcType=TINYINT},
      </if>
      <if test="allocationTypeName != null">
        #{allocationTypeName,jdbcType=VARCHAR},
      </if>
      <if test="principal != null">
        #{principal,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=BIGINT},
      </if>
      <if test="taxRefundAmount != null">
        #{taxRefundAmount,jdbcType=BIGINT},
      </if>
      <if test="outboundOderCode != null">
        #{outboundOderCode,jdbcType=VARCHAR},
      </if>
      <if test="inboundOderCode != null">
        #{inboundOderCode,jdbcType=VARCHAR},
      </if>
      <if test="allocationStatusCode != null">
        #{allocationStatusCode,jdbcType=TINYINT},
      </if>
      <if test="allocationStatusName != null">
        #{allocationStatusName,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="formNo !=null">
       #{formNo,jdbcType=VARCHAR},
      </if>
      <if test="companyCode != null">
        #{companyCode,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <!--<select id="countByExample" parameterType="com.aiqin.mgs.product.api.pojo.AllocationExample" resultType="java.lang.Long">-->
    <!--select count(*) from allocation-->
    <!--<if test="_parameter != null">-->
      <!--<include refid="Example_Where_Clause" />-->
    <!--</if>-->
  <!--</select>-->
  <!--<update id="updateByExampleSelective" parameterType="map">-->
    <!--update allocation-->
    <!--<set>-->
      <!--<if test="record.id != null">-->
        <!--id = #{record.id,jdbcType=BIGINT},-->
      <!--</if>-->
      <!--<if test="record.allocationCode != null">-->
        <!--allocation_code = #{record.allocationCode,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="record.calloutLogisticsCenterCode != null">-->
        <!--callout_logistics_center_code = #{record.calloutLogisticsCenterCode,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="record.calloutLogisticsCenterName != null">-->
        <!--callout_logistics_center_name = #{record.calloutLogisticsCenterName,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="record.calloutWarehouseCode != null">-->
        <!--callout_warehouse_code = #{record.calloutWarehouseCode,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="record.calloutWarehouseName != null">-->
        <!--callout_warehouse_name = #{record.calloutWarehouseName,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="record.inventoryAttributesCode != null">-->
        <!--inventory_attributes_code = #{record.inventoryAttributesCode,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="record.inventoryAttributesName != null">-->
        <!--inventory_attributes_name = #{record.inventoryAttributesName,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="record.purchaseGroupCode != null">-->
        <!--purchase_group_code = #{record.purchaseGroupCode,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="record.purchaseGroupName != null">-->
        <!--purchase_group_name = #{record.purchaseGroupName,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="record.callinLogisticsCenterCode != null">-->
        <!--callin_logistics_center_code = #{record.callinLogisticsCenterCode,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="record.callinLogisticsCenterName != null">-->
        <!--callin_logistics_center_name = #{record.callinLogisticsCenterName,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="record.callinWarehouseCode != null">-->
        <!--callin_warehouse_code = #{record.callinWarehouseCode,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="record.callinWarehouseName != null">-->
        <!--callin_warehouse_name = #{record.callinWarehouseName,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="record.allocationTypeCode != null">-->
        <!--allocation_type_code = #{record.allocationTypeCode,jdbcType=TINYINT},-->
      <!--</if>-->
      <!--<if test="record.allocationTypeName != null">-->
        <!--allocation_type_name = #{record.allocationTypeName,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="record.principal != null">-->
        <!--principal = #{record.principal,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="record.quantity != null">-->
        <!--quantity = #{record.quantity,jdbcType=BIGINT},-->
      <!--</if>-->
      <!--<if test="record.taxRefundAmount != null">-->
        <!--tax_refund_amount = #{record.taxRefundAmount,jdbcType=BIGINT},-->
      <!--</if>-->
      <!--<if test="record.outboundOderCode != null">-->
        <!--outbound_oder_code = #{record.outboundOderCode,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="record.inboundOderCode != null">-->
        <!--inbound_oder_code = #{record.inboundOderCode,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="record.allocationStatusCode != null">-->
        <!--allocation_status_code = #{record.allocationStatusCode,jdbcType=TINYINT},-->
      <!--</if>-->
      <!--<if test="record.allocationStatusName != null">-->
        <!--allocation_status_name = #{record.allocationStatusName,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="record.delFlag != null">-->
        <!--del_flag = #{record.delFlag,jdbcType=TINYINT},-->
      <!--</if>-->
      <!--<if test="record.createTime != null">-->
        <!--create_time = #{record.createTime,jdbcType=TIMESTAMP},-->
      <!--</if>-->
      <!--<if test="record.createBy != null">-->
        <!--create_by = #{record.createBy,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="record.updateTime != null">-->
        <!--update_time = #{record.updateTime,jdbcType=TIMESTAMP},-->
      <!--</if>-->
      <!--<if test="record.updateBy != null">-->
        <!--update_by = #{record.updateBy,jdbcType=VARCHAR},-->
      <!--</if>-->
    <!--</set>-->
    <!--<if test="_parameter != null">-->
      <!--<include refid="Update_By_Example_Where_Clause" />-->
    <!--</if>-->
  <!--</update>-->
  <!--<update id="updateByExample" parameterType="map">-->
    <!--update allocation-->
    <!--set id = #{record.id,jdbcType=BIGINT},-->
      <!--allocation_code = #{record.allocationCode,jdbcType=VARCHAR},-->
      <!--callout_logistics_center_code = #{record.calloutLogisticsCenterCode,jdbcType=VARCHAR},-->
      <!--callout_logistics_center_name = #{record.calloutLogisticsCenterName,jdbcType=VARCHAR},-->
      <!--callout_warehouse_code = #{record.calloutWarehouseCode,jdbcType=VARCHAR},-->
      <!--callout_warehouse_name = #{record.calloutWarehouseName,jdbcType=VARCHAR},-->
      <!--inventory_attributes_code = #{record.inventoryAttributesCode,jdbcType=VARCHAR},-->
      <!--inventory_attributes_name = #{record.inventoryAttributesName,jdbcType=VARCHAR},-->
      <!--purchase_group_code = #{record.purchaseGroupCode,jdbcType=VARCHAR},-->
      <!--purchase_group_name = #{record.purchaseGroupName,jdbcType=VARCHAR},-->
      <!--callin_logistics_center_code = #{record.callinLogisticsCenterCode,jdbcType=VARCHAR},-->
      <!--callin_logistics_center_name = #{record.callinLogisticsCenterName,jdbcType=VARCHAR},-->
      <!--callin_warehouse_code = #{record.callinWarehouseCode,jdbcType=VARCHAR},-->
      <!--callin_warehouse_name = #{record.callinWarehouseName,jdbcType=VARCHAR},-->
      <!--allocation_type_code = #{record.allocationTypeCode,jdbcType=TINYINT},-->
      <!--allocation_type_name = #{record.allocationTypeName,jdbcType=VARCHAR},-->
      <!--principal = #{record.principal,jdbcType=VARCHAR},-->
      <!--quantity = #{record.quantity,jdbcType=BIGINT},-->
      <!--tax_refund_amount = #{record.taxRefundAmount,jdbcType=BIGINT},-->
      <!--outbound_oder_code = #{record.outboundOderCode,jdbcType=VARCHAR},-->
      <!--inbound_oder_code = #{record.inboundOderCode,jdbcType=VARCHAR},-->
      <!--allocation_status_code = #{record.allocationStatusCode,jdbcType=TINYINT},-->
      <!--allocation_status_name = #{record.allocationStatusName,jdbcType=VARCHAR},-->
      <!--del_flag = #{record.delFlag,jdbcType=TINYINT},-->
      <!--create_time = #{record.createTime,jdbcType=TIMESTAMP},-->
      <!--create_by = #{record.createBy,jdbcType=VARCHAR},-->
      <!--update_time = #{record.updateTime,jdbcType=TIMESTAMP},-->
      <!--update_by = #{record.updateBy,jdbcType=VARCHAR}-->
    <!--<if test="_parameter != null">-->
      <!--<include refid="Update_By_Example_Where_Clause" />-->
    <!--</if>-->
  <!--</update>-->
  <update id="updateByPrimaryKeySelective" parameterType="com.aiqin.bms.scmp.api.product.domain.pojo.Allocation">
    update allocation
    <set>
      <if test="allocationCode != null">
        allocation_code = #{allocationCode,jdbcType=VARCHAR},
      </if>
      <if test="calloutLogisticsCenterCode != null">
        callout_logistics_center_code = #{calloutLogisticsCenterCode,jdbcType=VARCHAR},
      </if>
      <if test="calloutLogisticsCenterName != null">
        callout_logistics_center_name = #{calloutLogisticsCenterName,jdbcType=VARCHAR},
      </if>
      <if test="calloutWarehouseCode != null">
        callout_warehouse_code = #{calloutWarehouseCode,jdbcType=VARCHAR},
      </if>
      <if test="calloutWarehouseName != null">
        callout_warehouse_name = #{calloutWarehouseName,jdbcType=VARCHAR},
      </if>
      <if test="inventoryAttributesCode != null">
        inventory_attributes_code = #{inventoryAttributesCode,jdbcType=VARCHAR},
      </if>
      <if test="inventoryAttributesName != null">
        inventory_attributes_name = #{inventoryAttributesName,jdbcType=VARCHAR},
      </if>
      <if test="purchaseGroupCode != null">
        purchase_group_code = #{purchaseGroupCode,jdbcType=VARCHAR},
      </if>
      <if test="purchaseGroupName != null">
        purchase_group_name = #{purchaseGroupName,jdbcType=VARCHAR},
      </if>
      <if test="callinLogisticsCenterCode != null">
        callin_logistics_center_code = #{callinLogisticsCenterCode,jdbcType=VARCHAR},
      </if>
      <if test="callinLogisticsCenterName != null">
        callin_logistics_center_name = #{callinLogisticsCenterName,jdbcType=VARCHAR},
      </if>
      <if test="callinWarehouseCode != null">
        callin_warehouse_code = #{callinWarehouseCode,jdbcType=VARCHAR},
      </if>
      <if test="callinWarehouseName != null">
        callin_warehouse_name = #{callinWarehouseName,jdbcType=VARCHAR},
      </if>
      <if test="allocationTypeCode != null">
        allocation_type_code = #{allocationTypeCode,jdbcType=TINYINT},
      </if>
      <if test="allocationTypeName != null">
        allocation_type_name = #{allocationTypeName,jdbcType=VARCHAR},
      </if>
      <if test="principal != null">
        principal = #{principal,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=BIGINT},
      </if>
      <if test="taxRefundAmount != null">
        tax_refund_amount = #{taxRefundAmount,jdbcType=BIGINT},
      </if>
      <if test="outboundOderCode != null">
        outbound_oder_code = #{outboundOderCode,jdbcType=VARCHAR},
      </if>
      <if test="inboundOderCode != null">
        inbound_oder_code = #{inboundOderCode,jdbcType=VARCHAR},
      </if>
      <if test="allocationStatusCode != null">
        allocation_status_code = #{allocationStatusCode,jdbcType=TINYINT},
      </if>
      <if test="allocationStatusName != null">
        allocation_status_name = #{allocationStatusName,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="formNo !=null">
        form_no = #{formNo,jdbcType=VARCHAR},
      </if>
      <if test="companyCode != null">
        company_code=#{companyCode,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        company_name=#{companyName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aiqin.bms.scmp.api.product.domain.pojo.Allocation">
    update allocation
    set allocation_code = #{allocationCode,jdbcType=VARCHAR},
      callout_logistics_center_code = #{calloutLogisticsCenterCode,jdbcType=VARCHAR},
      callout_logistics_center_name = #{calloutLogisticsCenterName,jdbcType=VARCHAR},
      callout_warehouse_code = #{calloutWarehouseCode,jdbcType=VARCHAR},
      callout_warehouse_name = #{calloutWarehouseName,jdbcType=VARCHAR},
      inventory_attributes_code = #{inventoryAttributesCode,jdbcType=VARCHAR},
      inventory_attributes_name = #{inventoryAttributesName,jdbcType=VARCHAR},
      purchase_group_code = #{purchaseGroupCode,jdbcType=VARCHAR},
      purchase_group_name = #{purchaseGroupName,jdbcType=VARCHAR},
      callin_logistics_center_code = #{callinLogisticsCenterCode,jdbcType=VARCHAR},
      callin_logistics_center_name = #{callinLogisticsCenterName,jdbcType=VARCHAR},
      callin_warehouse_code = #{callinWarehouseCode,jdbcType=VARCHAR},
      callin_warehouse_name = #{callinWarehouseName,jdbcType=VARCHAR},
      allocation_type_code = #{allocationTypeCode,jdbcType=TINYINT},
      allocation_type_name = #{allocationTypeName,jdbcType=VARCHAR},
      principal = #{principal,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=BIGINT},
      tax_refund_amount = #{taxRefundAmount,jdbcType=BIGINT},
      outbound_oder_code = #{outboundOderCode,jdbcType=VARCHAR},
      inbound_oder_code = #{inboundOderCode,jdbcType=VARCHAR},
      allocation_status_code = #{allocationStatusCode,jdbcType=TINYINT},
      allocation_status_name = #{allocationStatusName,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      form_no = #{formNo,jdbcType=VARCHAR},
      company_code = #{companyCode,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByFormNO" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from allocation
    where form_no = #{formNo,jdbcType=VARCHAR}
  </select>

  <select id="findIdByFormNo" parameterType="java.lang.String" resultType="long">
    select
      id
    from allocation
    where form_no = #{formNo,jdbcType=BIGINT}
  </select>
  <select id="selectByCode" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from allocation
    where allocation_code = #{allocationCode,jdbcType=VARCHAR}
  </select>
</mapper>